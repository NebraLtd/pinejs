{
	"models": [
		{
			"apiRoot": "resin",
			"modelName": "balena",
			"migrationsPath": "/usr/src/app/src/models/migrations/balena",
			"initSqlPath": "/usr/src/app/src/models/../../.balena-init.sql",
			"abstractSql": {
				"tables": {
					"actor": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "actor",
						"indexes": [],
						"idField": "id",
						"resourceName": "actor",
						"modelName": "actor",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"permission": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "permission",
						"indexes": [],
						"idField": "id",
						"resourceName": "permission",
						"modelName": "permission",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "name"
					},
					"role": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "role",
						"indexes": [],
						"idField": "id",
						"resourceName": "role",
						"modelName": "role",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "name"
					},
					"role-has-permission": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "role",
								"required": true,
								"references": {
									"resourceName": "role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "permission",
								"required": true,
								"references": {
									"resourceName": "permission",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "role-has-permission",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"role",
									"permission"
								]
							}
						],
						"idField": "id",
						"resourceName": "role-has-permission",
						"modelName": "role has permission",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "actor",
								"required": true,
								"references": {
									"resourceName": "actor",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "username",
								"required": true,
								"references": {
									"resourceName": "username",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Hashed",
								"fieldName": "password",
								"required": false,
								"references": {
									"resourceName": "password",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "jwt secret",
								"required": false,
								"references": {
									"resourceName": "jwt secret",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "email",
								"required": false,
								"references": {
									"resourceName": "email",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "internal note",
								"required": false,
								"references": {
									"resourceName": "internal note",
									"fieldName": null
								}
							},
							{
								"dataType": "File",
								"fieldName": "two factor key",
								"required": false,
								"references": {
									"resourceName": "two factor key",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is two factor protected",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "has disabled newsletter",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "has been sent verification email",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is verified",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "must be verified",
								"required": true
							},
							{
								"dataType": "Text",
								"fieldName": "unverified email",
								"required": false,
								"references": {
									"resourceName": "unverified email",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "email verification code",
								"required": false,
								"references": {
									"resourceName": "email verification code",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Date Time",
								"fieldName": "can use email verification code until-expiry date",
								"required": false,
								"references": {
									"resourceName": "expiry date",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "password reset code",
								"required": false,
								"references": {
									"resourceName": "password reset code",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "can reset password until-expiry date",
								"required": false,
								"references": {
									"resourceName": "expiry date",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "first name",
								"required": false,
								"references": {
									"resourceName": "first name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "last name",
								"required": false,
								"references": {
									"resourceName": "last name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "account type",
								"required": false,
								"references": {
									"resourceName": "account type",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "has legacy link to-organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "user",
						"indexes": [],
						"idField": "id",
						"resourceName": "user",
						"modelName": "user",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "username"
					},
					"user-has-role": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "role",
								"required": true,
								"references": {
									"resourceName": "role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Date Time",
								"fieldName": "expiry date",
								"required": false,
								"references": {
									"resourceName": "expiry date",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "user-has-role",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"user",
									"role"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-has-role",
						"modelName": "user has role",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user-has-permission": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "permission",
								"required": true,
								"references": {
									"resourceName": "permission",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Date Time",
								"fieldName": "expiry date",
								"required": false,
								"references": {
									"resourceName": "expiry date",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "user-has-permission",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"user",
									"permission"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-has-permission",
						"modelName": "user has permission",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"api key": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "key",
								"required": true,
								"references": {
									"resourceName": "key",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is of-actor",
								"required": true,
								"references": {
									"resourceName": "actor",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": false,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "description",
								"required": false,
								"references": {
									"resourceName": "description",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "api key",
						"indexes": [],
						"idField": "id",
						"resourceName": "api key",
						"modelName": "api key",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "key"
					},
					"api key-has-role": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "api key",
								"required": true,
								"references": {
									"resourceName": "api key",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "role",
								"required": true,
								"references": {
									"resourceName": "role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "api key-has-role",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"api key",
									"role"
								]
							}
						],
						"idField": "id",
						"resourceName": "api key-has-role",
						"modelName": "api key has role",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"api key-has-permission": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "api key",
								"required": true,
								"references": {
									"resourceName": "api key",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "permission",
								"required": true,
								"references": {
									"resourceName": "permission",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "api key-has-permission",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"api key",
									"permission"
								]
							}
						],
						"idField": "id",
						"resourceName": "api key-has-permission",
						"modelName": "api key has permission",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application type": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "supports web url",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "supports multicontainer",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "supports gateway mode",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "needs-os version range",
								"required": false,
								"references": {
									"resourceName": "os version range",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "requires payment",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is legacy",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Text",
								"fieldName": "description",
								"required": false,
								"references": {
									"resourceName": "description",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "maximum device count",
								"required": false,
								"references": {
									"resourceName": "maximum device count",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "application type",
						"indexes": [],
						"idField": "id",
						"resourceName": "application type",
						"modelName": "application type",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"cpu architecture": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "cpu architecture",
						"indexes": [],
						"idField": "id",
						"resourceName": "cpu architecture",
						"modelName": "cpu architecture",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"config": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "key",
								"required": true,
								"references": {
									"resourceName": "key",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "scope",
								"required": false,
								"references": {
									"resourceName": "scope",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "description",
								"required": false,
								"references": {
									"resourceName": "description",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "config",
						"indexes": [],
						"idField": "id",
						"resourceName": "config",
						"modelName": "config",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"device type": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is of-cpu architecture",
								"required": true,
								"references": {
									"resourceName": "cpu architecture",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Text",
								"fieldName": "logo",
								"required": false,
								"references": {
									"resourceName": "logo",
									"fieldName": null
								}
							},
							{
								"dataType": "JSON",
								"fieldName": "contract",
								"required": false,
								"references": {
									"resourceName": "contract",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-device family",
								"required": false,
								"references": {
									"resourceName": "device family",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is private",
								"required": true
							}
						],
						"primitive": false,
						"name": "device type",
						"indexes": [],
						"idField": "id",
						"resourceName": "device type",
						"modelName": "device type",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"device family": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is manufactured by-device manufacturer",
								"required": false,
								"references": {
									"resourceName": "device manufacturer",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "device family",
						"indexes": [],
						"idField": "id",
						"resourceName": "device family",
						"modelName": "device family",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"device manufacturer": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "device manufacturer",
						"indexes": [],
						"idField": "id",
						"resourceName": "device manufacturer",
						"modelName": "device manufacturer",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"image": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Date Time",
								"fieldName": "start timestamp",
								"required": true,
								"references": {
									"resourceName": "start timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "dockerfile",
								"required": false,
								"references": {
									"resourceName": "dockerfile",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is a build of-service",
								"required": true,
								"references": {
									"resourceName": "application-has-service name",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Big Integer",
								"fieldName": "image size",
								"required": false,
								"references": {
									"resourceName": "image size",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "is stored at-image location",
								"required": true,
								"references": {
									"resourceName": "image location",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "project type",
								"required": false,
								"references": {
									"resourceName": "project type",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "error message",
								"required": false,
								"references": {
									"resourceName": "error message",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "build log",
								"required": false,
								"references": {
									"resourceName": "build log",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "push timestamp",
								"required": false,
								"references": {
									"resourceName": "push timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": true,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "content hash",
								"required": false,
								"references": {
									"resourceName": "content hash",
									"fieldName": null
								}
							},
							{
								"dataType": "JSON",
								"fieldName": "contract",
								"required": false,
								"references": {
									"resourceName": "contract",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "image",
						"indexes": [],
						"idField": "id",
						"resourceName": "image",
						"modelName": "image",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each image that has a status that is equal to \"success\", has a push timestamp.",
								"name": "image$EsnlFqzUfM0jeomVNVuB+GgghnPSgJlMCa0zMBA6cV8=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Equals",
											[
												"Field",
												"status"
											],
											[
												"Text",
												"success"
											]
										],
										[
											"Exists",
											[
												"Field",
												"status"
											]
										],
										[
											"NotExists",
											[
												"Field",
												"push timestamp"
											]
										]
									]
								]
							}
						]
					},
					"organization": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "handle",
								"required": true,
								"references": {
									"resourceName": "handle",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Boolean",
								"fieldName": "is active",
								"required": true
							},
							{
								"dataType": "Text",
								"fieldName": "company name",
								"required": false,
								"references": {
									"resourceName": "company name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "internal company name",
								"required": false,
								"references": {
									"resourceName": "internal company name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "internal note",
								"required": false,
								"references": {
									"resourceName": "internal note",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "billing account code",
								"required": false,
								"references": {
									"resourceName": "billing account code",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Date Time",
								"fieldName": "has past due invoice since-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "tradegecko company id",
								"required": false,
								"references": {
									"resourceName": "tradegecko company id",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "industry",
								"required": false,
								"references": {
									"resourceName": "industry",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "website",
								"required": false,
								"references": {
									"resourceName": "website",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "organization",
						"indexes": [],
						"idField": "id",
						"resourceName": "organization",
						"modelName": "organization",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each name (Auth) of an organization, has a Length (Type) that is greater than 0.",
								"name": "organization$E+cBryACQrrUVLO1vZD8cqyxwba+nOu+T7UYno7mUZ0=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThan",
												[
													"Integer",
													0
												],
												[
													"CharacterLength",
													[
														"Field",
														"name"
													]
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"name"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each handle of an organization, has a Length (Type) that is greater than 0.",
								"name": "organization$/jm+9cFLOktW7UDAih9SkCWgaZxrnJBTAFjsx8Lrc7A=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThan",
												[
													"Integer",
													0
												],
												[
													"CharacterLength",
													[
														"Field",
														"handle"
													]
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"handle"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each organization that has a billing account code, has a billing account code that has a Length (Type) that is greater than 0 and is less than or equal to 50.",
								"name": "organization$t1IpNW1jB1Fj04JKzjCUqcztS+9Erx047N21Y8oziyc=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"billing account code"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"billing account code"
														]
													]
												],
												[
													"LessThanOrEqual",
													[
														"CharacterLength",
														[
															"Field",
															"billing account code"
														]
													],
													[
														"Integer",
														50
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"billing account code"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"billing account code"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each organization that has a tradegecko company id, has a tradegecko company id that is greater than 0.",
								"name": "organization$zUopD7sIywaHcDBxcEHlpacjB9/9AqKzXsqG2i4QnnQ=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"tradegecko company id"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"Field",
														"tradegecko company id"
													]
												],
												[
													"Exists",
													[
														"Field",
														"tradegecko company id"
													]
												]
											]
										]
									]
								]
							}
						]
					},
					"service instance": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "service type",
								"required": true,
								"references": {
									"resourceName": "service type",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "ip address",
								"required": true,
								"references": {
									"resourceName": "ip address",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "last heartbeat",
								"required": true,
								"references": {
									"resourceName": "last heartbeat",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "service instance",
						"indexes": [],
						"idField": "id",
						"resourceName": "service instance",
						"modelName": "service instance",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"application": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "actor",
								"required": true,
								"references": {
									"resourceName": "actor",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "should track latest release",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "is of-class",
								"required": true,
								"references": {
									"resourceName": "class",
									"fieldName": null
								},
								"checks": [
									[
										"In",
										[
											"Field",
											"is of-class"
										],
										[
											"Text",
											"fleet"
										],
										[
											"Text",
											"block"
										],
										[
											"Text",
											"app"
										]
									]
								]
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Text",
								"fieldName": "app name",
								"required": true,
								"references": {
									"resourceName": "app name",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-device type",
								"required": true,
								"references": {
									"resourceName": "device type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be running-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "depends on-application",
								"required": false,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application type",
								"required": true,
								"references": {
									"resourceName": "application type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is host",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is archived",
								"required": true
							},
							{
								"dataType": "Text",
								"fieldName": "uuid",
								"required": true,
								"references": {
									"resourceName": "uuid",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Boolean",
								"fieldName": "is public",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "is accessible by support until-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is discoverable",
								"required": true
							},
							{
								"dataType": "Text",
								"fieldName": "is stored at-repository url",
								"required": false,
								"references": {
									"resourceName": "repository url",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "public organization",
								"required": true,
								"references": {
									"resourceName": "public organization",
									"fieldName": "id"
								},
								"computed": [
									"SelectQuery",
									[
										"Select",
										[
											[
												"ReferencedField",
												"application",
												"organization"
											]
										]
									]
								]
							}
						],
						"primitive": false,
						"name": "application",
						"indexes": [],
						"idField": "id",
						"resourceName": "application",
						"modelName": "application",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each application has an app name that has a Length (Type) that is greater than or equal to 4 and is less than or equal to 100.",
								"name": "application$Rlu1vWu2xL/ssYhMPT7xj1zIn00+4AkgpcvOQN9Lr+s=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThanOrEqual",
												[
													"Integer",
													4
												],
												[
													"CharacterLength",
													[
														"Field",
														"app name"
													]
												]
											],
											[
												"LessThanOrEqual",
												[
													"CharacterLength",
													[
														"Field",
														"app name"
													]
												],
												[
													"Integer",
													100
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"app name"
													]
												]
											],
											[
												"Exists",
												[
													"Field",
													"app name"
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each application has a uuid that has a Length (Type) that is equal to 32.",
								"name": "application$GZ8FNlwwxFjgC1YvG6LoHCW/ECfWTpQLmNYKUJQoSXI=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"Equals",
												[
													"CharacterLength",
													[
														"Field",
														"uuid"
													]
												],
												[
													"Integer",
													32
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"uuid"
													]
												]
											],
											[
												"Exists",
												[
													"Field",
													"uuid"
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each application that is stored at a repository url, is stored at a repository url that has a Length (Type) that is greater than 0 and is less than or equal to 500.",
								"name": "application$5xYJVg6Ag2DCiKEisR++cj963bBd0CqYQiLCJtzWv9E=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"is stored at-repository url"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"is stored at-repository url"
														]
													]
												],
												[
													"LessThanOrEqual",
													[
														"CharacterLength",
														[
															"Field",
															"is stored at-repository url"
														]
													],
													[
														"Integer",
														500
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"is stored at-repository url"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"is stored at-repository url"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each application that is public, is stored at a repository url.",
								"name": "application$BOqpQfeWHdcXjPXncobEiZztwJXoxoKEyM6LSUH2D+4=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Equals",
											[
												"Field",
												"is public"
											],
											[
												"Boolean",
												true
											]
										],
										[
											"NotExists",
											[
												"Field",
												"is stored at-repository url"
											]
										]
									]
								]
							}
						]
					},
					"application-has-env var name": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "application environment variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-env var name",
						"modelName": "application has env var name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-name": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "application config variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-name",
						"modelName": "application has name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-service name": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "service name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "service",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application",
									"service name"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-service name",
						"modelName": "application has service name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-service name-has-label name": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "service",
								"required": true,
								"references": {
									"resourceName": "application-has-service name",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "label name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "service label",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"service",
									"label name"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-service name-has-label name",
						"modelName": "service has label name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-service name-has-name": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "service",
								"required": true,
								"references": {
									"resourceName": "application-has-service name",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "service environment variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"service",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-service name-has-name",
						"modelName": "service has name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-tag key": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "tag key",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "application tag",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application",
									"tag key"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-tag key",
						"modelName": "application has tag key",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"checks": [
							{
								"description": "It is necessary that each application tag has a tag key that has a Length (Type) that is greater than 0.",
								"name": "application tag$zPAVMu9ZY2npomham40YGgXx5N6Hau03dIo6x9gf6/E=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThan",
												[
													"Integer",
													0
												],
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Equals",
												[
													"Field",
													"tag key"
												],
												[
													"Field",
													"tag key"
												]
											],
											[
												"Exists",
												[
													"Field",
													"tag key"
												]
											]
										]
									]
								]
							}
						]
					},
					"device": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "actor",
								"required": true,
								"references": {
									"resourceName": "actor",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "api heartbeat state",
								"required": true,
								"references": {
									"resourceName": "api heartbeat state",
									"fieldName": null
								},
								"checks": [
									[
										"In",
										[
											"Field",
											"api heartbeat state"
										],
										[
											"Text",
											"online"
										],
										[
											"Text",
											"offline"
										],
										[
											"Text",
											"timeout"
										],
										[
											"Text",
											"unknown"
										]
									]
								]
							},
							{
								"dataType": "Text",
								"fieldName": "uuid",
								"required": true,
								"references": {
									"resourceName": "uuid",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "local id",
								"required": false,
								"references": {
									"resourceName": "local id",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "device name",
								"required": false,
								"references": {
									"resourceName": "device name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "note",
								"required": false,
								"references": {
									"resourceName": "note",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is of-device type",
								"required": true,
								"references": {
									"resourceName": "device type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-application",
								"required": false,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is online",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "last connectivity event",
								"required": false,
								"references": {
									"resourceName": "last connectivity event",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is connected to vpn",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "last vpn event",
								"required": false,
								"references": {
									"resourceName": "last vpn event",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "is locked until-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "logs channel",
								"required": false,
								"references": {
									"resourceName": "logs channel",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "public address",
								"required": false,
								"references": {
									"resourceName": "public address",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "vpn address",
								"required": false,
								"references": {
									"resourceName": "vpn address",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "ip address",
								"required": false,
								"references": {
									"resourceName": "ip address",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "mac address",
								"required": false,
								"references": {
									"resourceName": "mac address",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "memory usage",
								"required": false,
								"references": {
									"resourceName": "memory usage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "memory total",
								"required": false,
								"references": {
									"resourceName": "memory total",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "storage block device",
								"required": false,
								"references": {
									"resourceName": "storage block device",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "storage usage",
								"required": false,
								"references": {
									"resourceName": "storage usage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "storage total",
								"required": false,
								"references": {
									"resourceName": "storage total",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "cpu usage",
								"required": false,
								"references": {
									"resourceName": "cpu usage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "cpu temp",
								"required": false,
								"references": {
									"resourceName": "cpu temp",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is undervolted",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "cpu id",
								"required": false,
								"references": {
									"resourceName": "cpu id",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is running-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "download progress",
								"required": false,
								"references": {
									"resourceName": "download progress",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": false,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os version",
								"required": false,
								"references": {
									"resourceName": "os version",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os variant",
								"required": false,
								"references": {
									"resourceName": "os variant",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "supervisor version",
								"required": false,
								"references": {
									"resourceName": "supervisor version",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "provisioning progress",
								"required": false,
								"references": {
									"resourceName": "provisioning progress",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "provisioning state",
								"required": false,
								"references": {
									"resourceName": "provisioning state",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "api port",
								"required": false,
								"references": {
									"resourceName": "api port",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "api secret",
								"required": false,
								"references": {
									"resourceName": "api secret",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is managed by-service instance",
								"required": false,
								"references": {
									"resourceName": "service instance",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be running-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be operated by-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is managed by-device",
								"required": false,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be managed by-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-user",
								"required": false,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "latitude",
								"required": false,
								"references": {
									"resourceName": "latitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "longitude",
								"required": false,
								"references": {
									"resourceName": "longitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "custom latitude",
								"required": false,
								"references": {
									"resourceName": "custom latitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "custom longitude",
								"required": false,
								"references": {
									"resourceName": "custom longitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "location",
								"required": false,
								"references": {
									"resourceName": "location",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "is accessible by support until-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is web accessible",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is active",
								"required": true
							},
							{
								"fieldName": "overall status",
								"dataType": "Short Text",
								"computed": [
									"Case",
									[
										"When",
										[
											"Or",
											[
												"In",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Ordered"
												],
												[
													"EmbeddedText",
													"Preparing"
												]
											],
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"status"
													],
													[
														"EmbeddedText",
														"Shipped"
													]
												]
											]
										],
										[
											"ToLower",
											[
												"ReferencedField",
												"device",
												"status"
											]
										]
									],
									[
										"When",
										[
											"Equals",
											[
												"ReferencedField",
												"device",
												"is active"
											],
											[
												"Boolean",
												false
											]
										],
										[
											"EmbeddedText",
											"inactive"
										]
									],
									[
										"When",
										[
											"Equals",
											[
												"ReferencedField",
												"device",
												"provisioning state"
											],
											[
												"EmbeddedText",
												"Post-Provisioning"
											]
										],
										[
											"EmbeddedText",
											"post-provisioning"
										]
									],
									[
										"When",
										[
											"And",
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"In",
													[
														"ReferencedField",
														"device",
														"api heartbeat state"
													],
													[
														"EmbeddedText",
														"offline"
													],
													[
														"EmbeddedText",
														"unknown"
													]
												]
											],
											[
												"NotExists",
												[
													"ReferencedField",
													"device",
													"last connectivity event"
												]
											]
										],
										[
											"EmbeddedText",
											"configuring"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"is online"
												],
												[
													"Boolean",
													false
												]
											],
											[
												"In",
												[
													"ReferencedField",
													"device",
													"api heartbeat state"
												],
												[
													"EmbeddedText",
													"offline"
												],
												[
													"EmbeddedText",
													"unknown"
												]
											]
										],
										[
											"EmbeddedText",
											"offline"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Exists",
												[
													"ReferencedField",
													"device",
													"download progress"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Downloading"
												]
											]
										],
										[
											"EmbeddedText",
											"updating"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"ReferencedField",
												"device",
												"provisioning progress"
											]
										],
										[
											"EmbeddedText",
											"configuring"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"SelectQuery",
												[
													"Select",
													[]
												],
												[
													"From",
													[
														"Table",
														"image install"
													]
												],
												[
													"Where",
													[
														"And",
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"device"
															],
															[
																"ReferencedField",
																"device",
																"id"
															]
														],
														[
															"Exists",
															[
																"ReferencedField",
																"image install",
																"download progress"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"status"
															],
															[
																"EmbeddedText",
																"Downloading"
															]
														]
													]
												]
											]
										],
										[
											"EmbeddedText",
											"updating"
										]
									],
									[
										"Else",
										[
											"EmbeddedText",
											"idle"
										]
									]
								]
							},
							{
								"fieldName": "overall progress",
								"dataType": "Integer",
								"computed": [
									"Case",
									[
										"When",
										[
											"Or",
											[
												"In",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Ordered"
												],
												[
													"EmbeddedText",
													"Preparing"
												]
											],
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"status"
													],
													[
														"EmbeddedText",
														"Shipped"
													]
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"is active"
												],
												[
													"Boolean",
													false
												]
											]
										],
										[
											"Null"
										]
									],
									[
										"When",
										[
											"Equals",
											[
												"ReferencedField",
												"device",
												"provisioning state"
											],
											[
												"EmbeddedText",
												"Post-Provisioning"
											]
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										]
									],
									[
										"When",
										[
											"And",
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"In",
													[
														"ReferencedField",
														"device",
														"api heartbeat state"
													],
													[
														"EmbeddedText",
														"offline"
													],
													[
														"EmbeddedText",
														"unknown"
													]
												]
											],
											[
												"NotExists",
												[
													"ReferencedField",
													"device",
													"last connectivity event"
												]
											]
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"is online"
												],
												[
													"Boolean",
													false
												]
											],
											[
												"In",
												[
													"ReferencedField",
													"device",
													"api heartbeat state"
												],
												[
													"EmbeddedText",
													"offline"
												],
												[
													"EmbeddedText",
													"unknown"
												]
											]
										],
										[
											"Null"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Exists",
												[
													"ReferencedField",
													"device",
													"download progress"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Downloading"
												]
											]
										],
										[
											"ReferencedField",
											"device",
											"download progress"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"ReferencedField",
												"device",
												"provisioning progress"
											]
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"SelectQuery",
												[
													"Select",
													[]
												],
												[
													"From",
													[
														"Table",
														"image install"
													]
												],
												[
													"Where",
													[
														"And",
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"device"
															],
															[
																"ReferencedField",
																"device",
																"id"
															]
														],
														[
															"Exists",
															[
																"ReferencedField",
																"image install",
																"download progress"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"status"
															],
															[
																"EmbeddedText",
																"Downloading"
															]
														]
													]
												]
											]
										],
										[
											"SelectQuery",
											[
												"Select",
												[
													[
														"Cast",
														[
															"Round",
															[
																"Average",
																[
																	"Coalesce",
																	[
																		"ReferencedField",
																		"image install",
																		"download progress"
																	],
																	[
																		"Number",
																		100
																	]
																]
															]
														],
														"Integer"
													]
												]
											],
											[
												"From",
												[
													"Table",
													"image install"
												]
											],
											[
												"Where",
												[
													"And",
													[
														"Equals",
														[
															"ReferencedField",
															"image install",
															"device"
														],
														[
															"ReferencedField",
															"device",
															"id"
														]
													],
													[
														"NotEquals",
														[
															"ReferencedField",
															"image install",
															"status"
														],
														[
															"EmbeddedText",
															"deleted"
														]
													],
													[
														"Or",
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"status"
															],
															[
																"EmbeddedText",
																"Downloading"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"is provided by-release"
															],
															[
																"Coalesce",
																[
																	"ReferencedField",
																	"device",
																	"should be running-release"
																],
																[
																	"SelectQuery",
																	[
																		"Select",
																		[
																			[
																				"ReferencedField",
																				"application",
																				"should be running-release"
																			]
																		]
																	],
																	[
																		"From",
																		[
																			"Table",
																			"application"
																		]
																	],
																	[
																		"Where",
																		[
																			"Equals",
																			[
																				"ReferencedField",
																				"device",
																				"belongs to-application"
																			],
																			[
																				"ReferencedField",
																				"application",
																				"id"
																			]
																		]
																	]
																]
															]
														]
													]
												]
											]
										]
									],
									[
										"Else",
										[
											"Null"
										]
									]
								]
							}
						],
						"primitive": false,
						"name": "device",
						"indexes": [],
						"idField": "id",
						"resourceName": "device",
						"modelName": "device",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"device-has-env var name": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "device environment variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"device",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-has-env var name",
						"modelName": "device has env var name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device-has-name": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "device config variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"device",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-has-name",
						"modelName": "device has name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device-installs-image": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "installs-image",
								"required": true,
								"references": {
									"resourceName": "image",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Date Time",
								"fieldName": "install date",
								"required": true,
								"references": {
									"resourceName": "install date",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "download progress",
								"required": false,
								"references": {
									"resourceName": "download progress",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": true,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is provided by-release",
								"required": true,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "image install",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"device",
									"installs-image"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-installs-image",
						"modelName": "device installs image",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device-installs-application-has-service name": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "installs-service",
								"required": true,
								"references": {
									"resourceName": "application-has-service name",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "service install",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"device",
									"installs-service"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-installs-application-has-service name",
						"modelName": "device installs service",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device-installs-application-has-service name-has-name": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "service install",
								"required": true,
								"references": {
									"resourceName": "device-installs-application-has-service name",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "device service environment variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"service install",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-installs-application-has-service name-has-name",
						"modelName": "service install has name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device-has-tag key": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "tag key",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "device tag",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"device",
									"tag key"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-has-tag key",
						"modelName": "device has tag key",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"checks": [
							{
								"description": "It is necessary that each device tag has a tag key that has a Length (Type) that is greater than 0.",
								"name": "device tag$30aEY0OcDs3I/zbRIyNPL9K/I7WY+4PabIF1sxOvXKg=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThan",
												[
													"Integer",
													0
												],
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Equals",
												[
													"Field",
													"tag key"
												],
												[
													"Field",
													"tag key"
												]
											],
											[
												"Exists",
												[
													"Field",
													"tag key"
												]
											]
										]
									]
								]
							}
						]
					},
					"release": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "commit",
								"required": true,
								"references": {
									"resourceName": "commit",
									"fieldName": null
								}
							},
							{
								"dataType": "JSON",
								"fieldName": "composition",
								"required": true,
								"references": {
									"resourceName": "composition",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": true,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "source",
								"required": true,
								"references": {
									"resourceName": "source",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "build log",
								"required": false,
								"references": {
									"resourceName": "build log",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is invalidated",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "start timestamp",
								"required": true,
								"references": {
									"resourceName": "start timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "update timestamp",
								"required": true,
								"references": {
									"resourceName": "update timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "release version",
								"required": false,
								"references": {
									"resourceName": "release version",
									"fieldName": null
								}
							},
							{
								"dataType": "JSON",
								"fieldName": "contract",
								"required": false,
								"references": {
									"resourceName": "contract",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is passing tests",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "is finalized at-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "semver major",
								"required": true,
								"references": {
									"resourceName": "semver major",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "semver minor",
								"required": true,
								"references": {
									"resourceName": "semver minor",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "semver patch",
								"required": true,
								"references": {
									"resourceName": "semver patch",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "revision",
								"required": false,
								"references": {
									"resourceName": "revision",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "known issue list",
								"required": false,
								"references": {
									"resourceName": "known issue list",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "note",
								"required": false,
								"references": {
									"resourceName": "note",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "invalidation reason",
								"required": false,
								"references": {
									"resourceName": "invalidation reason",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is created by-user",
								"required": false,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "JSON",
								"fieldName": "statistics set",
								"required": false,
								"references": {
									"resourceName": "statistics set",
									"fieldName": null
								}
							},
							{
								"fieldName": "is final",
								"dataType": "Boolean",
								"required": true,
								"computed": [
									"Exists",
									[
										"ReferencedField",
										"release",
										"revision"
									]
								]
							},
							{
								"fieldName": "semver",
								"dataType": "Short Text",
								"required": true,
								"computed": [
									"Concatenate",
									[
										"ReferencedField",
										"release",
										"semver major"
									],
									[
										"EmbeddedText",
										"."
									],
									[
										"ReferencedField",
										"release",
										"semver minor"
									],
									[
										"EmbeddedText",
										"."
									],
									[
										"ReferencedField",
										"release",
										"semver patch"
									]
								]
							},
							{
								"fieldName": "raw version",
								"dataType": "Short Text",
								"required": true,
								"computed": [
									"Concatenate",
									[
										"Concatenate",
										[
											"ReferencedField",
											"release",
											"semver major"
										],
										[
											"EmbeddedText",
											"."
										],
										[
											"ReferencedField",
											"release",
											"semver minor"
										],
										[
											"EmbeddedText",
											"."
										],
										[
											"ReferencedField",
											"release",
											"semver patch"
										]
									],
									[
										"Cast",
										[
											"Case",
											[
												"When",
												[
													"NotExists",
													[
														"ReferencedField",
														"release",
														"revision"
													]
												],
												[
													"Concatenate",
													[
														"EmbeddedText",
														"-"
													],
													[
														"Cast",
														[
															"Floor",
															[
																"Multiply",
																[
																	"Totalseconds",
																	[
																		"ReferencedField",
																		"release",
																		"created at"
																	]
																],
																[
																	"Number",
																	1000
																]
															]
														],
														"Text"
													]
												]
											],
											[
												"When",
												[
													"GreaterThan",
													[
														"ReferencedField",
														"release",
														"revision"
													],
													[
														"Number",
														0
													]
												],
												[
													"Concatenate",
													[
														"EmbeddedText",
														"+rev"
													],
													[
														"ReferencedField",
														"release",
														"revision"
													]
												]
											],
											[
												"Else",
												[
													"EmbeddedText",
													""
												]
											]
										],
										"Text"
									]
								]
							},
							{
								"fieldName": "version",
								"dataType": "JSON",
								"required": true,
								"computed": [
									"Concatenate",
									[
										"EmbeddedText",
										"{\"raw\": \""
									],
									[
										"Concatenate",
										[
											"Concatenate",
											[
												"ReferencedField",
												"release",
												"semver major"
											],
											[
												"EmbeddedText",
												"."
											],
											[
												"ReferencedField",
												"release",
												"semver minor"
											],
											[
												"EmbeddedText",
												"."
											],
											[
												"ReferencedField",
												"release",
												"semver patch"
											]
										],
										[
											"Cast",
											[
												"Case",
												[
													"When",
													[
														"NotExists",
														[
															"ReferencedField",
															"release",
															"revision"
														]
													],
													[
														"Concatenate",
														[
															"EmbeddedText",
															"-"
														],
														[
															"Cast",
															[
																"Floor",
																[
																	"Multiply",
																	[
																		"Totalseconds",
																		[
																			"ReferencedField",
																			"release",
																			"created at"
																		]
																	],
																	[
																		"Number",
																		1000
																	]
																]
															],
															"Text"
														]
													]
												],
												[
													"When",
													[
														"GreaterThan",
														[
															"ReferencedField",
															"release",
															"revision"
														],
														[
															"Number",
															0
														]
													],
													[
														"Concatenate",
														[
															"EmbeddedText",
															"+rev"
														],
														[
															"ReferencedField",
															"release",
															"revision"
														]
													]
												],
												[
													"Else",
													[
														"EmbeddedText",
														""
													]
												]
											],
											"Text"
										]
									],
									[
										"EmbeddedText",
										"\",\"major\": "
									],
									[
										"ReferencedField",
										"release",
										"semver major"
									],
									[
										"EmbeddedText",
										",\"minor\": "
									],
									[
										"ReferencedField",
										"release",
										"semver minor"
									],
									[
										"EmbeddedText",
										",\"patch\": "
									],
									[
										"ReferencedField",
										"release",
										"semver patch"
									],
									[
										"EmbeddedText",
										",\"prerelease\": ["
									],
									[
										"Cast",
										[
											"Case",
											[
												"When",
												[
													"Exists",
													[
														"ReferencedField",
														"release",
														"revision"
													]
												],
												[
													"EmbeddedText",
													""
												]
											],
											[
												"Else",
												[
													"Cast",
													[
														"Floor",
														[
															"Multiply",
															[
																"Totalseconds",
																[
																	"ReferencedField",
																	"release",
																	"created at"
																]
															],
															[
																"Number",
																1000
															]
														]
													],
													"Text"
												]
											]
										],
										"Text"
									],
									[
										"EmbeddedText",
										"],\"build\": ["
									],
									[
										"Cast",
										[
											"Case",
											[
												"When",
												[
													"GreaterThan",
													[
														"ReferencedField",
														"release",
														"revision"
													],
													[
														"Number",
														0
													]
												],
												[
													"Concatenate",
													[
														"EmbeddedText",
														"\"rev"
													],
													[
														"ReferencedField",
														"release",
														"revision"
													],
													[
														"EmbeddedText",
														"\""
													]
												]
											],
											[
												"Else",
												[
													"EmbeddedText",
													""
												]
											]
										],
										"Text"
									],
									[
										"EmbeddedText",
										"],\"version\": \""
									],
									[
										"Concatenate",
										[
											"ReferencedField",
											"release",
											"semver major"
										],
										[
											"EmbeddedText",
											"."
										],
										[
											"ReferencedField",
											"release",
											"semver minor"
										],
										[
											"EmbeddedText",
											"."
										],
										[
											"ReferencedField",
											"release",
											"semver patch"
										]
									],
									[
										"Cast",
										[
											"Case",
											[
												"When",
												[
													"Exists",
													[
														"ReferencedField",
														"release",
														"revision"
													]
												],
												[
													"EmbeddedText",
													""
												]
											],
											[
												"Else",
												[
													"Concatenate",
													[
														"EmbeddedText",
														"-"
													],
													[
														"Cast",
														[
															"Floor",
															[
																"Multiply",
																[
																	"Totalseconds",
																	[
																		"ReferencedField",
																		"release",
																		"created at"
																	]
																],
																[
																	"Number",
																	1000
																]
															]
														],
														"Text"
													]
												]
											]
										],
										"Text"
									],
									[
										"EmbeddedText",
										"\"}"
									]
								]
							}
						],
						"primitive": false,
						"name": "release",
						"indexes": [],
						"idField": "id",
						"resourceName": "release",
						"modelName": "release",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each release that has a revision, has a revision that is greater than or equal to 0.",
								"name": "release$69zgYrVSJaN1avGiEeipPlJ9/lMKzOIt3iMPF6u/6WY=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"revision"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThanOrEqual",
													[
														"Integer",
														0
													],
													[
														"Field",
														"revision"
													]
												],
												[
													"Exists",
													[
														"Field",
														"revision"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each release that has an invalidation reason, is invalidated.",
								"name": "release$RcddhgkY+99IgKXAUId7Q3iN4WylzgAxSFiF+JvyRiY=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"invalidation reason"
											]
										],
										[
											"NotEquals",
											[
												"Field",
												"is invalidated"
											],
											[
												"Boolean",
												true
											]
										]
									]
								]
							}
						]
					},
					"release-has-tag key": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "release",
								"required": true,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "tag key",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "release tag",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"release",
									"tag key"
								]
							}
						],
						"idField": "id",
						"resourceName": "release-has-tag key",
						"modelName": "release has tag key",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"checks": [
							{
								"description": "It is necessary that each release tag has a tag key that has a Length (Type) that is greater than 0.",
								"name": "release tag$vGZu47lKJepQVH+hgSZNuUPdet2cG96akz3Yc8hta3A=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThan",
												[
													"Integer",
													0
												],
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Equals",
												[
													"Field",
													"tag key"
												],
												[
													"Field",
													"tag key"
												]
											],
											[
												"Exists",
												[
													"Field",
													"tag key"
												]
											]
										]
									]
								]
							}
						]
					},
					"image-is downloaded by-device": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "image",
								"required": true,
								"references": {
									"resourceName": "image",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is downloaded by-device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": true,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "download progress",
								"required": false,
								"references": {
									"resourceName": "download progress",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "gateway download",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"image",
									"is downloaded by-device"
								]
							}
						],
						"idField": "id",
						"resourceName": "image-is downloaded by-device",
						"modelName": "image is downloaded by device",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"image-is part of-release": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "image",
								"required": true,
								"references": {
									"resourceName": "image",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is part of-release",
								"required": true,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "image-is part of-release",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"image",
									"is part of-release"
								]
							}
						],
						"idField": "id",
						"resourceName": "image-is part of-release",
						"modelName": "image is part of release",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"image-is part of-release-has-label name": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "release image",
								"required": true,
								"references": {
									"resourceName": "image-is part of-release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "label name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "image label",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"release image",
									"label name"
								]
							}
						],
						"idField": "id",
						"resourceName": "image-is part of-release-has-label name",
						"modelName": "release image has label name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"image-is part of-release-has-name": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "release image",
								"required": true,
								"references": {
									"resourceName": "image-is part of-release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "image environment variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"release image",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "image-is part of-release-has-name",
						"modelName": "release image has name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user-is member of-organization": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is member of-organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization membership role",
								"required": true,
								"references": {
									"resourceName": "organization membership role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "effective seat role",
								"required": true,
								"references": {
									"resourceName": "effective seat role",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "organization membership",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"user",
									"is member of-organization"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-is member of-organization",
						"modelName": "user is member of organization",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user-has-public key": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Text",
								"fieldName": "public key",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "title",
								"required": true,
								"references": {
									"resourceName": "title",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "user-has-public key",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"user",
									"public key"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-has-public key",
						"modelName": "user has public key",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application membership role": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "application membership role",
						"indexes": [],
						"idField": "id",
						"resourceName": "application membership role",
						"modelName": "application membership role",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"billable component": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "billable component",
						"indexes": [],
						"idField": "id",
						"resourceName": "billable component",
						"modelName": "billable component",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"billing plan": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "role",
								"required": true,
								"references": {
									"resourceName": "role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "title",
								"required": true,
								"references": {
									"resourceName": "title",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "billing plan",
						"indexes": [],
						"idField": "id",
						"resourceName": "billing plan",
						"modelName": "billing plan",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"csp report": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "document uri",
								"required": true,
								"references": {
									"resourceName": "document uri",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "blocked uri",
								"required": true,
								"references": {
									"resourceName": "blocked uri",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "referrer",
								"required": false,
								"references": {
									"resourceName": "referrer",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "violated directive",
								"required": true,
								"references": {
									"resourceName": "violated directive",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "original policy",
								"required": true,
								"references": {
									"resourceName": "original policy",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "incidents counter",
								"required": true,
								"references": {
									"resourceName": "incidents counter",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "last seen time",
								"required": true,
								"references": {
									"resourceName": "last seen time",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "csp report",
						"indexes": [],
						"idField": "id",
						"resourceName": "csp report",
						"modelName": "csp report",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"delta": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "originates from-image",
								"required": false,
								"references": {
									"resourceName": "image",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "produces-image",
								"required": true,
								"references": {
									"resourceName": "image",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "version",
								"required": true,
								"references": {
									"resourceName": "version",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": true,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "error message",
								"required": false,
								"references": {
									"resourceName": "error message",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "is stored at-location",
								"required": false,
								"references": {
									"resourceName": "location",
									"fieldName": null
								}
							},
							{
								"dataType": "Big Integer",
								"fieldName": "size",
								"required": false,
								"references": {
									"resourceName": "size",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "update timestamp",
								"required": true,
								"references": {
									"resourceName": "update timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "delta",
						"indexes": [],
						"idField": "id",
						"resourceName": "delta",
						"modelName": "delta",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each delta that has a status that is equal to \"success\", is stored at exactly one location.",
								"name": "delta$uhbKBQ1SFLCAstvBKWO9098lU9K+D4D7S2FKmp8XNc8=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Equals",
											[
												"Field",
												"status"
											],
											[
												"Text",
												"success"
											]
										],
										[
											"Exists",
											[
												"Field",
												"status"
											]
										],
										[
											"NotExists",
											[
												"Field",
												"is stored at-location"
											]
										]
									]
								]
							}
						]
					},
					"feature": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "title",
								"required": true,
								"references": {
									"resourceName": "title",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "billing code",
								"required": false,
								"references": {
									"resourceName": "billing code",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "feature",
						"indexes": [],
						"idField": "id",
						"resourceName": "feature",
						"modelName": "feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each feature that has a billing code has a billing code that has a Length (Type) that is greater than 0 and is less than or equal to 30.",
								"name": "feature$2EspEGFKEl6qfNmF2o+DeJspkbrRkBh06slbLQ8zgCg=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"billing code"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"billing code"
														]
													]
												],
												[
													"LessThanOrEqual",
													[
														"CharacterLength",
														[
															"Field",
															"billing code"
														]
													],
													[
														"Integer",
														30
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"billing code"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"billing code"
													]
												]
											]
										]
									]
								]
							}
						]
					},
					"image download": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-device type",
								"required": true,
								"references": {
									"resourceName": "device type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os version",
								"required": true,
								"references": {
									"resourceName": "os version",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "file name",
								"required": true,
								"references": {
									"resourceName": "file name",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "file size",
								"required": true,
								"references": {
									"resourceName": "file size",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "bytes sent",
								"required": true,
								"references": {
									"resourceName": "bytes sent",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "start timestamp",
								"required": true,
								"references": {
									"resourceName": "start timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": true,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "image download",
						"indexes": [],
						"idField": "id",
						"resourceName": "image download",
						"modelName": "image download",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"oauth application": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "secret",
								"required": true,
								"references": {
									"resourceName": "secret",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "client id",
								"required": true,
								"references": {
									"resourceName": "client id",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "redirect uri",
								"required": true,
								"references": {
									"resourceName": "redirect uri",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "description",
								"required": false,
								"references": {
									"resourceName": "description",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "oauth application",
						"indexes": [],
						"idField": "id",
						"resourceName": "oauth application",
						"modelName": "oauth application",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"oauth application authorization": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-oauth application",
								"required": true,
								"references": {
									"resourceName": "oauth application",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "oauth application authorization",
						"indexes": [],
						"idField": "id",
						"resourceName": "oauth application authorization",
						"modelName": "oauth application authorization",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"organization membership role": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "organization membership role",
						"indexes": [],
						"idField": "id",
						"resourceName": "organization membership role",
						"modelName": "organization membership role",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"overage report": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "organization id",
								"required": true,
								"references": {
									"resourceName": "organization id",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "billing code",
								"required": true,
								"references": {
									"resourceName": "billing code",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "unit cost",
								"required": true,
								"references": {
									"resourceName": "unit cost",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "quantity",
								"required": true,
								"references": {
									"resourceName": "quantity",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "overage report",
						"indexes": [],
						"idField": "id",
						"resourceName": "overage report",
						"modelName": "overage report",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"plan": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "title",
								"required": true,
								"references": {
									"resourceName": "title",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "billing code",
								"required": false,
								"references": {
									"resourceName": "billing code",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Integer",
								"fieldName": "generation",
								"required": false,
								"references": {
									"resourceName": "generation",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "monthly price",
								"required": true,
								"references": {
									"resourceName": "monthly price",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "annual price",
								"required": true,
								"references": {
									"resourceName": "annual price",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "can self serve",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is legacy",
								"required": true
							}
						],
						"primitive": false,
						"name": "plan",
						"indexes": [],
						"idField": "id",
						"resourceName": "plan",
						"modelName": "plan",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each plan that has a billing code, has a billing code that has a Length (Type) that is greater than 0 and is less than or equal to 30.",
								"name": "plan$aWJFFvB4RslS97O9Xxz7XlNnZuIdvabYIcyIQQEXtMQ=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"billing code"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"billing code"
														]
													]
												],
												[
													"LessThanOrEqual",
													[
														"CharacterLength",
														[
															"Field",
															"billing code"
														]
													],
													[
														"Integer",
														30
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"billing code"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"billing code"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each plan that has a monthly price that is greater than 0 has exactly one billing code.",
								"name": "plan$XdVt6BxQL+ellyqe/Qir2cVDw09t/cWOV4+xS6IY+Uk=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"LessThan",
											[
												"Integer",
												0
											],
											[
												"Field",
												"monthly price"
											]
										],
										[
											"Exists",
											[
												"Field",
												"monthly price"
											]
										],
										[
											"NotExists",
											[
												"Field",
												"billing code"
											]
										]
									]
								]
							}
						]
					},
					"subscription": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-plan",
								"required": true,
								"references": {
									"resourceName": "plan",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "billing cycle",
								"required": true,
								"references": {
									"resourceName": "billing cycle",
									"fieldName": null
								},
								"checks": [
									[
										"In",
										[
											"Field",
											"billing cycle"
										],
										[
											"Text",
											"monthly"
										],
										[
											"Text",
											"quarterly"
										],
										[
											"Text",
											"biannual"
										],
										[
											"Text",
											"annual"
										],
										[
											"Text",
											"biennial"
										],
										[
											"Text",
											"triennial"
										],
										[
											"Text",
											"quadrennial"
										],
										[
											"Text",
											"quinquennial"
										]
									]
								]
							},
							{
								"dataType": "Date Time",
								"fieldName": "starts on-date",
								"required": true,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "ends on-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Real",
								"fieldName": "discount percentage",
								"required": true,
								"references": {
									"resourceName": "discount percentage",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "origin",
								"required": true,
								"references": {
									"resourceName": "origin",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "bills base with-recurly id",
								"required": false,
								"references": {
									"resourceName": "recurly id",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "bills addons with-recurly id",
								"required": false,
								"references": {
									"resourceName": "recurly id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "is agreed upon on-date",
								"required": true,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "is terminated on-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "is terminated with-reason",
								"required": false,
								"references": {
									"resourceName": "reason",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "expects first payment on-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "internal note",
								"required": false,
								"references": {
									"resourceName": "internal note",
									"fieldName": null
								}
							},
							{
								"fieldName": "is active",
								"dataType": "Boolean",
								"required": true,
								"computed": [
									"And",
									[
										"LessThanOrEqual",
										[
											"ReferencedField",
											"subscription",
											"starts on-date"
										],
										[
											"Now"
										]
									],
									[
										"Or",
										[
											"Equals",
											[
												"ReferencedField",
												"subscription",
												"ends on-date"
											],
											[
												"Null"
											]
										],
										[
											"GreaterThan",
											[
												"ReferencedField",
												"subscription",
												"ends on-date"
											],
											[
												"Now"
											]
										]
									]
								]
							}
						],
						"primitive": false,
						"name": "subscription",
						"indexes": [],
						"idField": "id",
						"resourceName": "subscription",
						"modelName": "subscription",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each subscription that bills base with a recurly id, bills base with a recurly id that has a Length (Type) that is greater than 0.",
								"name": "subscription$FQ2eprxdsexPk5FVGuxi7WVeAK8z8tGAjRYnUj1utrg=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"bills base with-recurly id"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"bills base with-recurly id"
														]
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"bills base with-recurly id"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"bills base with-recurly id"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each subscription that bills addons with a recurly id, bills addons with a recurly id that has a Length (Type) that is greater than 0.",
								"name": "subscription$m7pjF2yj4YYZ+vwuLcJCd16OeOGxxgD1Tv5uJgcPv20=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"bills addons with-recurly id"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"bills addons with-recurly id"
														]
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"bills addons with-recurly id"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"bills addons with-recurly id"
													]
												]
											]
										]
									]
								]
							}
						]
					},
					"subscription prepaid addon": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-subscription",
								"required": true,
								"references": {
									"resourceName": "subscription",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-plan addon",
								"required": true,
								"references": {
									"resourceName": "plan-offers-feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Real",
								"fieldName": "discount percentage",
								"required": true,
								"references": {
									"resourceName": "discount percentage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "quantity",
								"required": true,
								"references": {
									"resourceName": "quantity",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "starts on-date",
								"required": true,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "expires on-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "subscription prepaid addon",
						"indexes": [],
						"idField": "id",
						"resourceName": "subscription prepaid addon",
						"modelName": "subscription prepaid addon",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"recovery two factor": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "recovery code",
								"required": true,
								"references": {
									"resourceName": "recovery code",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "used timestamp",
								"required": false,
								"references": {
									"resourceName": "used timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "recovery two factor",
						"indexes": [],
						"idField": "id",
						"resourceName": "recovery two factor",
						"modelName": "recovery two factor",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"social service account": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "provider",
								"required": true,
								"references": {
									"resourceName": "provider",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "remote id",
								"required": true,
								"references": {
									"resourceName": "remote id",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "display name",
								"required": false,
								"references": {
									"resourceName": "display name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "email",
								"required": false,
								"references": {
									"resourceName": "email",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "social service account",
						"indexes": [],
						"idField": "id",
						"resourceName": "social service account",
						"modelName": "social service account",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"support tier": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "title",
								"required": true,
								"references": {
									"resourceName": "title",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Boolean",
								"fieldName": "includes private support",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "includes-SLA",
								"required": false,
								"references": {
									"resourceName": "SLA",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "support tier",
						"indexes": [],
						"idField": "id",
						"resourceName": "support tier",
						"modelName": "support tier",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"team": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "description",
								"required": false,
								"references": {
									"resourceName": "description",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "team",
						"indexes": [],
						"idField": "id",
						"resourceName": "team",
						"modelName": "team",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"invitee": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "email",
								"required": true,
								"references": {
									"resourceName": "email",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "invitee",
						"indexes": [],
						"idField": "id",
						"resourceName": "invitee",
						"modelName": "invitee",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"support feature": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "feature",
								"required": true,
								"references": {
									"resourceName": "feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "support tier",
								"required": true,
								"references": {
									"resourceName": "support tier",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "support feature",
						"indexes": [],
						"idField": "id",
						"resourceName": "support feature",
						"modelName": "support feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"application type feature": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "feature",
								"required": true,
								"references": {
									"resourceName": "feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application type",
								"required": true,
								"references": {
									"resourceName": "application type",
									"fieldName": "id"
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "application type feature",
						"indexes": [],
						"idField": "id",
						"resourceName": "application type feature",
						"modelName": "application type feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"application member feature": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "feature",
								"required": true,
								"references": {
									"resourceName": "feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application membership role",
								"required": true,
								"references": {
									"resourceName": "application membership role",
									"fieldName": "id"
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "application member feature",
						"indexes": [],
						"idField": "id",
						"resourceName": "application member feature",
						"modelName": "application member feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"organization member feature": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "feature",
								"required": true,
								"references": {
									"resourceName": "feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization membership role",
								"required": true,
								"references": {
									"resourceName": "organization membership role",
									"fieldName": "id"
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "organization member feature",
						"indexes": [],
						"idField": "id",
						"resourceName": "organization member feature",
						"modelName": "organization member feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"team-grants access to-application": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "team",
								"required": true,
								"references": {
									"resourceName": "team",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "grants access to-application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application membership role",
								"required": true,
								"references": {
									"resourceName": "application membership role",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "team application access",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"team",
									"grants access to-application"
								]
							}
						],
						"idField": "id",
						"resourceName": "team-grants access to-application",
						"modelName": "team grants access to application",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user-is member of-team": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is member of-team",
								"required": true,
								"references": {
									"resourceName": "team",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "team membership",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"user",
									"is member of-team"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-is member of-team",
						"modelName": "user is member of team",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user-is member of-application": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is member of-application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application membership role",
								"required": true,
								"references": {
									"resourceName": "application membership role",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "user-is member of-application",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"user",
									"is member of-application"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-is member of-application",
						"modelName": "user is member of application",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"invitee-is invited to-application": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "invitee",
								"required": true,
								"references": {
									"resourceName": "invitee",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is invited to-application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application membership role",
								"required": true,
								"references": {
									"resourceName": "application membership role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "invitation token",
								"required": false,
								"references": {
									"resourceName": "invitation token",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Text",
								"fieldName": "message",
								"required": false,
								"references": {
									"resourceName": "message",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is created by-user",
								"required": false,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "invitee-is invited to-application",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"invitee",
									"is invited to-application"
								]
							}
						],
						"idField": "id",
						"resourceName": "invitee-is invited to-application",
						"modelName": "invitee is invited to application",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"invitee-is invited to-organization": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "invitee",
								"required": true,
								"references": {
									"resourceName": "invitee",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is invited to-organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization membership role",
								"required": true,
								"references": {
									"resourceName": "organization membership role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "invitation token",
								"required": false,
								"references": {
									"resourceName": "invitation token",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Text",
								"fieldName": "message",
								"required": false,
								"references": {
									"resourceName": "message",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is created by-user",
								"required": false,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "invitee-is invited to-organization",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"invitee",
									"is invited to-organization"
								]
							}
						],
						"idField": "id",
						"resourceName": "invitee-is invited to-organization",
						"modelName": "invitee is invited to organization",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device-has-fqdn": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Text",
								"fieldName": "fqdn",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "device domain mapping",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"device",
									"fqdn"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-has-fqdn",
						"modelName": "device has fqdn",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-domain": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Text",
								"fieldName": "domain",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "application domain mapping",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application",
									"domain"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-domain",
						"modelName": "application has domain",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-build var name": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "build environment variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-build var name",
						"modelName": "application has build var name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"organization-has private access to-device type": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "has private access to-device type",
								"required": true,
								"references": {
									"resourceName": "device type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "organization-has private access to-device type",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"organization",
									"has private access to-device type"
								]
							}
						],
						"idField": "id",
						"resourceName": "organization-has private access to-device type",
						"modelName": "organization has private access to device type",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user-is member of-organization-has-tag key": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization membership",
								"required": true,
								"references": {
									"resourceName": "user-is member of-organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "tag key",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "organization membership tag",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"organization membership",
									"tag key"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-is member of-organization-has-tag key",
						"modelName": "organization membership has tag key",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"checks": [
							{
								"description": "It is necessary that each organization membership tag has a tag key that has a Length (Type) that is greater than 0.",
								"name": "organization membership tag$FQ/QGS2oruZV03tt/ZQuIlRERixuqjln9SG",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThan",
												[
													"Integer",
													0
												],
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Equals",
												[
													"Field",
													"tag key"
												],
												[
													"Field",
													"tag key"
												]
											],
											[
												"Exists",
												[
													"Field",
													"tag key"
												]
											]
										]
									]
								]
							}
						]
					},
					"plan-has-discount code": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "plan",
								"required": true,
								"references": {
									"resourceName": "plan",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "discount code",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "plan-has-discount code",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"plan",
									"discount code"
								]
							}
						],
						"idField": "id",
						"resourceName": "plan-has-discount code",
						"modelName": "plan has discount code",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application type feature-is composed of-billable component": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application type feature",
								"required": true,
								"references": {
									"resourceName": "application type feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is composed of-billable component",
								"required": true,
								"references": {
									"resourceName": "billable component",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "application type feature-is composed of-billable component",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application type feature",
									"is composed of-billable component"
								]
							}
						],
						"idField": "id",
						"resourceName": "application type feature-is composed of-billable component",
						"modelName": "application type feature is composed of billable component",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application member feature-is composed of-billable component": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application member feature",
								"required": true,
								"references": {
									"resourceName": "application member feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is composed of-billable component",
								"required": true,
								"references": {
									"resourceName": "billable component",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "application member feature-is composed of-billable component",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application member feature",
									"is composed of-billable component"
								]
							}
						],
						"idField": "id",
						"resourceName": "application member feature-is composed of-billable component",
						"modelName": "application member feature is composed of billable component",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"organization member feature-is composed of-billable component": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization member feature",
								"required": true,
								"references": {
									"resourceName": "organization member feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is composed of-billable component",
								"required": true,
								"references": {
									"resourceName": "billable component",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "organization member feature-is composed of-billable component",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"organization member feature",
									"is composed of-billable component"
								]
							}
						],
						"idField": "id",
						"resourceName": "organization member feature-is composed of-billable component",
						"modelName": "organization member feature is composed of billable component",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"plan-provides-feature": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "plan",
								"required": true,
								"references": {
									"resourceName": "plan",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "provides-feature",
								"required": true,
								"references": {
									"resourceName": "feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "quantity",
								"required": true,
								"references": {
									"resourceName": "quantity",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "plan feature",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"plan",
									"provides-feature"
								]
							}
						],
						"idField": "id",
						"resourceName": "plan-provides-feature",
						"modelName": "plan provides feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"plan-offers-feature": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "plan",
								"required": true,
								"references": {
									"resourceName": "plan",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "offers-feature",
								"required": true,
								"references": {
									"resourceName": "feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "base price",
								"required": true,
								"references": {
									"resourceName": "base price",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "can self serve",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "bills dynamically",
								"required": true
							}
						],
						"primitive": false,
						"name": "plan addon",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"plan",
									"offers-feature"
								]
							}
						],
						"idField": "id",
						"resourceName": "plan-offers-feature",
						"modelName": "plan offers feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"subscription-discounts-plan-offers-feature": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "subscription",
								"required": true,
								"references": {
									"resourceName": "subscription",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "discounts-plan addon",
								"required": true,
								"references": {
									"resourceName": "plan-offers-feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Real",
								"fieldName": "discount percentage",
								"required": true,
								"references": {
									"resourceName": "discount percentage",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "subscription-discounts-plan addon",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"subscription",
									"discounts-plan addon"
								]
							}
						],
						"idField": "id",
						"resourceName": "subscription-discounts-plan-offers-feature",
						"modelName": "subscription discounts plan addon",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device history": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "device id",
								"required": true,
								"references": {
									"resourceName": "device id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "actor id",
								"required": false,
								"references": {
									"resourceName": "actor id",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "uuid",
								"required": false,
								"references": {
									"resourceName": "uuid",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "belongs to-application id",
								"required": false,
								"references": {
									"resourceName": "application id",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is active",
								"required": true
							},
							{
								"dataType": "Integer",
								"fieldName": "is running-release id",
								"required": false,
								"references": {
									"resourceName": "release id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "should be running-release id",
								"required": false,
								"references": {
									"resourceName": "release id",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "api heartbeat state",
								"required": true,
								"references": {
									"resourceName": "api heartbeat state",
									"fieldName": null
								},
								"checks": [
									[
										"In",
										[
											"Field",
											"api heartbeat state"
										],
										[
											"Text",
											"online"
										],
										[
											"Text",
											"offline"
										],
										[
											"Text",
											"timeout"
										],
										[
											"Text",
											"unknown"
										]
									]
								]
							},
							{
								"dataType": "Boolean",
								"fieldName": "is connected to vpn",
								"required": true
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is managed by-service instance",
								"required": false,
								"references": {
									"resourceName": "service instance",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os version",
								"required": false,
								"references": {
									"resourceName": "os version",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os variant",
								"required": false,
								"references": {
									"resourceName": "os variant",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "supervisor version",
								"required": false,
								"references": {
									"resourceName": "supervisor version",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is of-device type",
								"required": false,
								"references": {
									"resourceName": "device type",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "device history",
						"indexes": [],
						"idField": "id",
						"resourceName": "device history",
						"modelName": "device history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"application history": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "application id",
								"required": true,
								"references": {
									"resourceName": "application id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application type",
								"required": true,
								"references": {
									"resourceName": "application type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is host",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is public",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is discoverable",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is archived",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "is of-class",
								"required": true,
								"references": {
									"resourceName": "class",
									"fieldName": null
								},
								"checks": [
									[
										"In",
										[
											"Field",
											"is of-class"
										],
										[
											"Text",
											"fleet"
										],
										[
											"Text",
											"block"
										],
										[
											"Text",
											"app"
										]
									]
								]
							},
							{
								"dataType": "Integer",
								"fieldName": "organization id",
								"required": true,
								"references": {
									"resourceName": "organization id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "should be running release id",
								"required": false,
								"references": {
									"resourceName": "should be running release id",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "is stored at-repository url",
								"required": false,
								"references": {
									"resourceName": "repository url",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "application history",
						"indexes": [],
						"idField": "id",
						"resourceName": "application history",
						"modelName": "application history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each application history that is stored at a repository url, is stored at a repository url that has a Length (Type) that is greater than 0 and is less than or equal to 500.",
								"name": "application history$9Ff1aUY1PDvd6t2QgrpWs9Ypl3Tilc0S8CcNewbKCG4",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"is stored at-repository url"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"is stored at-repository url"
														]
													]
												],
												[
													"LessThanOrEqual",
													[
														"CharacterLength",
														[
															"Field",
															"is stored at-repository url"
														]
													],
													[
														"Integer",
														500
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"is stored at-repository url"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"is stored at-repository url"
													]
												]
											]
										]
									]
								]
							}
						]
					},
					"release history": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "commit",
								"required": true,
								"references": {
									"resourceName": "commit",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": true,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "source",
								"required": true,
								"references": {
									"resourceName": "source",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "build start timestamp",
								"required": true,
								"references": {
									"resourceName": "build start timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "build end timestamp",
								"required": false,
								"references": {
									"resourceName": "build end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "JSON",
								"fieldName": "contract",
								"required": false,
								"references": {
									"resourceName": "contract",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "release id",
								"required": true,
								"references": {
									"resourceName": "release id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "belongs to-application id",
								"required": false,
								"references": {
									"resourceName": "application id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "is created by-user id",
								"required": false,
								"references": {
									"resourceName": "user id",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is invalidated",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "release version",
								"required": false,
								"references": {
									"resourceName": "release version",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "release history",
						"indexes": [],
						"idField": "id",
						"resourceName": "release history",
						"modelName": "release history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"organization history": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "organization id",
								"required": true,
								"references": {
									"resourceName": "organization id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "billing account code",
								"required": false,
								"references": {
									"resourceName": "billing account code",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "organization history",
						"indexes": [],
						"idField": "id",
						"resourceName": "organization history",
						"modelName": "organization history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"organization membership history": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "organization membership id",
								"required": true,
								"references": {
									"resourceName": "organization membership id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "organization id",
								"required": true,
								"references": {
									"resourceName": "organization id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "user id",
								"required": true,
								"references": {
									"resourceName": "user id",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization membership role",
								"required": true,
								"references": {
									"resourceName": "organization membership role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "effective seat role",
								"required": false,
								"references": {
									"resourceName": "effective seat role",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "organization membership history",
						"indexes": [],
						"idField": "id",
						"resourceName": "organization membership history",
						"modelName": "organization membership history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"user is member of application history": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "user is member of application id",
								"required": true,
								"references": {
									"resourceName": "user is member of application id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "is member of-application id",
								"required": true,
								"references": {
									"resourceName": "application id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "user id",
								"required": true,
								"references": {
									"resourceName": "user id",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application membership role",
								"required": false,
								"references": {
									"resourceName": "application membership role",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "user is member of application history",
						"indexes": [],
						"idField": "id",
						"resourceName": "user is member of application history",
						"modelName": "user is member of application history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"team history": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "team id",
								"required": true,
								"references": {
									"resourceName": "team id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "organization id",
								"required": true,
								"references": {
									"resourceName": "organization id",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "team history",
						"indexes": [],
						"idField": "id",
						"resourceName": "team history",
						"modelName": "team history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"team membership history": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "team membership id",
								"required": true,
								"references": {
									"resourceName": "team membership id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "team id",
								"required": true,
								"references": {
									"resourceName": "team id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "user id",
								"required": true,
								"references": {
									"resourceName": "user id",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "team membership history",
						"indexes": [],
						"idField": "id",
						"resourceName": "team membership history",
						"modelName": "team membership history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"team application access history": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "team application access id",
								"required": true,
								"references": {
									"resourceName": "team application access id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "application id",
								"required": true,
								"references": {
									"resourceName": "application id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "team id",
								"required": true,
								"references": {
									"resourceName": "team id",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application membership role",
								"required": true,
								"references": {
									"resourceName": "application membership role",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "team application access history",
						"indexes": [],
						"idField": "id",
						"resourceName": "team application access history",
						"modelName": "team application access history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"user history": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "user id",
								"required": true,
								"references": {
									"resourceName": "user id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "account type",
								"required": false,
								"references": {
									"resourceName": "account type",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is two factor protected",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is verified",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "has been sent verification email",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "must be verified",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "has disabled newsletter",
								"required": true
							}
						],
						"primitive": false,
						"name": "user history",
						"indexes": [],
						"idField": "id",
						"resourceName": "user history",
						"modelName": "user history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"application-can use-application as host": {
						"fields": [
							{
								"dataType": "Big Integer",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "can use-application as host",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "application-can use-application as host",
						"indexes": [],
						"idField": "id",
						"resourceName": "application-can use-application as host",
						"definition": {
							"abstractSql": [
								"SelectQuery",
								[
									"Select",
									[
										[
											"Alias",
											[
												"Null"
											],
											"id"
										],
										[
											"Alias",
											[
												"ReferencedField",
												"user-application",
												"id"
											],
											"application"
										],
										[
											"Alias",
											[
												"ReferencedField",
												"hostos-application",
												"id"
											],
											"can use-application as host"
										]
									]
								],
								[
									"From",
									[
										"Alias",
										[
											"Resource",
											"application$resin"
										],
										"user-application"
									]
								],
								[
									"LeftJoin",
									[
										"Alias",
										[
											"Resource",
											"application$resin$bypass"
										],
										"hostos-application"
									],
									[
										"On",
										[
											"Equals",
											[
												"ReferencedField",
												"hostos-application",
												"is host"
											],
											[
												"Boolean",
												true
											]
										]
									]
								],
								[
									"Where",
									[
										"And",
										[
											"Equals",
											[
												"ReferencedField",
												"user-application",
												"is host"
											],
											[
												"Boolean",
												false
											]
										],
										[
											"Or",
											[
												"Not",
												[
													"Exists",
													[
														"SelectQuery",
														[
															"Select",
															[
																[
																	"Alias",
																	[
																		"Number",
																		1
																	],
																	"id"
																]
															]
														],
														[
															"From",
															[
																"Alias",
																[
																	"Resource",
																	"application-has-tag key$resin$bypass"
																],
																"hostos-application tag"
															]
														],
														[
															"Where",
															[
																"And",
																[
																	"Equals",
																	[
																		"ReferencedField",
																		"hostos-application tag",
																		"application"
																	],
																	[
																		"ReferencedField",
																		"hostos-application",
																		"id"
																	]
																],
																[
																	"Equals",
																	[
																		"ReferencedField",
																		"hostos-application tag",
																		"tag key"
																	],
																	[
																		"Text",
																		"release-policy"
																	]
																],
																[
																	"Equals",
																	[
																		"ReferencedField",
																		"hostos-application tag",
																		"value"
																	],
																	[
																		"Text",
																		"esr"
																	]
																]
															]
														]
													]
												]
											],
											[
												"Exists",
												[
													"SelectQuery",
													[
														"Select",
														[
															[
																"Alias",
																[
																	"Number",
																	1
																],
																"id"
															]
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Resource",
																"subscription$resin$bypass"
															],
															"user-application.subscription"
														]
													],
													[
														"Join",
														[
															"Alias",
															[
																"Resource",
																"plan$resin$bypass"
															],
															"user-application.plan"
														],
														[
															"On",
															[
																"Equals",
																[
																	"ReferencedField",
																	"user-application.subscription",
																	"is for-plan"
																],
																[
																	"ReferencedField",
																	"user-application.plan",
																	"id"
																]
															]
														]
													],
													[
														"Join",
														[
															"Alias",
															[
																"Resource",
																"plan-provides-feature$resin$bypass"
															],
															"user-application.plan feature"
														],
														[
															"On",
															[
																"Equals",
																[
																	"ReferencedField",
																	"user-application.plan feature",
																	"plan"
																],
																[
																	"ReferencedField",
																	"user-application.plan",
																	"id"
																]
															]
														]
													],
													[
														"Join",
														[
															"Alias",
															[
																"Resource",
																"feature$resin$bypass"
															],
															"user-application.feature"
														],
														[
															"On",
															[
																"Equals",
																[
																	"ReferencedField",
																	"user-application.plan feature",
																	"provides-feature"
																],
																[
																	"ReferencedField",
																	"user-application.feature",
																	"id"
																]
															]
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"user-application",
																	"organization"
																],
																[
																	"ReferencedField",
																	"user-application.subscription",
																	"is for-organization"
																]
															],
															[
																"Equals",
																[
																	"Cast",
																	[
																		"ReferencedField",
																		"user-application.subscription",
																		"is active"
																	],
																	"Boolean"
																],
																[
																	"Boolean",
																	true
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"user-application.feature",
																	"slug"
																],
																[
																	"Text",
																	"hostos-esr-access:any"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						}
					},
					"user-has direct access to-application": {
						"fields": [
							{
								"dataType": "Big Integer",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "has direct access to-application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "user-has direct access to-application",
						"indexes": [],
						"idField": "id",
						"resourceName": "user-has direct access to-application",
						"definition": {
							"abstractSql": [
								"SelectQuery",
								[
									"Select",
									[
										[
											"Alias",
											[
												"Null"
											],
											"id"
										],
										[
											"Alias",
											[
												"ReferencedField",
												"application.user",
												"id"
											],
											"user"
										],
										[
											"Alias",
											[
												"ReferencedField",
												"application",
												"id"
											],
											"has direct access to-application"
										]
									]
								],
								[
									"From",
									[
										"Alias",
										[
											"Resource",
											"application$resin"
										],
										"application"
									]
								],
								[
									"CrossJoin",
									[
										"Alias",
										[
											"Resource",
											"user$resin$bypass"
										],
										"application.user"
									]
								],
								[
									"Where",
									[
										"And",
										[
											"Equals",
											[
												"ReferencedField",
												"application.user",
												"actor"
											],
											[
												"Bind",
												"@__ACTOR_ID"
											]
										],
										[
											"Or",
											[
												"Exists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Resource",
																"user-is member of-organization$resin$bypass"
															],
															"application.om"
														]
													],
													[
														"Join",
														[
															"Alias",
															[
																"Resource",
																"organization membership role$resin$bypass"
															],
															"application.om.omr"
														],
														[
															"On",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.om.omr",
																	"id"
																],
																[
																	"ReferencedField",
																	"application.om",
																	"organization membership role"
																]
															]
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.om",
																	"user"
																],
																[
																	"ReferencedField",
																	"application.user",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.om",
																	"is member of-organization"
																],
																[
																	"ReferencedField",
																	"application",
																	"organization"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.om.omr",
																	"name"
																],
																[
																	"EmbeddedText",
																	"administrator"
																]
															]
														]
													]
												]
											],
											[
												"Exists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Resource",
																"user-is member of-application$resin$bypass"
															],
															"application.uma"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.uma",
																	"user"
																],
																[
																	"ReferencedField",
																	"application.user",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.uma",
																	"is member of-application"
																],
																[
																	"ReferencedField",
																	"application",
																	"id"
																]
															]
														]
													]
												]
											],
											[
												"Exists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Resource",
																"team-grants access to-application$resin$bypass"
															],
															"application.taa"
														]
													],
													[
														"Join",
														[
															"Alias",
															[
																"Resource",
																"user-is member of-team$resin$bypass"
															],
															"application.taa.umt"
														],
														[
															"On",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.taa",
																	"team"
																],
																[
																	"ReferencedField",
																	"application.taa.umt",
																	"is member of-team"
																]
															]
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.taa.umt",
																	"user"
																],
																[
																	"ReferencedField",
																	"application.user",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.taa",
																	"grants access to-application"
																],
																[
																	"ReferencedField",
																	"application",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						}
					},
					"public organization": {
						"fields": [
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "handle",
								"required": true,
								"references": {
									"resourceName": "handle",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "public organization",
						"indexes": [],
						"idField": "id",
						"resourceName": "public organization",
						"definition": {
							"abstractSql": [
								"SelectQuery",
								[
									"Select",
									[
										[
											"ReferencedField",
											"organization",
											"id"
										],
										[
											"ReferencedField",
											"organization",
											"name"
										],
										[
											"ReferencedField",
											"organization",
											"handle"
										]
									]
								],
								[
									"From",
									[
										"Alias",
										[
											"Resource",
											"organization$resin$bypass"
										],
										"organization"
									]
								],
								[
									"Where",
									[
										"Exists",
										[
											"SelectQuery",
											[
												"Select",
												[]
											],
											[
												"From",
												[
													"Alias",
													[
														"Resource",
														"application$resin"
													],
													"organization.application"
												]
											],
											[
												"Where",
												[
													"And",
													[
														"Equals",
														[
															"ReferencedField",
															"organization.application",
															"organization"
														],
														[
															"ReferencedField",
															"organization",
															"id"
														]
													],
													[
														"Equals",
														[
															"ReferencedField",
															"organization.application",
															"is public"
														],
														[
															"Boolean",
															true
														]
													]
												]
											]
										]
									]
								]
							]
						}
					},
					"public device": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "actor",
								"required": true,
								"references": {
									"resourceName": "actor",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "api heartbeat state",
								"required": true,
								"references": {
									"resourceName": "api heartbeat state",
									"fieldName": null
								},
								"checks": [
									[
										"In",
										[
											"Field",
											"api heartbeat state"
										],
										[
											"Text",
											"online"
										],
										[
											"Text",
											"offline"
										],
										[
											"Text",
											"timeout"
										],
										[
											"Text",
											"unknown"
										]
									]
								]
							},
							{
								"dataType": "Text",
								"fieldName": "uuid",
								"required": true,
								"references": {
									"resourceName": "uuid",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "local id",
								"required": false,
								"references": {
									"resourceName": "local id",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "device name",
								"required": false,
								"references": {
									"resourceName": "device name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "note",
								"required": false,
								"references": {
									"resourceName": "note",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is of-device type",
								"required": true,
								"references": {
									"resourceName": "device type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-application",
								"required": false,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is online",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "last connectivity event",
								"required": false,
								"references": {
									"resourceName": "last connectivity event",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is connected to vpn",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "last vpn event",
								"required": false,
								"references": {
									"resourceName": "last vpn event",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "is locked until-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "logs channel",
								"required": false,
								"references": {
									"resourceName": "logs channel",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "public address",
								"required": false,
								"references": {
									"resourceName": "public address",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "vpn address",
								"required": false,
								"references": {
									"resourceName": "vpn address",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "ip address",
								"required": false,
								"references": {
									"resourceName": "ip address",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "mac address",
								"required": false,
								"references": {
									"resourceName": "mac address",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "memory usage",
								"required": false,
								"references": {
									"resourceName": "memory usage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "memory total",
								"required": false,
								"references": {
									"resourceName": "memory total",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "storage block device",
								"required": false,
								"references": {
									"resourceName": "storage block device",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "storage usage",
								"required": false,
								"references": {
									"resourceName": "storage usage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "storage total",
								"required": false,
								"references": {
									"resourceName": "storage total",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "cpu usage",
								"required": false,
								"references": {
									"resourceName": "cpu usage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "cpu temp",
								"required": false,
								"references": {
									"resourceName": "cpu temp",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is undervolted",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "cpu id",
								"required": false,
								"references": {
									"resourceName": "cpu id",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is running-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "download progress",
								"required": false,
								"references": {
									"resourceName": "download progress",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": false,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os version",
								"required": false,
								"references": {
									"resourceName": "os version",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os variant",
								"required": false,
								"references": {
									"resourceName": "os variant",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "supervisor version",
								"required": false,
								"references": {
									"resourceName": "supervisor version",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "provisioning progress",
								"required": false,
								"references": {
									"resourceName": "provisioning progress",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "provisioning state",
								"required": false,
								"references": {
									"resourceName": "provisioning state",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "api port",
								"required": false,
								"references": {
									"resourceName": "api port",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "api secret",
								"required": false,
								"references": {
									"resourceName": "api secret",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is managed by-service instance",
								"required": false,
								"references": {
									"resourceName": "service instance",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be running-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be operated by-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is managed by-device",
								"required": false,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be managed by-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-user",
								"required": false,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "latitude",
								"required": false,
								"references": {
									"resourceName": "latitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "longitude",
								"required": false,
								"references": {
									"resourceName": "longitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "custom latitude",
								"required": false,
								"references": {
									"resourceName": "custom latitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "custom longitude",
								"required": false,
								"references": {
									"resourceName": "custom longitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "location",
								"required": false,
								"references": {
									"resourceName": "location",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "is accessible by support until-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is web accessible",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is active",
								"required": true
							},
							{
								"fieldName": "overall status",
								"dataType": "Short Text",
								"computed": [
									"Case",
									[
										"When",
										[
											"Or",
											[
												"In",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Ordered"
												],
												[
													"EmbeddedText",
													"Preparing"
												]
											],
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"status"
													],
													[
														"EmbeddedText",
														"Shipped"
													]
												]
											]
										],
										[
											"ToLower",
											[
												"ReferencedField",
												"device",
												"status"
											]
										]
									],
									[
										"When",
										[
											"Equals",
											[
												"ReferencedField",
												"device",
												"is active"
											],
											[
												"Boolean",
												false
											]
										],
										[
											"EmbeddedText",
											"inactive"
										]
									],
									[
										"When",
										[
											"Equals",
											[
												"ReferencedField",
												"device",
												"provisioning state"
											],
											[
												"EmbeddedText",
												"Post-Provisioning"
											]
										],
										[
											"EmbeddedText",
											"post-provisioning"
										]
									],
									[
										"When",
										[
											"And",
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"In",
													[
														"ReferencedField",
														"device",
														"api heartbeat state"
													],
													[
														"EmbeddedText",
														"offline"
													],
													[
														"EmbeddedText",
														"unknown"
													]
												]
											],
											[
												"NotExists",
												[
													"ReferencedField",
													"device",
													"last connectivity event"
												]
											]
										],
										[
											"EmbeddedText",
											"configuring"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"is online"
												],
												[
													"Boolean",
													false
												]
											],
											[
												"In",
												[
													"ReferencedField",
													"device",
													"api heartbeat state"
												],
												[
													"EmbeddedText",
													"offline"
												],
												[
													"EmbeddedText",
													"unknown"
												]
											]
										],
										[
											"EmbeddedText",
											"offline"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Exists",
												[
													"ReferencedField",
													"device",
													"download progress"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Downloading"
												]
											]
										],
										[
											"EmbeddedText",
											"updating"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"ReferencedField",
												"device",
												"provisioning progress"
											]
										],
										[
											"EmbeddedText",
											"configuring"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"SelectQuery",
												[
													"Select",
													[]
												],
												[
													"From",
													[
														"Table",
														"image install"
													]
												],
												[
													"Where",
													[
														"And",
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"device"
															],
															[
																"ReferencedField",
																"device",
																"id"
															]
														],
														[
															"Exists",
															[
																"ReferencedField",
																"image install",
																"download progress"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"status"
															],
															[
																"EmbeddedText",
																"Downloading"
															]
														]
													]
												]
											]
										],
										[
											"EmbeddedText",
											"updating"
										]
									],
									[
										"Else",
										[
											"EmbeddedText",
											"idle"
										]
									]
								]
							},
							{
								"fieldName": "overall progress",
								"dataType": "Integer",
								"computed": [
									"Case",
									[
										"When",
										[
											"Or",
											[
												"In",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Ordered"
												],
												[
													"EmbeddedText",
													"Preparing"
												]
											],
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"status"
													],
													[
														"EmbeddedText",
														"Shipped"
													]
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"is active"
												],
												[
													"Boolean",
													false
												]
											]
										],
										[
											"Null"
										]
									],
									[
										"When",
										[
											"Equals",
											[
												"ReferencedField",
												"device",
												"provisioning state"
											],
											[
												"EmbeddedText",
												"Post-Provisioning"
											]
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										]
									],
									[
										"When",
										[
											"And",
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"In",
													[
														"ReferencedField",
														"device",
														"api heartbeat state"
													],
													[
														"EmbeddedText",
														"offline"
													],
													[
														"EmbeddedText",
														"unknown"
													]
												]
											],
											[
												"NotExists",
												[
													"ReferencedField",
													"device",
													"last connectivity event"
												]
											]
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"is online"
												],
												[
													"Boolean",
													false
												]
											],
											[
												"In",
												[
													"ReferencedField",
													"device",
													"api heartbeat state"
												],
												[
													"EmbeddedText",
													"offline"
												],
												[
													"EmbeddedText",
													"unknown"
												]
											]
										],
										[
											"Null"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Exists",
												[
													"ReferencedField",
													"device",
													"download progress"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Downloading"
												]
											]
										],
										[
											"ReferencedField",
											"device",
											"download progress"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"ReferencedField",
												"device",
												"provisioning progress"
											]
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"SelectQuery",
												[
													"Select",
													[]
												],
												[
													"From",
													[
														"Table",
														"image install"
													]
												],
												[
													"Where",
													[
														"And",
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"device"
															],
															[
																"ReferencedField",
																"device",
																"id"
															]
														],
														[
															"Exists",
															[
																"ReferencedField",
																"image install",
																"download progress"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"status"
															],
															[
																"EmbeddedText",
																"Downloading"
															]
														]
													]
												]
											]
										],
										[
											"SelectQuery",
											[
												"Select",
												[
													[
														"Cast",
														[
															"Round",
															[
																"Average",
																[
																	"Coalesce",
																	[
																		"ReferencedField",
																		"image install",
																		"download progress"
																	],
																	[
																		"Number",
																		100
																	]
																]
															]
														],
														"Integer"
													]
												]
											],
											[
												"From",
												[
													"Table",
													"image install"
												]
											],
											[
												"Where",
												[
													"And",
													[
														"Equals",
														[
															"ReferencedField",
															"image install",
															"device"
														],
														[
															"ReferencedField",
															"device",
															"id"
														]
													],
													[
														"NotEquals",
														[
															"ReferencedField",
															"image install",
															"status"
														],
														[
															"EmbeddedText",
															"deleted"
														]
													],
													[
														"Or",
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"status"
															],
															[
																"EmbeddedText",
																"Downloading"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"is provided by-release"
															],
															[
																"Coalesce",
																[
																	"ReferencedField",
																	"device",
																	"should be running-release"
																],
																[
																	"SelectQuery",
																	[
																		"Select",
																		[
																			[
																				"ReferencedField",
																				"application",
																				"should be running-release"
																			]
																		]
																	],
																	[
																		"From",
																		[
																			"Table",
																			"application"
																		]
																	],
																	[
																		"Where",
																		[
																			"Equals",
																			[
																				"ReferencedField",
																				"device",
																				"belongs to-application"
																			],
																			[
																				"ReferencedField",
																				"application",
																				"id"
																			]
																		]
																	]
																]
															]
														]
													]
												]
											]
										]
									],
									[
										"Else",
										[
											"Null"
										]
									]
								]
							},
							{
								"fieldName": "was recently online",
								"dataType": "Boolean",
								"required": true,
								"computed": [
									"Or",
									[
										"Equals",
										[
											"ReferencedField",
											"public device",
											"is online"
										],
										[
											"Boolean",
											true
										]
									],
									[
										"LessThanOrEqual",
										[
											"Subtract",
											[
												"Cast",
												[
													"CurrentDate"
												],
												"Date"
											],
											[
												"ReferencedField",
												"public device",
												"last connectivity event"
											]
										],
										[
											"Duration",
											{
												"day": 28
											}
										]
									]
								]
							}
						],
						"primitive": false,
						"name": "public device",
						"indexes": [],
						"idField": "id",
						"resourceName": "public device",
						"modelName": "device",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"definition": {
							"abstractSql": [
								"SelectQuery",
								[
									"Select",
									[
										[
											"ReferencedField",
											"device",
											"created at"
										],
										[
											"ReferencedField",
											"device",
											"modified at"
										],
										[
											"ReferencedField",
											"device",
											"id"
										],
										[
											"Alias",
											[
												"Null"
											],
											"actor"
										],
										[
											"ReferencedField",
											"device",
											"api heartbeat state"
										],
										[
											"ReferencedField",
											"device",
											"uuid"
										],
										[
											"ReferencedField",
											"device",
											"local id"
										],
										[
											"ReferencedField",
											"device",
											"device name"
										],
										[
											"ReferencedField",
											"device",
											"note"
										],
										[
											"ReferencedField",
											"device",
											"is of-device type"
										],
										[
											"ReferencedField",
											"device",
											"belongs to-application"
										],
										[
											"ReferencedField",
											"device",
											"is online"
										],
										[
											"ReferencedField",
											"device",
											"last connectivity event"
										],
										[
											"ReferencedField",
											"device",
											"is connected to vpn"
										],
										[
											"ReferencedField",
											"device",
											"last vpn event"
										],
										[
											"ReferencedField",
											"device",
											"is locked until-date"
										],
										[
											"ReferencedField",
											"device",
											"logs channel"
										],
										[
											"ReferencedField",
											"device",
											"public address"
										],
										[
											"ReferencedField",
											"device",
											"vpn address"
										],
										[
											"ReferencedField",
											"device",
											"ip address"
										],
										[
											"ReferencedField",
											"device",
											"mac address"
										],
										[
											"ReferencedField",
											"device",
											"memory usage"
										],
										[
											"ReferencedField",
											"device",
											"memory total"
										],
										[
											"ReferencedField",
											"device",
											"storage block device"
										],
										[
											"ReferencedField",
											"device",
											"storage usage"
										],
										[
											"ReferencedField",
											"device",
											"storage total"
										],
										[
											"ReferencedField",
											"device",
											"cpu usage"
										],
										[
											"ReferencedField",
											"device",
											"cpu temp"
										],
										[
											"ReferencedField",
											"device",
											"is undervolted"
										],
										[
											"ReferencedField",
											"device",
											"cpu id"
										],
										[
											"ReferencedField",
											"device",
											"is running-release"
										],
										[
											"ReferencedField",
											"device",
											"download progress"
										],
										[
											"ReferencedField",
											"device",
											"status"
										],
										[
											"ReferencedField",
											"device",
											"os version"
										],
										[
											"ReferencedField",
											"device",
											"os variant"
										],
										[
											"ReferencedField",
											"device",
											"supervisor version"
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										],
										[
											"ReferencedField",
											"device",
											"provisioning state"
										],
										[
											"ReferencedField",
											"device",
											"api port"
										],
										[
											"ReferencedField",
											"device",
											"api secret"
										],
										[
											"Alias",
											[
												"Null"
											],
											"is managed by-service instance"
										],
										[
											"Alias",
											[
												"Null"
											],
											"should be running-release"
										],
										[
											"ReferencedField",
											"device",
											"should be operated by-release"
										],
										[
											"Alias",
											[
												"Null"
											],
											"is managed by-device"
										],
										[
											"ReferencedField",
											"device",
											"should be managed by-release"
										],
										[
											"Alias",
											[
												"Null"
											],
											"belongs to-user"
										],
										[
											"Alias",
											[
												"Case",
												[
													"When",
													[
														"Equals",
														[
															"Coalesce",
															[
																"ReferencedField",
																"device",
																"latitude"
															],
															[
																"Text",
																""
															]
														],
														[
															"Text",
															""
														]
													],
													[
														"ReferencedField",
														"device",
														"latitude"
													]
												],
												[
													"Else",
													[
														"Cast",
														[
															"Divide",
															[
																"Round",
																[
																	"Multiply",
																	[
																		"Cast",
																		[
																			"ReferencedField",
																			"device",
																			"latitude"
																		],
																		"Real"
																	],
																	[
																		"Number",
																		6
																	]
																]
															],
															[
																"Number",
																6
															]
														],
														"Text"
													]
												]
											],
											"latitude"
										],
										[
											"Alias",
											[
												"Case",
												[
													"When",
													[
														"Equals",
														[
															"Coalesce",
															[
																"ReferencedField",
																"device",
																"longitude"
															],
															[
																"Text",
																""
															]
														],
														[
															"Text",
															""
														]
													],
													[
														"ReferencedField",
														"device",
														"longitude"
													]
												],
												[
													"Else",
													[
														"Cast",
														[
															"Divide",
															[
																"Round",
																[
																	"Multiply",
																	[
																		"Cast",
																		[
																			"ReferencedField",
																			"device",
																			"longitude"
																		],
																		"Real"
																	],
																	[
																		"Number",
																		6
																	]
																]
															],
															[
																"Number",
																6
															]
														],
														"Text"
													]
												]
											],
											"longitude"
										],
										[
											"ReferencedField",
											"device",
											"custom latitude"
										],
										[
											"ReferencedField",
											"device",
											"custom longitude"
										],
										[
											"ReferencedField",
											"device",
											"location"
										],
										[
											"ReferencedField",
											"device",
											"is accessible by support until-date"
										],
										[
											"ReferencedField",
											"device",
											"is web accessible"
										],
										[
											"ReferencedField",
											"device",
											"is active"
										],
										[
											"ReferencedField",
											"device",
											"overall status"
										],
										[
											"ReferencedField",
											"device",
											"overall progress"
										]
									]
								],
								[
									"From",
									[
										"Alias",
										[
											"Resource",
											"device$resin$bypass"
										],
										"device"
									]
								],
								[
									"Where",
									[
										"Exists",
										[
											"SelectQuery",
											[
												"Select",
												[]
											],
											[
												"From",
												[
													"Alias",
													[
														"Resource",
														"application$resin$bypass"
													],
													"device.application"
												]
											],
											[
												"Where",
												[
													"And",
													[
														"Equals",
														[
															"ReferencedField",
															"device.application",
															"id"
														],
														[
															"ReferencedField",
															"device",
															"belongs to-application"
														]
													],
													[
														"Equals",
														[
															"ReferencedField",
															"device.application",
															"is public"
														],
														[
															"Boolean",
															true
														]
													]
												]
											]
										]
									]
								]
							]
						}
					},
					"actor$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "actor",
						"indexes": [],
						"idField": "id",
						"resourceName": "actor",
						"modelName": "actor",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"permission$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "permission",
						"indexes": [],
						"idField": "id",
						"resourceName": "permission",
						"modelName": "permission",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "name"
					},
					"role$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "role",
						"indexes": [],
						"idField": "id",
						"resourceName": "role",
						"modelName": "role",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "name"
					},
					"role-has-permission$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "role",
								"required": true,
								"references": {
									"resourceName": "role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "permission",
								"required": true,
								"references": {
									"resourceName": "permission",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "role-has-permission",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"role",
									"permission"
								]
							}
						],
						"idField": "id",
						"resourceName": "role-has-permission",
						"modelName": "role has permission",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "actor",
								"required": true,
								"references": {
									"resourceName": "actor",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "username",
								"required": true,
								"references": {
									"resourceName": "username",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Hashed",
								"fieldName": "password",
								"required": false,
								"references": {
									"resourceName": "password",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "jwt secret",
								"required": false,
								"references": {
									"resourceName": "jwt secret",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "email",
								"required": false,
								"references": {
									"resourceName": "email",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "internal note",
								"required": false,
								"references": {
									"resourceName": "internal note",
									"fieldName": null
								}
							},
							{
								"dataType": "File",
								"fieldName": "two factor key",
								"required": false,
								"references": {
									"resourceName": "two factor key",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is two factor protected",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "has disabled newsletter",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "has been sent verification email",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is verified",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "must be verified",
								"required": true
							},
							{
								"dataType": "Text",
								"fieldName": "unverified email",
								"required": false,
								"references": {
									"resourceName": "unverified email",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "email verification code",
								"required": false,
								"references": {
									"resourceName": "email verification code",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Date Time",
								"fieldName": "can use email verification code until-expiry date",
								"required": false,
								"references": {
									"resourceName": "expiry date",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "password reset code",
								"required": false,
								"references": {
									"resourceName": "password reset code",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "can reset password until-expiry date",
								"required": false,
								"references": {
									"resourceName": "expiry date",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "first name",
								"required": false,
								"references": {
									"resourceName": "first name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "last name",
								"required": false,
								"references": {
									"resourceName": "last name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "account type",
								"required": false,
								"references": {
									"resourceName": "account type",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "has legacy link to-organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "user",
						"indexes": [],
						"idField": "id",
						"resourceName": "user",
						"modelName": "user",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "username"
					},
					"user-has-role$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "role",
								"required": true,
								"references": {
									"resourceName": "role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Date Time",
								"fieldName": "expiry date",
								"required": false,
								"references": {
									"resourceName": "expiry date",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "user-has-role",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"user",
									"role"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-has-role",
						"modelName": "user has role",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user-has-permission$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "permission",
								"required": true,
								"references": {
									"resourceName": "permission",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Date Time",
								"fieldName": "expiry date",
								"required": false,
								"references": {
									"resourceName": "expiry date",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "user-has-permission",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"user",
									"permission"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-has-permission",
						"modelName": "user has permission",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"api key$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "key",
								"required": true,
								"references": {
									"resourceName": "key",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is of-actor",
								"required": true,
								"references": {
									"resourceName": "actor",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": false,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "description",
								"required": false,
								"references": {
									"resourceName": "description",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "api key",
						"indexes": [],
						"idField": "id",
						"resourceName": "api key",
						"modelName": "api key",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "key"
					},
					"api key-has-role$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "api key",
								"required": true,
								"references": {
									"resourceName": "api key",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "role",
								"required": true,
								"references": {
									"resourceName": "role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "api key-has-role",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"api key",
									"role"
								]
							}
						],
						"idField": "id",
						"resourceName": "api key-has-role",
						"modelName": "api key has role",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"api key-has-permission$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "api key",
								"required": true,
								"references": {
									"resourceName": "api key",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "permission",
								"required": true,
								"references": {
									"resourceName": "permission",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "api key-has-permission",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"api key",
									"permission"
								]
							}
						],
						"idField": "id",
						"resourceName": "api key-has-permission",
						"modelName": "api key has permission",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application type$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "supports web url",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "supports multicontainer",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "supports gateway mode",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "needs-os version range",
								"required": false,
								"references": {
									"resourceName": "os version range",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "requires payment",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is legacy",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Text",
								"fieldName": "description",
								"required": false,
								"references": {
									"resourceName": "description",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "maximum device count",
								"required": false,
								"references": {
									"resourceName": "maximum device count",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "application type",
						"indexes": [],
						"idField": "id",
						"resourceName": "application type",
						"modelName": "application type",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"cpu architecture$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "cpu architecture",
						"indexes": [],
						"idField": "id",
						"resourceName": "cpu architecture",
						"modelName": "cpu architecture",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"config$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "key",
								"required": true,
								"references": {
									"resourceName": "key",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "scope",
								"required": false,
								"references": {
									"resourceName": "scope",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "description",
								"required": false,
								"references": {
									"resourceName": "description",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "config",
						"indexes": [],
						"idField": "id",
						"resourceName": "config",
						"modelName": "config",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"device type$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is of-cpu architecture",
								"required": true,
								"references": {
									"resourceName": "cpu architecture",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Text",
								"fieldName": "logo",
								"required": false,
								"references": {
									"resourceName": "logo",
									"fieldName": null
								}
							},
							{
								"dataType": "JSON",
								"fieldName": "contract",
								"required": false,
								"references": {
									"resourceName": "contract",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-device family",
								"required": false,
								"references": {
									"resourceName": "device family",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is private",
								"required": true
							}
						],
						"primitive": false,
						"name": "device type",
						"indexes": [],
						"idField": "id",
						"resourceName": "device type",
						"modelName": "device type",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"device family$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is manufactured by-device manufacturer",
								"required": false,
								"references": {
									"resourceName": "device manufacturer",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "device family",
						"indexes": [],
						"idField": "id",
						"resourceName": "device family",
						"modelName": "device family",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"device manufacturer$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "device manufacturer",
						"indexes": [],
						"idField": "id",
						"resourceName": "device manufacturer",
						"modelName": "device manufacturer",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"image$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Date Time",
								"fieldName": "start timestamp",
								"required": true,
								"references": {
									"resourceName": "start timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "dockerfile",
								"required": false,
								"references": {
									"resourceName": "dockerfile",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is a build of-service",
								"required": true,
								"references": {
									"resourceName": "application-has-service name",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Big Integer",
								"fieldName": "image size",
								"required": false,
								"references": {
									"resourceName": "image size",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "is stored at-image location",
								"required": true,
								"references": {
									"resourceName": "image location",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "project type",
								"required": false,
								"references": {
									"resourceName": "project type",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "error message",
								"required": false,
								"references": {
									"resourceName": "error message",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "build log",
								"required": false,
								"references": {
									"resourceName": "build log",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "push timestamp",
								"required": false,
								"references": {
									"resourceName": "push timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": true,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "content hash",
								"required": false,
								"references": {
									"resourceName": "content hash",
									"fieldName": null
								}
							},
							{
								"dataType": "JSON",
								"fieldName": "contract",
								"required": false,
								"references": {
									"resourceName": "contract",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "image",
						"indexes": [],
						"idField": "id",
						"resourceName": "image",
						"modelName": "image",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each image that has a status that is equal to \"success\", has a push timestamp.",
								"name": "image$EsnlFqzUfM0jeomVNVuB+GgghnPSgJlMCa0zMBA6cV8=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Equals",
											[
												"Field",
												"status"
											],
											[
												"Text",
												"success"
											]
										],
										[
											"Exists",
											[
												"Field",
												"status"
											]
										],
										[
											"NotExists",
											[
												"Field",
												"push timestamp"
											]
										]
									]
								]
							}
						]
					},
					"organization$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "handle",
								"required": true,
								"references": {
									"resourceName": "handle",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Boolean",
								"fieldName": "is active",
								"required": true
							},
							{
								"dataType": "Text",
								"fieldName": "company name",
								"required": false,
								"references": {
									"resourceName": "company name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "internal company name",
								"required": false,
								"references": {
									"resourceName": "internal company name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "internal note",
								"required": false,
								"references": {
									"resourceName": "internal note",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "billing account code",
								"required": false,
								"references": {
									"resourceName": "billing account code",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Date Time",
								"fieldName": "has past due invoice since-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "tradegecko company id",
								"required": false,
								"references": {
									"resourceName": "tradegecko company id",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "industry",
								"required": false,
								"references": {
									"resourceName": "industry",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "website",
								"required": false,
								"references": {
									"resourceName": "website",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "organization",
						"indexes": [],
						"idField": "id",
						"resourceName": "organization",
						"modelName": "organization",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each name (Auth) of an organization, has a Length (Type) that is greater than 0.",
								"name": "organization$E+cBryACQrrUVLO1vZD8cqyxwba+nOu+T7UYno7mUZ0=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThan",
												[
													"Integer",
													0
												],
												[
													"CharacterLength",
													[
														"Field",
														"name"
													]
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"name"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each handle of an organization, has a Length (Type) that is greater than 0.",
								"name": "organization$/jm+9cFLOktW7UDAih9SkCWgaZxrnJBTAFjsx8Lrc7A=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThan",
												[
													"Integer",
													0
												],
												[
													"CharacterLength",
													[
														"Field",
														"handle"
													]
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"handle"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each organization that has a billing account code, has a billing account code that has a Length (Type) that is greater than 0 and is less than or equal to 50.",
								"name": "organization$t1IpNW1jB1Fj04JKzjCUqcztS+9Erx047N21Y8oziyc=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"billing account code"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"billing account code"
														]
													]
												],
												[
													"LessThanOrEqual",
													[
														"CharacterLength",
														[
															"Field",
															"billing account code"
														]
													],
													[
														"Integer",
														50
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"billing account code"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"billing account code"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each organization that has a tradegecko company id, has a tradegecko company id that is greater than 0.",
								"name": "organization$zUopD7sIywaHcDBxcEHlpacjB9/9AqKzXsqG2i4QnnQ=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"tradegecko company id"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"Field",
														"tradegecko company id"
													]
												],
												[
													"Exists",
													[
														"Field",
														"tradegecko company id"
													]
												]
											]
										]
									]
								]
							}
						]
					},
					"service instance$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "service type",
								"required": true,
								"references": {
									"resourceName": "service type",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "ip address",
								"required": true,
								"references": {
									"resourceName": "ip address",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "last heartbeat",
								"required": true,
								"references": {
									"resourceName": "last heartbeat",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "service instance",
						"indexes": [],
						"idField": "id",
						"resourceName": "service instance",
						"modelName": "service instance",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"application$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "actor",
								"required": true,
								"references": {
									"resourceName": "actor",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "should track latest release",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "is of-class",
								"required": true,
								"references": {
									"resourceName": "class",
									"fieldName": null
								},
								"checks": [
									[
										"In",
										[
											"Field",
											"is of-class"
										],
										[
											"Text",
											"fleet"
										],
										[
											"Text",
											"block"
										],
										[
											"Text",
											"app"
										]
									]
								]
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Text",
								"fieldName": "app name",
								"required": true,
								"references": {
									"resourceName": "app name",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-device type",
								"required": true,
								"references": {
									"resourceName": "device type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be running-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "depends on-application",
								"required": false,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application type",
								"required": true,
								"references": {
									"resourceName": "application type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is host",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is archived",
								"required": true
							},
							{
								"dataType": "Text",
								"fieldName": "uuid",
								"required": true,
								"references": {
									"resourceName": "uuid",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Boolean",
								"fieldName": "is public",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "is accessible by support until-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is discoverable",
								"required": true
							},
							{
								"dataType": "Text",
								"fieldName": "is stored at-repository url",
								"required": false,
								"references": {
									"resourceName": "repository url",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "public organization",
								"required": true,
								"references": {
									"resourceName": "public organization",
									"fieldName": "id"
								},
								"computed": [
									"SelectQuery",
									[
										"Select",
										[
											[
												"ReferencedField",
												"application",
												"organization"
											]
										]
									]
								]
							}
						],
						"primitive": false,
						"name": "application",
						"indexes": [],
						"idField": "id",
						"resourceName": "application",
						"modelName": "application",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each application has an app name that has a Length (Type) that is greater than or equal to 4 and is less than or equal to 100.",
								"name": "application$Rlu1vWu2xL/ssYhMPT7xj1zIn00+4AkgpcvOQN9Lr+s=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThanOrEqual",
												[
													"Integer",
													4
												],
												[
													"CharacterLength",
													[
														"Field",
														"app name"
													]
												]
											],
											[
												"LessThanOrEqual",
												[
													"CharacterLength",
													[
														"Field",
														"app name"
													]
												],
												[
													"Integer",
													100
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"app name"
													]
												]
											],
											[
												"Exists",
												[
													"Field",
													"app name"
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each application has a uuid that has a Length (Type) that is equal to 32.",
								"name": "application$GZ8FNlwwxFjgC1YvG6LoHCW/ECfWTpQLmNYKUJQoSXI=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"Equals",
												[
													"CharacterLength",
													[
														"Field",
														"uuid"
													]
												],
												[
													"Integer",
													32
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"uuid"
													]
												]
											],
											[
												"Exists",
												[
													"Field",
													"uuid"
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each application that is stored at a repository url, is stored at a repository url that has a Length (Type) that is greater than 0 and is less than or equal to 500.",
								"name": "application$5xYJVg6Ag2DCiKEisR++cj963bBd0CqYQiLCJtzWv9E=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"is stored at-repository url"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"is stored at-repository url"
														]
													]
												],
												[
													"LessThanOrEqual",
													[
														"CharacterLength",
														[
															"Field",
															"is stored at-repository url"
														]
													],
													[
														"Integer",
														500
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"is stored at-repository url"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"is stored at-repository url"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each application that is public, is stored at a repository url.",
								"name": "application$BOqpQfeWHdcXjPXncobEiZztwJXoxoKEyM6LSUH2D+4=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Equals",
											[
												"Field",
												"is public"
											],
											[
												"Boolean",
												true
											]
										],
										[
											"NotExists",
											[
												"Field",
												"is stored at-repository url"
											]
										]
									]
								]
							}
						]
					},
					"application-has-env var name$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "application environment variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-env var name",
						"modelName": "application has env var name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-name$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "application config variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-name",
						"modelName": "application has name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-service name$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "service name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "service",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application",
									"service name"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-service name",
						"modelName": "application has service name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-service name-has-label name$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "service",
								"required": true,
								"references": {
									"resourceName": "application-has-service name",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "label name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "service label",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"service",
									"label name"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-service name-has-label name",
						"modelName": "service has label name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-service name-has-name$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "service",
								"required": true,
								"references": {
									"resourceName": "application-has-service name",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "service environment variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"service",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-service name-has-name",
						"modelName": "service has name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-tag key$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "tag key",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "application tag",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application",
									"tag key"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-tag key",
						"modelName": "application has tag key",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"checks": [
							{
								"description": "It is necessary that each application tag has a tag key that has a Length (Type) that is greater than 0.",
								"name": "application tag$zPAVMu9ZY2npomham40YGgXx5N6Hau03dIo6x9gf6/E=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThan",
												[
													"Integer",
													0
												],
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Equals",
												[
													"Field",
													"tag key"
												],
												[
													"Field",
													"tag key"
												]
											],
											[
												"Exists",
												[
													"Field",
													"tag key"
												]
											]
										]
									]
								]
							}
						]
					},
					"device$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "actor",
								"required": true,
								"references": {
									"resourceName": "actor",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "api heartbeat state",
								"required": true,
								"references": {
									"resourceName": "api heartbeat state",
									"fieldName": null
								},
								"checks": [
									[
										"In",
										[
											"Field",
											"api heartbeat state"
										],
										[
											"Text",
											"online"
										],
										[
											"Text",
											"offline"
										],
										[
											"Text",
											"timeout"
										],
										[
											"Text",
											"unknown"
										]
									]
								]
							},
							{
								"dataType": "Text",
								"fieldName": "uuid",
								"required": true,
								"references": {
									"resourceName": "uuid",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "local id",
								"required": false,
								"references": {
									"resourceName": "local id",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "device name",
								"required": false,
								"references": {
									"resourceName": "device name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "note",
								"required": false,
								"references": {
									"resourceName": "note",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is of-device type",
								"required": true,
								"references": {
									"resourceName": "device type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-application",
								"required": false,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is online",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "last connectivity event",
								"required": false,
								"references": {
									"resourceName": "last connectivity event",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is connected to vpn",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "last vpn event",
								"required": false,
								"references": {
									"resourceName": "last vpn event",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "is locked until-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "logs channel",
								"required": false,
								"references": {
									"resourceName": "logs channel",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "public address",
								"required": false,
								"references": {
									"resourceName": "public address",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "vpn address",
								"required": false,
								"references": {
									"resourceName": "vpn address",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "ip address",
								"required": false,
								"references": {
									"resourceName": "ip address",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "mac address",
								"required": false,
								"references": {
									"resourceName": "mac address",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "memory usage",
								"required": false,
								"references": {
									"resourceName": "memory usage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "memory total",
								"required": false,
								"references": {
									"resourceName": "memory total",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "storage block device",
								"required": false,
								"references": {
									"resourceName": "storage block device",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "storage usage",
								"required": false,
								"references": {
									"resourceName": "storage usage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "storage total",
								"required": false,
								"references": {
									"resourceName": "storage total",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "cpu usage",
								"required": false,
								"references": {
									"resourceName": "cpu usage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "cpu temp",
								"required": false,
								"references": {
									"resourceName": "cpu temp",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is undervolted",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "cpu id",
								"required": false,
								"references": {
									"resourceName": "cpu id",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is running-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "download progress",
								"required": false,
								"references": {
									"resourceName": "download progress",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": false,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os version",
								"required": false,
								"references": {
									"resourceName": "os version",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os variant",
								"required": false,
								"references": {
									"resourceName": "os variant",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "supervisor version",
								"required": false,
								"references": {
									"resourceName": "supervisor version",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "provisioning progress",
								"required": false,
								"references": {
									"resourceName": "provisioning progress",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "provisioning state",
								"required": false,
								"references": {
									"resourceName": "provisioning state",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "api port",
								"required": false,
								"references": {
									"resourceName": "api port",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "api secret",
								"required": false,
								"references": {
									"resourceName": "api secret",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is managed by-service instance",
								"required": false,
								"references": {
									"resourceName": "service instance",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be running-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be operated by-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is managed by-device",
								"required": false,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be managed by-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-user",
								"required": false,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "latitude",
								"required": false,
								"references": {
									"resourceName": "latitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "longitude",
								"required": false,
								"references": {
									"resourceName": "longitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "custom latitude",
								"required": false,
								"references": {
									"resourceName": "custom latitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "custom longitude",
								"required": false,
								"references": {
									"resourceName": "custom longitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "location",
								"required": false,
								"references": {
									"resourceName": "location",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "is accessible by support until-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is web accessible",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is active",
								"required": true
							},
							{
								"fieldName": "overall status",
								"dataType": "Short Text",
								"computed": [
									"Case",
									[
										"When",
										[
											"Or",
											[
												"In",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Ordered"
												],
												[
													"EmbeddedText",
													"Preparing"
												]
											],
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"status"
													],
													[
														"EmbeddedText",
														"Shipped"
													]
												]
											]
										],
										[
											"ToLower",
											[
												"ReferencedField",
												"device",
												"status"
											]
										]
									],
									[
										"When",
										[
											"Equals",
											[
												"ReferencedField",
												"device",
												"is active"
											],
											[
												"Boolean",
												false
											]
										],
										[
											"EmbeddedText",
											"inactive"
										]
									],
									[
										"When",
										[
											"Equals",
											[
												"ReferencedField",
												"device",
												"provisioning state"
											],
											[
												"EmbeddedText",
												"Post-Provisioning"
											]
										],
										[
											"EmbeddedText",
											"post-provisioning"
										]
									],
									[
										"When",
										[
											"And",
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"In",
													[
														"ReferencedField",
														"device",
														"api heartbeat state"
													],
													[
														"EmbeddedText",
														"offline"
													],
													[
														"EmbeddedText",
														"unknown"
													]
												]
											],
											[
												"NotExists",
												[
													"ReferencedField",
													"device",
													"last connectivity event"
												]
											]
										],
										[
											"EmbeddedText",
											"configuring"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"is online"
												],
												[
													"Boolean",
													false
												]
											],
											[
												"In",
												[
													"ReferencedField",
													"device",
													"api heartbeat state"
												],
												[
													"EmbeddedText",
													"offline"
												],
												[
													"EmbeddedText",
													"unknown"
												]
											]
										],
										[
											"EmbeddedText",
											"offline"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Exists",
												[
													"ReferencedField",
													"device",
													"download progress"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Downloading"
												]
											]
										],
										[
											"EmbeddedText",
											"updating"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"ReferencedField",
												"device",
												"provisioning progress"
											]
										],
										[
											"EmbeddedText",
											"configuring"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"SelectQuery",
												[
													"Select",
													[]
												],
												[
													"From",
													[
														"Table",
														"image install"
													]
												],
												[
													"Where",
													[
														"And",
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"device"
															],
															[
																"ReferencedField",
																"device",
																"id"
															]
														],
														[
															"Exists",
															[
																"ReferencedField",
																"image install",
																"download progress"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"status"
															],
															[
																"EmbeddedText",
																"Downloading"
															]
														]
													]
												]
											]
										],
										[
											"EmbeddedText",
											"updating"
										]
									],
									[
										"Else",
										[
											"EmbeddedText",
											"idle"
										]
									]
								]
							},
							{
								"fieldName": "overall progress",
								"dataType": "Integer",
								"computed": [
									"Case",
									[
										"When",
										[
											"Or",
											[
												"In",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Ordered"
												],
												[
													"EmbeddedText",
													"Preparing"
												]
											],
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"status"
													],
													[
														"EmbeddedText",
														"Shipped"
													]
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"is active"
												],
												[
													"Boolean",
													false
												]
											]
										],
										[
											"Null"
										]
									],
									[
										"When",
										[
											"Equals",
											[
												"ReferencedField",
												"device",
												"provisioning state"
											],
											[
												"EmbeddedText",
												"Post-Provisioning"
											]
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										]
									],
									[
										"When",
										[
											"And",
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"In",
													[
														"ReferencedField",
														"device",
														"api heartbeat state"
													],
													[
														"EmbeddedText",
														"offline"
													],
													[
														"EmbeddedText",
														"unknown"
													]
												]
											],
											[
												"NotExists",
												[
													"ReferencedField",
													"device",
													"last connectivity event"
												]
											]
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"is online"
												],
												[
													"Boolean",
													false
												]
											],
											[
												"In",
												[
													"ReferencedField",
													"device",
													"api heartbeat state"
												],
												[
													"EmbeddedText",
													"offline"
												],
												[
													"EmbeddedText",
													"unknown"
												]
											]
										],
										[
											"Null"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Exists",
												[
													"ReferencedField",
													"device",
													"download progress"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Downloading"
												]
											]
										],
										[
											"ReferencedField",
											"device",
											"download progress"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"ReferencedField",
												"device",
												"provisioning progress"
											]
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"SelectQuery",
												[
													"Select",
													[]
												],
												[
													"From",
													[
														"Table",
														"image install"
													]
												],
												[
													"Where",
													[
														"And",
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"device"
															],
															[
																"ReferencedField",
																"device",
																"id"
															]
														],
														[
															"Exists",
															[
																"ReferencedField",
																"image install",
																"download progress"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"status"
															],
															[
																"EmbeddedText",
																"Downloading"
															]
														]
													]
												]
											]
										],
										[
											"SelectQuery",
											[
												"Select",
												[
													[
														"Cast",
														[
															"Round",
															[
																"Average",
																[
																	"Coalesce",
																	[
																		"ReferencedField",
																		"image install",
																		"download progress"
																	],
																	[
																		"Number",
																		100
																	]
																]
															]
														],
														"Integer"
													]
												]
											],
											[
												"From",
												[
													"Table",
													"image install"
												]
											],
											[
												"Where",
												[
													"And",
													[
														"Equals",
														[
															"ReferencedField",
															"image install",
															"device"
														],
														[
															"ReferencedField",
															"device",
															"id"
														]
													],
													[
														"NotEquals",
														[
															"ReferencedField",
															"image install",
															"status"
														],
														[
															"EmbeddedText",
															"deleted"
														]
													],
													[
														"Or",
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"status"
															],
															[
																"EmbeddedText",
																"Downloading"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"is provided by-release"
															],
															[
																"Coalesce",
																[
																	"ReferencedField",
																	"device",
																	"should be running-release"
																],
																[
																	"SelectQuery",
																	[
																		"Select",
																		[
																			[
																				"ReferencedField",
																				"application",
																				"should be running-release"
																			]
																		]
																	],
																	[
																		"From",
																		[
																			"Table",
																			"application"
																		]
																	],
																	[
																		"Where",
																		[
																			"Equals",
																			[
																				"ReferencedField",
																				"device",
																				"belongs to-application"
																			],
																			[
																				"ReferencedField",
																				"application",
																				"id"
																			]
																		]
																	]
																]
															]
														]
													]
												]
											]
										]
									],
									[
										"Else",
										[
											"Null"
										]
									]
								]
							}
						],
						"primitive": false,
						"name": "device",
						"indexes": [],
						"idField": "id",
						"resourceName": "device",
						"modelName": "device",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"device-has-env var name$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "device environment variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"device",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-has-env var name",
						"modelName": "device has env var name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device-has-name$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "device config variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"device",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-has-name",
						"modelName": "device has name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device-installs-image$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "installs-image",
								"required": true,
								"references": {
									"resourceName": "image",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Date Time",
								"fieldName": "install date",
								"required": true,
								"references": {
									"resourceName": "install date",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "download progress",
								"required": false,
								"references": {
									"resourceName": "download progress",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": true,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is provided by-release",
								"required": true,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "image install",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"device",
									"installs-image"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-installs-image",
						"modelName": "device installs image",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device-installs-application-has-service name$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "installs-service",
								"required": true,
								"references": {
									"resourceName": "application-has-service name",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "service install",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"device",
									"installs-service"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-installs-application-has-service name",
						"modelName": "device installs service",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device-installs-application-has-service name-has-name$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "service install",
								"required": true,
								"references": {
									"resourceName": "device-installs-application-has-service name",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "device service environment variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"service install",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-installs-application-has-service name-has-name",
						"modelName": "service install has name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device-has-tag key$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "tag key",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "device tag",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"device",
									"tag key"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-has-tag key",
						"modelName": "device has tag key",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"checks": [
							{
								"description": "It is necessary that each device tag has a tag key that has a Length (Type) that is greater than 0.",
								"name": "device tag$30aEY0OcDs3I/zbRIyNPL9K/I7WY+4PabIF1sxOvXKg=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThan",
												[
													"Integer",
													0
												],
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Equals",
												[
													"Field",
													"tag key"
												],
												[
													"Field",
													"tag key"
												]
											],
											[
												"Exists",
												[
													"Field",
													"tag key"
												]
											]
										]
									]
								]
							}
						]
					},
					"release$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "commit",
								"required": true,
								"references": {
									"resourceName": "commit",
									"fieldName": null
								}
							},
							{
								"dataType": "JSON",
								"fieldName": "composition",
								"required": true,
								"references": {
									"resourceName": "composition",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": true,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "source",
								"required": true,
								"references": {
									"resourceName": "source",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "build log",
								"required": false,
								"references": {
									"resourceName": "build log",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is invalidated",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "start timestamp",
								"required": true,
								"references": {
									"resourceName": "start timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "update timestamp",
								"required": true,
								"references": {
									"resourceName": "update timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "release version",
								"required": false,
								"references": {
									"resourceName": "release version",
									"fieldName": null
								}
							},
							{
								"dataType": "JSON",
								"fieldName": "contract",
								"required": false,
								"references": {
									"resourceName": "contract",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is passing tests",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "is finalized at-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "semver major",
								"required": true,
								"references": {
									"resourceName": "semver major",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "semver minor",
								"required": true,
								"references": {
									"resourceName": "semver minor",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "semver patch",
								"required": true,
								"references": {
									"resourceName": "semver patch",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "revision",
								"required": false,
								"references": {
									"resourceName": "revision",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "known issue list",
								"required": false,
								"references": {
									"resourceName": "known issue list",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "note",
								"required": false,
								"references": {
									"resourceName": "note",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "invalidation reason",
								"required": false,
								"references": {
									"resourceName": "invalidation reason",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is created by-user",
								"required": false,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "JSON",
								"fieldName": "statistics set",
								"required": false,
								"references": {
									"resourceName": "statistics set",
									"fieldName": null
								}
							},
							{
								"fieldName": "is final",
								"dataType": "Boolean",
								"required": true,
								"computed": [
									"Exists",
									[
										"ReferencedField",
										"release",
										"revision"
									]
								]
							},
							{
								"fieldName": "semver",
								"dataType": "Short Text",
								"required": true,
								"computed": [
									"Concatenate",
									[
										"ReferencedField",
										"release",
										"semver major"
									],
									[
										"EmbeddedText",
										"."
									],
									[
										"ReferencedField",
										"release",
										"semver minor"
									],
									[
										"EmbeddedText",
										"."
									],
									[
										"ReferencedField",
										"release",
										"semver patch"
									]
								]
							},
							{
								"fieldName": "raw version",
								"dataType": "Short Text",
								"required": true,
								"computed": [
									"Concatenate",
									[
										"Concatenate",
										[
											"ReferencedField",
											"release",
											"semver major"
										],
										[
											"EmbeddedText",
											"."
										],
										[
											"ReferencedField",
											"release",
											"semver minor"
										],
										[
											"EmbeddedText",
											"."
										],
										[
											"ReferencedField",
											"release",
											"semver patch"
										]
									],
									[
										"Cast",
										[
											"Case",
											[
												"When",
												[
													"NotExists",
													[
														"ReferencedField",
														"release",
														"revision"
													]
												],
												[
													"Concatenate",
													[
														"EmbeddedText",
														"-"
													],
													[
														"Cast",
														[
															"Floor",
															[
																"Multiply",
																[
																	"Totalseconds",
																	[
																		"ReferencedField",
																		"release",
																		"created at"
																	]
																],
																[
																	"Number",
																	1000
																]
															]
														],
														"Text"
													]
												]
											],
											[
												"When",
												[
													"GreaterThan",
													[
														"ReferencedField",
														"release",
														"revision"
													],
													[
														"Number",
														0
													]
												],
												[
													"Concatenate",
													[
														"EmbeddedText",
														"+rev"
													],
													[
														"ReferencedField",
														"release",
														"revision"
													]
												]
											],
											[
												"Else",
												[
													"EmbeddedText",
													""
												]
											]
										],
										"Text"
									]
								]
							},
							{
								"fieldName": "version",
								"dataType": "JSON",
								"required": true,
								"computed": [
									"Concatenate",
									[
										"EmbeddedText",
										"{\"raw\": \""
									],
									[
										"Concatenate",
										[
											"Concatenate",
											[
												"ReferencedField",
												"release",
												"semver major"
											],
											[
												"EmbeddedText",
												"."
											],
											[
												"ReferencedField",
												"release",
												"semver minor"
											],
											[
												"EmbeddedText",
												"."
											],
											[
												"ReferencedField",
												"release",
												"semver patch"
											]
										],
										[
											"Cast",
											[
												"Case",
												[
													"When",
													[
														"NotExists",
														[
															"ReferencedField",
															"release",
															"revision"
														]
													],
													[
														"Concatenate",
														[
															"EmbeddedText",
															"-"
														],
														[
															"Cast",
															[
																"Floor",
																[
																	"Multiply",
																	[
																		"Totalseconds",
																		[
																			"ReferencedField",
																			"release",
																			"created at"
																		]
																	],
																	[
																		"Number",
																		1000
																	]
																]
															],
															"Text"
														]
													]
												],
												[
													"When",
													[
														"GreaterThan",
														[
															"ReferencedField",
															"release",
															"revision"
														],
														[
															"Number",
															0
														]
													],
													[
														"Concatenate",
														[
															"EmbeddedText",
															"+rev"
														],
														[
															"ReferencedField",
															"release",
															"revision"
														]
													]
												],
												[
													"Else",
													[
														"EmbeddedText",
														""
													]
												]
											],
											"Text"
										]
									],
									[
										"EmbeddedText",
										"\",\"major\": "
									],
									[
										"ReferencedField",
										"release",
										"semver major"
									],
									[
										"EmbeddedText",
										",\"minor\": "
									],
									[
										"ReferencedField",
										"release",
										"semver minor"
									],
									[
										"EmbeddedText",
										",\"patch\": "
									],
									[
										"ReferencedField",
										"release",
										"semver patch"
									],
									[
										"EmbeddedText",
										",\"prerelease\": ["
									],
									[
										"Cast",
										[
											"Case",
											[
												"When",
												[
													"Exists",
													[
														"ReferencedField",
														"release",
														"revision"
													]
												],
												[
													"EmbeddedText",
													""
												]
											],
											[
												"Else",
												[
													"Cast",
													[
														"Floor",
														[
															"Multiply",
															[
																"Totalseconds",
																[
																	"ReferencedField",
																	"release",
																	"created at"
																]
															],
															[
																"Number",
																1000
															]
														]
													],
													"Text"
												]
											]
										],
										"Text"
									],
									[
										"EmbeddedText",
										"],\"build\": ["
									],
									[
										"Cast",
										[
											"Case",
											[
												"When",
												[
													"GreaterThan",
													[
														"ReferencedField",
														"release",
														"revision"
													],
													[
														"Number",
														0
													]
												],
												[
													"Concatenate",
													[
														"EmbeddedText",
														"\"rev"
													],
													[
														"ReferencedField",
														"release",
														"revision"
													],
													[
														"EmbeddedText",
														"\""
													]
												]
											],
											[
												"Else",
												[
													"EmbeddedText",
													""
												]
											]
										],
										"Text"
									],
									[
										"EmbeddedText",
										"],\"version\": \""
									],
									[
										"Concatenate",
										[
											"ReferencedField",
											"release",
											"semver major"
										],
										[
											"EmbeddedText",
											"."
										],
										[
											"ReferencedField",
											"release",
											"semver minor"
										],
										[
											"EmbeddedText",
											"."
										],
										[
											"ReferencedField",
											"release",
											"semver patch"
										]
									],
									[
										"Cast",
										[
											"Case",
											[
												"When",
												[
													"Exists",
													[
														"ReferencedField",
														"release",
														"revision"
													]
												],
												[
													"EmbeddedText",
													""
												]
											],
											[
												"Else",
												[
													"Concatenate",
													[
														"EmbeddedText",
														"-"
													],
													[
														"Cast",
														[
															"Floor",
															[
																"Multiply",
																[
																	"Totalseconds",
																	[
																		"ReferencedField",
																		"release",
																		"created at"
																	]
																],
																[
																	"Number",
																	1000
																]
															]
														],
														"Text"
													]
												]
											]
										],
										"Text"
									],
									[
										"EmbeddedText",
										"\"}"
									]
								]
							}
						],
						"primitive": false,
						"name": "release",
						"indexes": [],
						"idField": "id",
						"resourceName": "release",
						"modelName": "release",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each release that has a revision, has a revision that is greater than or equal to 0.",
								"name": "release$69zgYrVSJaN1avGiEeipPlJ9/lMKzOIt3iMPF6u/6WY=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"revision"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThanOrEqual",
													[
														"Integer",
														0
													],
													[
														"Field",
														"revision"
													]
												],
												[
													"Exists",
													[
														"Field",
														"revision"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each release that has an invalidation reason, is invalidated.",
								"name": "release$RcddhgkY+99IgKXAUId7Q3iN4WylzgAxSFiF+JvyRiY=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"invalidation reason"
											]
										],
										[
											"NotEquals",
											[
												"Field",
												"is invalidated"
											],
											[
												"Boolean",
												true
											]
										]
									]
								]
							}
						]
					},
					"release-has-tag key$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "release",
								"required": true,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "tag key",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "release tag",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"release",
									"tag key"
								]
							}
						],
						"idField": "id",
						"resourceName": "release-has-tag key",
						"modelName": "release has tag key",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"checks": [
							{
								"description": "It is necessary that each release tag has a tag key that has a Length (Type) that is greater than 0.",
								"name": "release tag$vGZu47lKJepQVH+hgSZNuUPdet2cG96akz3Yc8hta3A=",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThan",
												[
													"Integer",
													0
												],
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Equals",
												[
													"Field",
													"tag key"
												],
												[
													"Field",
													"tag key"
												]
											],
											[
												"Exists",
												[
													"Field",
													"tag key"
												]
											]
										]
									]
								]
							}
						]
					},
					"image-is downloaded by-device$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "image",
								"required": true,
								"references": {
									"resourceName": "image",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is downloaded by-device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": true,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "download progress",
								"required": false,
								"references": {
									"resourceName": "download progress",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "gateway download",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"image",
									"is downloaded by-device"
								]
							}
						],
						"idField": "id",
						"resourceName": "image-is downloaded by-device",
						"modelName": "image is downloaded by device",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"image-is part of-release$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "image",
								"required": true,
								"references": {
									"resourceName": "image",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is part of-release",
								"required": true,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "image-is part of-release",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"image",
									"is part of-release"
								]
							}
						],
						"idField": "id",
						"resourceName": "image-is part of-release",
						"modelName": "image is part of release",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"image-is part of-release-has-label name$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "release image",
								"required": true,
								"references": {
									"resourceName": "image-is part of-release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "label name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "image label",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"release image",
									"label name"
								]
							}
						],
						"idField": "id",
						"resourceName": "image-is part of-release-has-label name",
						"modelName": "release image has label name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"image-is part of-release-has-name$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "release image",
								"required": true,
								"references": {
									"resourceName": "image-is part of-release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "image environment variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"release image",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "image-is part of-release-has-name",
						"modelName": "release image has name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user-is member of-organization$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is member of-organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization membership role",
								"required": true,
								"references": {
									"resourceName": "organization membership role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "effective seat role",
								"required": true,
								"references": {
									"resourceName": "effective seat role",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "organization membership",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"user",
									"is member of-organization"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-is member of-organization",
						"modelName": "user is member of organization",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user-has-public key$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Text",
								"fieldName": "public key",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "title",
								"required": true,
								"references": {
									"resourceName": "title",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "user-has-public key",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"user",
									"public key"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-has-public key",
						"modelName": "user has public key",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application membership role$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "application membership role",
						"indexes": [],
						"idField": "id",
						"resourceName": "application membership role",
						"modelName": "application membership role",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"billable component$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "billable component",
						"indexes": [],
						"idField": "id",
						"resourceName": "billable component",
						"modelName": "billable component",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"billing plan$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "role",
								"required": true,
								"references": {
									"resourceName": "role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "title",
								"required": true,
								"references": {
									"resourceName": "title",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "billing plan",
						"indexes": [],
						"idField": "id",
						"resourceName": "billing plan",
						"modelName": "billing plan",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"csp report$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "document uri",
								"required": true,
								"references": {
									"resourceName": "document uri",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "blocked uri",
								"required": true,
								"references": {
									"resourceName": "blocked uri",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "referrer",
								"required": false,
								"references": {
									"resourceName": "referrer",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "violated directive",
								"required": true,
								"references": {
									"resourceName": "violated directive",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "original policy",
								"required": true,
								"references": {
									"resourceName": "original policy",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "incidents counter",
								"required": true,
								"references": {
									"resourceName": "incidents counter",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "last seen time",
								"required": true,
								"references": {
									"resourceName": "last seen time",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "csp report",
						"indexes": [],
						"idField": "id",
						"resourceName": "csp report",
						"modelName": "csp report",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"delta$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "originates from-image",
								"required": false,
								"references": {
									"resourceName": "image",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "produces-image",
								"required": true,
								"references": {
									"resourceName": "image",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "version",
								"required": true,
								"references": {
									"resourceName": "version",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": true,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "error message",
								"required": false,
								"references": {
									"resourceName": "error message",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "is stored at-location",
								"required": false,
								"references": {
									"resourceName": "location",
									"fieldName": null
								}
							},
							{
								"dataType": "Big Integer",
								"fieldName": "size",
								"required": false,
								"references": {
									"resourceName": "size",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "update timestamp",
								"required": true,
								"references": {
									"resourceName": "update timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "delta",
						"indexes": [],
						"idField": "id",
						"resourceName": "delta",
						"modelName": "delta",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each delta that has a status that is equal to \"success\", is stored at exactly one location.",
								"name": "delta$uhbKBQ1SFLCAstvBKWO9098lU9K+D4D7S2FKmp8XNc8=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Equals",
											[
												"Field",
												"status"
											],
											[
												"Text",
												"success"
											]
										],
										[
											"Exists",
											[
												"Field",
												"status"
											]
										],
										[
											"NotExists",
											[
												"Field",
												"is stored at-location"
											]
										]
									]
								]
							}
						]
					},
					"feature$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "title",
								"required": true,
								"references": {
									"resourceName": "title",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "billing code",
								"required": false,
								"references": {
									"resourceName": "billing code",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "feature",
						"indexes": [],
						"idField": "id",
						"resourceName": "feature",
						"modelName": "feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each feature that has a billing code has a billing code that has a Length (Type) that is greater than 0 and is less than or equal to 30.",
								"name": "feature$2EspEGFKEl6qfNmF2o+DeJspkbrRkBh06slbLQ8zgCg=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"billing code"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"billing code"
														]
													]
												],
												[
													"LessThanOrEqual",
													[
														"CharacterLength",
														[
															"Field",
															"billing code"
														]
													],
													[
														"Integer",
														30
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"billing code"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"billing code"
													]
												]
											]
										]
									]
								]
							}
						]
					},
					"image download$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-device type",
								"required": true,
								"references": {
									"resourceName": "device type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os version",
								"required": true,
								"references": {
									"resourceName": "os version",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "file name",
								"required": true,
								"references": {
									"resourceName": "file name",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "file size",
								"required": true,
								"references": {
									"resourceName": "file size",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "bytes sent",
								"required": true,
								"references": {
									"resourceName": "bytes sent",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "start timestamp",
								"required": true,
								"references": {
									"resourceName": "start timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": true,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "image download",
						"indexes": [],
						"idField": "id",
						"resourceName": "image download",
						"modelName": "image download",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"oauth application$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "secret",
								"required": true,
								"references": {
									"resourceName": "secret",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "client id",
								"required": true,
								"references": {
									"resourceName": "client id",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "redirect uri",
								"required": true,
								"references": {
									"resourceName": "redirect uri",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "description",
								"required": false,
								"references": {
									"resourceName": "description",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "oauth application",
						"indexes": [],
						"idField": "id",
						"resourceName": "oauth application",
						"modelName": "oauth application",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"oauth application authorization$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-oauth application",
								"required": true,
								"references": {
									"resourceName": "oauth application",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "oauth application authorization",
						"indexes": [],
						"idField": "id",
						"resourceName": "oauth application authorization",
						"modelName": "oauth application authorization",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"organization membership role$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "organization membership role",
						"indexes": [],
						"idField": "id",
						"resourceName": "organization membership role",
						"modelName": "organization membership role",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"overage report$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "organization id",
								"required": true,
								"references": {
									"resourceName": "organization id",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "billing code",
								"required": true,
								"references": {
									"resourceName": "billing code",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "unit cost",
								"required": true,
								"references": {
									"resourceName": "unit cost",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "quantity",
								"required": true,
								"references": {
									"resourceName": "quantity",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "overage report",
						"indexes": [],
						"idField": "id",
						"resourceName": "overage report",
						"modelName": "overage report",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"plan$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "title",
								"required": true,
								"references": {
									"resourceName": "title",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "billing code",
								"required": false,
								"references": {
									"resourceName": "billing code",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Integer",
								"fieldName": "generation",
								"required": false,
								"references": {
									"resourceName": "generation",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "monthly price",
								"required": true,
								"references": {
									"resourceName": "monthly price",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "annual price",
								"required": true,
								"references": {
									"resourceName": "annual price",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "can self serve",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is legacy",
								"required": true
							}
						],
						"primitive": false,
						"name": "plan",
						"indexes": [],
						"idField": "id",
						"resourceName": "plan",
						"modelName": "plan",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each plan that has a billing code, has a billing code that has a Length (Type) that is greater than 0 and is less than or equal to 30.",
								"name": "plan$aWJFFvB4RslS97O9Xxz7XlNnZuIdvabYIcyIQQEXtMQ=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"billing code"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"billing code"
														]
													]
												],
												[
													"LessThanOrEqual",
													[
														"CharacterLength",
														[
															"Field",
															"billing code"
														]
													],
													[
														"Integer",
														30
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"billing code"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"billing code"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each plan that has a monthly price that is greater than 0 has exactly one billing code.",
								"name": "plan$XdVt6BxQL+ellyqe/Qir2cVDw09t/cWOV4+xS6IY+Uk=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"LessThan",
											[
												"Integer",
												0
											],
											[
												"Field",
												"monthly price"
											]
										],
										[
											"Exists",
											[
												"Field",
												"monthly price"
											]
										],
										[
											"NotExists",
											[
												"Field",
												"billing code"
											]
										]
									]
								]
							}
						]
					},
					"subscription$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-plan",
								"required": true,
								"references": {
									"resourceName": "plan",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "billing cycle",
								"required": true,
								"references": {
									"resourceName": "billing cycle",
									"fieldName": null
								},
								"checks": [
									[
										"In",
										[
											"Field",
											"billing cycle"
										],
										[
											"Text",
											"monthly"
										],
										[
											"Text",
											"quarterly"
										],
										[
											"Text",
											"biannual"
										],
										[
											"Text",
											"annual"
										],
										[
											"Text",
											"biennial"
										],
										[
											"Text",
											"triennial"
										],
										[
											"Text",
											"quadrennial"
										],
										[
											"Text",
											"quinquennial"
										]
									]
								]
							},
							{
								"dataType": "Date Time",
								"fieldName": "starts on-date",
								"required": true,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "ends on-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Real",
								"fieldName": "discount percentage",
								"required": true,
								"references": {
									"resourceName": "discount percentage",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "origin",
								"required": true,
								"references": {
									"resourceName": "origin",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "bills base with-recurly id",
								"required": false,
								"references": {
									"resourceName": "recurly id",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "bills addons with-recurly id",
								"required": false,
								"references": {
									"resourceName": "recurly id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "is agreed upon on-date",
								"required": true,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "is terminated on-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "is terminated with-reason",
								"required": false,
								"references": {
									"resourceName": "reason",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "expects first payment on-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "internal note",
								"required": false,
								"references": {
									"resourceName": "internal note",
									"fieldName": null
								}
							},
							{
								"fieldName": "is active",
								"dataType": "Boolean",
								"required": true,
								"computed": [
									"And",
									[
										"LessThanOrEqual",
										[
											"ReferencedField",
											"subscription",
											"starts on-date"
										],
										[
											"Now"
										]
									],
									[
										"Or",
										[
											"Equals",
											[
												"ReferencedField",
												"subscription",
												"ends on-date"
											],
											[
												"Null"
											]
										],
										[
											"GreaterThan",
											[
												"ReferencedField",
												"subscription",
												"ends on-date"
											],
											[
												"Now"
											]
										]
									]
								]
							}
						],
						"primitive": false,
						"name": "subscription",
						"indexes": [],
						"idField": "id",
						"resourceName": "subscription",
						"modelName": "subscription",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each subscription that bills base with a recurly id, bills base with a recurly id that has a Length (Type) that is greater than 0.",
								"name": "subscription$FQ2eprxdsexPk5FVGuxi7WVeAK8z8tGAjRYnUj1utrg=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"bills base with-recurly id"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"bills base with-recurly id"
														]
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"bills base with-recurly id"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"bills base with-recurly id"
													]
												]
											]
										]
									]
								]
							},
							{
								"description": "It is necessary that each subscription that bills addons with a recurly id, bills addons with a recurly id that has a Length (Type) that is greater than 0.",
								"name": "subscription$m7pjF2yj4YYZ+vwuLcJCd16OeOGxxgD1Tv5uJgcPv20=",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"bills addons with-recurly id"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"bills addons with-recurly id"
														]
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"bills addons with-recurly id"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"bills addons with-recurly id"
													]
												]
											]
										]
									]
								]
							}
						]
					},
					"subscription prepaid addon$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-subscription",
								"required": true,
								"references": {
									"resourceName": "subscription",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is for-plan addon",
								"required": true,
								"references": {
									"resourceName": "plan-offers-feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Real",
								"fieldName": "discount percentage",
								"required": true,
								"references": {
									"resourceName": "discount percentage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "quantity",
								"required": true,
								"references": {
									"resourceName": "quantity",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "starts on-date",
								"required": true,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "expires on-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "subscription prepaid addon",
						"indexes": [],
						"idField": "id",
						"resourceName": "subscription prepaid addon",
						"modelName": "subscription prepaid addon",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"recovery two factor$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "recovery code",
								"required": true,
								"references": {
									"resourceName": "recovery code",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "used timestamp",
								"required": false,
								"references": {
									"resourceName": "used timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "recovery two factor",
						"indexes": [],
						"idField": "id",
						"resourceName": "recovery two factor",
						"modelName": "recovery two factor",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"social service account$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "provider",
								"required": true,
								"references": {
									"resourceName": "provider",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "remote id",
								"required": true,
								"references": {
									"resourceName": "remote id",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "display name",
								"required": false,
								"references": {
									"resourceName": "display name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "email",
								"required": false,
								"references": {
									"resourceName": "email",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "social service account",
						"indexes": [],
						"idField": "id",
						"resourceName": "social service account",
						"modelName": "social service account",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"support tier$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "title",
								"required": true,
								"references": {
									"resourceName": "title",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "slug",
								"required": true,
								"references": {
									"resourceName": "slug",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Boolean",
								"fieldName": "includes private support",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "includes-SLA",
								"required": false,
								"references": {
									"resourceName": "SLA",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "support tier",
						"indexes": [],
						"idField": "id",
						"resourceName": "support tier",
						"modelName": "support tier",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"team$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "description",
								"required": false,
								"references": {
									"resourceName": "description",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "team",
						"indexes": [],
						"idField": "id",
						"resourceName": "team",
						"modelName": "team",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"invitee$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "email",
								"required": true,
								"references": {
									"resourceName": "email",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "invitee",
						"indexes": [],
						"idField": "id",
						"resourceName": "invitee",
						"modelName": "invitee",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"support feature$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "feature",
								"required": true,
								"references": {
									"resourceName": "feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "support tier",
								"required": true,
								"references": {
									"resourceName": "support tier",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "support feature",
						"indexes": [],
						"idField": "id",
						"resourceName": "support feature",
						"modelName": "support feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"application type feature$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "feature",
								"required": true,
								"references": {
									"resourceName": "feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application type",
								"required": true,
								"references": {
									"resourceName": "application type",
									"fieldName": "id"
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "application type feature",
						"indexes": [],
						"idField": "id",
						"resourceName": "application type feature",
						"modelName": "application type feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"application member feature$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "feature",
								"required": true,
								"references": {
									"resourceName": "feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application membership role",
								"required": true,
								"references": {
									"resourceName": "application membership role",
									"fieldName": "id"
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "application member feature",
						"indexes": [],
						"idField": "id",
						"resourceName": "application member feature",
						"modelName": "application member feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"organization member feature$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "feature",
								"required": true,
								"references": {
									"resourceName": "feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization membership role",
								"required": true,
								"references": {
									"resourceName": "organization membership role",
									"fieldName": "id"
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "organization member feature",
						"indexes": [],
						"idField": "id",
						"resourceName": "organization member feature",
						"modelName": "organization member feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"team-grants access to-application$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "team",
								"required": true,
								"references": {
									"resourceName": "team",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "grants access to-application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application membership role",
								"required": true,
								"references": {
									"resourceName": "application membership role",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "team application access",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"team",
									"grants access to-application"
								]
							}
						],
						"idField": "id",
						"resourceName": "team-grants access to-application",
						"modelName": "team grants access to application",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user-is member of-team$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is member of-team",
								"required": true,
								"references": {
									"resourceName": "team",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "team membership",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"user",
									"is member of-team"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-is member of-team",
						"modelName": "user is member of team",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user-is member of-application$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is member of-application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application membership role",
								"required": true,
								"references": {
									"resourceName": "application membership role",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "user-is member of-application",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"user",
									"is member of-application"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-is member of-application",
						"modelName": "user is member of application",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"invitee-is invited to-application$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "invitee",
								"required": true,
								"references": {
									"resourceName": "invitee",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is invited to-application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application membership role",
								"required": true,
								"references": {
									"resourceName": "application membership role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "invitation token",
								"required": false,
								"references": {
									"resourceName": "invitation token",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Text",
								"fieldName": "message",
								"required": false,
								"references": {
									"resourceName": "message",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is created by-user",
								"required": false,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "invitee-is invited to-application",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"invitee",
									"is invited to-application"
								]
							}
						],
						"idField": "id",
						"resourceName": "invitee-is invited to-application",
						"modelName": "invitee is invited to application",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"invitee-is invited to-organization$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "invitee",
								"required": true,
								"references": {
									"resourceName": "invitee",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is invited to-organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization membership role",
								"required": true,
								"references": {
									"resourceName": "organization membership role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "invitation token",
								"required": false,
								"references": {
									"resourceName": "invitation token",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Text",
								"fieldName": "message",
								"required": false,
								"references": {
									"resourceName": "message",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is created by-user",
								"required": false,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "invitee-is invited to-organization",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"invitee",
									"is invited to-organization"
								]
							}
						],
						"idField": "id",
						"resourceName": "invitee-is invited to-organization",
						"modelName": "invitee is invited to organization",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device-has-fqdn$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "device",
								"required": true,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Text",
								"fieldName": "fqdn",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "device domain mapping",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"device",
									"fqdn"
								]
							}
						],
						"idField": "id",
						"resourceName": "device-has-fqdn",
						"modelName": "device has fqdn",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-domain$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Text",
								"fieldName": "domain",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "application domain mapping",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application",
									"domain"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-domain",
						"modelName": "application has domain",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application-has-build var name$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "build environment variable",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application",
									"name"
								]
							}
						],
						"idField": "id",
						"resourceName": "application-has-build var name",
						"modelName": "application has build var name",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"organization-has private access to-device type$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization",
								"required": true,
								"references": {
									"resourceName": "organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "has private access to-device type",
								"required": true,
								"references": {
									"resourceName": "device type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "organization-has private access to-device type",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"organization",
									"has private access to-device type"
								]
							}
						],
						"idField": "id",
						"resourceName": "organization-has private access to-device type",
						"modelName": "organization has private access to device type",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"user-is member of-organization-has-tag key$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization membership",
								"required": true,
								"references": {
									"resourceName": "user-is member of-organization",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "tag key",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Text",
								"fieldName": "value",
								"required": true,
								"references": {
									"resourceName": "value",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "organization membership tag",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"organization membership",
									"tag key"
								]
							}
						],
						"idField": "id",
						"resourceName": "user-is member of-organization-has-tag key",
						"modelName": "organization membership has tag key",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"checks": [
							{
								"description": "It is necessary that each organization membership tag has a tag key that has a Length (Type) that is greater than 0.",
								"name": "organization membership tag$FQ/QGS2oruZV03tt/ZQuIlRERixuqjln9SG",
								"abstractSql": [
									"Not",
									[
										"Not",
										[
											"And",
											[
												"LessThan",
												[
													"Integer",
													0
												],
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Exists",
												[
													"CharacterLength",
													[
														"Field",
														"tag key"
													]
												]
											],
											[
												"Equals",
												[
													"Field",
													"tag key"
												],
												[
													"Field",
													"tag key"
												]
											],
											[
												"Exists",
												[
													"Field",
													"tag key"
												]
											]
										]
									]
								]
							}
						]
					},
					"plan-has-discount code$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "plan",
								"required": true,
								"references": {
									"resourceName": "plan",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "discount code",
								"required": true
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "plan-has-discount code",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"plan",
									"discount code"
								]
							}
						],
						"idField": "id",
						"resourceName": "plan-has-discount code",
						"modelName": "plan has discount code",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application type feature-is composed of-billable component$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application type feature",
								"required": true,
								"references": {
									"resourceName": "application type feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is composed of-billable component",
								"required": true,
								"references": {
									"resourceName": "billable component",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "application type feature-is composed of-billable component",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application type feature",
									"is composed of-billable component"
								]
							}
						],
						"idField": "id",
						"resourceName": "application type feature-is composed of-billable component",
						"modelName": "application type feature is composed of billable component",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"application member feature-is composed of-billable component$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application member feature",
								"required": true,
								"references": {
									"resourceName": "application member feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is composed of-billable component",
								"required": true,
								"references": {
									"resourceName": "billable component",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "application member feature-is composed of-billable component",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"application member feature",
									"is composed of-billable component"
								]
							}
						],
						"idField": "id",
						"resourceName": "application member feature-is composed of-billable component",
						"modelName": "application member feature is composed of billable component",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"organization member feature-is composed of-billable component$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization member feature",
								"required": true,
								"references": {
									"resourceName": "organization member feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is composed of-billable component",
								"required": true,
								"references": {
									"resourceName": "billable component",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							}
						],
						"primitive": false,
						"name": "organization member feature-is composed of-billable component",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"organization member feature",
									"is composed of-billable component"
								]
							}
						],
						"idField": "id",
						"resourceName": "organization member feature-is composed of-billable component",
						"modelName": "organization member feature is composed of billable component",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"plan-provides-feature$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "plan",
								"required": true,
								"references": {
									"resourceName": "plan",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "provides-feature",
								"required": true,
								"references": {
									"resourceName": "feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "quantity",
								"required": true,
								"references": {
									"resourceName": "quantity",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "plan feature",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"plan",
									"provides-feature"
								]
							}
						],
						"idField": "id",
						"resourceName": "plan-provides-feature",
						"modelName": "plan provides feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"plan-offers-feature$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "plan",
								"required": true,
								"references": {
									"resourceName": "plan",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "offers-feature",
								"required": true,
								"references": {
									"resourceName": "feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "base price",
								"required": true,
								"references": {
									"resourceName": "base price",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "can self serve",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "bills dynamically",
								"required": true
							}
						],
						"primitive": false,
						"name": "plan addon",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"plan",
									"offers-feature"
								]
							}
						],
						"idField": "id",
						"resourceName": "plan-offers-feature",
						"modelName": "plan offers feature",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"subscription-discounts-plan-offers-feature$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "subscription",
								"required": true,
								"references": {
									"resourceName": "subscription",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "discounts-plan addon",
								"required": true,
								"references": {
									"resourceName": "plan-offers-feature",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Real",
								"fieldName": "discount percentage",
								"required": true,
								"references": {
									"resourceName": "discount percentage",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "subscription-discounts-plan addon",
						"indexes": [
							{
								"type": "UNIQUE",
								"fields": [
									"subscription",
									"discounts-plan addon"
								]
							}
						],
						"idField": "id",
						"resourceName": "subscription-discounts-plan-offers-feature",
						"modelName": "subscription discounts plan addon",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						]
					},
					"device history$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "device id",
								"required": true,
								"references": {
									"resourceName": "device id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "actor id",
								"required": false,
								"references": {
									"resourceName": "actor id",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "uuid",
								"required": false,
								"references": {
									"resourceName": "uuid",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "belongs to-application id",
								"required": false,
								"references": {
									"resourceName": "application id",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is active",
								"required": true
							},
							{
								"dataType": "Integer",
								"fieldName": "is running-release id",
								"required": false,
								"references": {
									"resourceName": "release id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "should be running-release id",
								"required": false,
								"references": {
									"resourceName": "release id",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "api heartbeat state",
								"required": true,
								"references": {
									"resourceName": "api heartbeat state",
									"fieldName": null
								},
								"checks": [
									[
										"In",
										[
											"Field",
											"api heartbeat state"
										],
										[
											"Text",
											"online"
										],
										[
											"Text",
											"offline"
										],
										[
											"Text",
											"timeout"
										],
										[
											"Text",
											"unknown"
										]
									]
								]
							},
							{
								"dataType": "Boolean",
								"fieldName": "is connected to vpn",
								"required": true
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is managed by-service instance",
								"required": false,
								"references": {
									"resourceName": "service instance",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os version",
								"required": false,
								"references": {
									"resourceName": "os version",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os variant",
								"required": false,
								"references": {
									"resourceName": "os variant",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "supervisor version",
								"required": false,
								"references": {
									"resourceName": "supervisor version",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is of-device type",
								"required": false,
								"references": {
									"resourceName": "device type",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "device history",
						"indexes": [],
						"idField": "id",
						"resourceName": "device history",
						"modelName": "device history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"application history$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "application id",
								"required": true,
								"references": {
									"resourceName": "application id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application type",
								"required": true,
								"references": {
									"resourceName": "application type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is host",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is public",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is discoverable",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is archived",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "is of-class",
								"required": true,
								"references": {
									"resourceName": "class",
									"fieldName": null
								},
								"checks": [
									[
										"In",
										[
											"Field",
											"is of-class"
										],
										[
											"Text",
											"fleet"
										],
										[
											"Text",
											"block"
										],
										[
											"Text",
											"app"
										]
									]
								]
							},
							{
								"dataType": "Integer",
								"fieldName": "organization id",
								"required": true,
								"references": {
									"resourceName": "organization id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "should be running release id",
								"required": false,
								"references": {
									"resourceName": "should be running release id",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "is stored at-repository url",
								"required": false,
								"references": {
									"resourceName": "repository url",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "application history",
						"indexes": [],
						"idField": "id",
						"resourceName": "application history",
						"modelName": "application history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"checks": [
							{
								"description": "It is necessary that each application history that is stored at a repository url, is stored at a repository url that has a Length (Type) that is greater than 0 and is less than or equal to 500.",
								"name": "application history$9Ff1aUY1PDvd6t2QgrpWs9Ypl3Tilc0S8CcNewbKCG4",
								"abstractSql": [
									"Not",
									[
										"And",
										[
											"Exists",
											[
												"Field",
												"is stored at-repository url"
											]
										],
										[
											"Not",
											[
												"And",
												[
													"LessThan",
													[
														"Integer",
														0
													],
													[
														"CharacterLength",
														[
															"Field",
															"is stored at-repository url"
														]
													]
												],
												[
													"LessThanOrEqual",
													[
														"CharacterLength",
														[
															"Field",
															"is stored at-repository url"
														]
													],
													[
														"Integer",
														500
													]
												],
												[
													"Exists",
													[
														"CharacterLength",
														[
															"Field",
															"is stored at-repository url"
														]
													]
												],
												[
													"Exists",
													[
														"Field",
														"is stored at-repository url"
													]
												]
											]
										]
									]
								]
							}
						]
					},
					"release history$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "commit",
								"required": true,
								"references": {
									"resourceName": "commit",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": true,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "source",
								"required": true,
								"references": {
									"resourceName": "source",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "build start timestamp",
								"required": true,
								"references": {
									"resourceName": "build start timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "build end timestamp",
								"required": false,
								"references": {
									"resourceName": "build end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "JSON",
								"fieldName": "contract",
								"required": false,
								"references": {
									"resourceName": "contract",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "release id",
								"required": true,
								"references": {
									"resourceName": "release id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "belongs to-application id",
								"required": false,
								"references": {
									"resourceName": "application id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "is created by-user id",
								"required": false,
								"references": {
									"resourceName": "user id",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is invalidated",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "release version",
								"required": false,
								"references": {
									"resourceName": "release version",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "release history",
						"indexes": [],
						"idField": "id",
						"resourceName": "release history",
						"modelName": "release history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"organization history$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "organization id",
								"required": true,
								"references": {
									"resourceName": "organization id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "billing account code",
								"required": false,
								"references": {
									"resourceName": "billing account code",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "organization history",
						"indexes": [],
						"idField": "id",
						"resourceName": "organization history",
						"modelName": "organization history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"organization membership history$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "organization membership id",
								"required": true,
								"references": {
									"resourceName": "organization membership id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "organization id",
								"required": true,
								"references": {
									"resourceName": "organization id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "user id",
								"required": true,
								"references": {
									"resourceName": "user id",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "organization membership role",
								"required": true,
								"references": {
									"resourceName": "organization membership role",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "effective seat role",
								"required": false,
								"references": {
									"resourceName": "effective seat role",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "organization membership history",
						"indexes": [],
						"idField": "id",
						"resourceName": "organization membership history",
						"modelName": "organization membership history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"user is member of application history$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "user is member of application id",
								"required": true,
								"references": {
									"resourceName": "user is member of application id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "is member of-application id",
								"required": true,
								"references": {
									"resourceName": "application id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "user id",
								"required": true,
								"references": {
									"resourceName": "user id",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application membership role",
								"required": false,
								"references": {
									"resourceName": "application membership role",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "user is member of application history",
						"indexes": [],
						"idField": "id",
						"resourceName": "user is member of application history",
						"modelName": "user is member of application history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"team history$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "team id",
								"required": true,
								"references": {
									"resourceName": "team id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "organization id",
								"required": true,
								"references": {
									"resourceName": "organization id",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "team history",
						"indexes": [],
						"idField": "id",
						"resourceName": "team history",
						"modelName": "team history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"team membership history$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "team membership id",
								"required": true,
								"references": {
									"resourceName": "team membership id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "team id",
								"required": true,
								"references": {
									"resourceName": "team id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "user id",
								"required": true,
								"references": {
									"resourceName": "user id",
									"fieldName": null
								}
							}
						],
						"primitive": false,
						"name": "team membership history",
						"indexes": [],
						"idField": "id",
						"resourceName": "team membership history",
						"modelName": "team membership history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"team application access history$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "team application access id",
								"required": true,
								"references": {
									"resourceName": "team application access id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "application id",
								"required": true,
								"references": {
									"resourceName": "application id",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "team id",
								"required": true,
								"references": {
									"resourceName": "team id",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application membership role",
								"required": true,
								"references": {
									"resourceName": "application membership role",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "team application access history",
						"indexes": [],
						"idField": "id",
						"resourceName": "team application access history",
						"modelName": "team application access history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"user history$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Integer",
								"fieldName": "user id",
								"required": true,
								"references": {
									"resourceName": "user id",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "end timestamp",
								"required": false,
								"references": {
									"resourceName": "end timestamp",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "account type",
								"required": false,
								"references": {
									"resourceName": "account type",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is two factor protected",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is verified",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "has been sent verification email",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "must be verified",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "has disabled newsletter",
								"required": true
							}
						],
						"primitive": false,
						"name": "user history",
						"indexes": [],
						"idField": "id",
						"resourceName": "user history",
						"modelName": "user history",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id"
					},
					"application-can use-application as host$resin": {
						"fields": [
							{
								"dataType": "Big Integer",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "can use-application as host",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "application-can use-application as host",
						"indexes": [],
						"idField": "id",
						"resourceName": "application-can use-application as host",
						"definition": {
							"abstractSql": [
								"SelectQuery",
								[
									"Select",
									[
										[
											"Alias",
											[
												"Null"
											],
											"id"
										],
										[
											"Alias",
											[
												"ReferencedField",
												"user-application",
												"id"
											],
											"application"
										],
										[
											"Alias",
											[
												"ReferencedField",
												"hostos-application",
												"id"
											],
											"can use-application as host"
										]
									]
								],
								[
									"From",
									[
										"Alias",
										[
											"Resource",
											"application$resin"
										],
										"user-application"
									]
								],
								[
									"LeftJoin",
									[
										"Alias",
										[
											"Resource",
											"application$resin$bypass"
										],
										"hostos-application"
									],
									[
										"On",
										[
											"Equals",
											[
												"ReferencedField",
												"hostos-application",
												"is host"
											],
											[
												"Boolean",
												true
											]
										]
									]
								],
								[
									"Where",
									[
										"And",
										[
											"Equals",
											[
												"ReferencedField",
												"user-application",
												"is host"
											],
											[
												"Boolean",
												false
											]
										],
										[
											"Or",
											[
												"Not",
												[
													"Exists",
													[
														"SelectQuery",
														[
															"Select",
															[
																[
																	"Alias",
																	[
																		"Number",
																		1
																	],
																	"id"
																]
															]
														],
														[
															"From",
															[
																"Alias",
																[
																	"Resource",
																	"application-has-tag key$resin$bypass"
																],
																"hostos-application tag"
															]
														],
														[
															"Where",
															[
																"And",
																[
																	"Equals",
																	[
																		"ReferencedField",
																		"hostos-application tag",
																		"application"
																	],
																	[
																		"ReferencedField",
																		"hostos-application",
																		"id"
																	]
																],
																[
																	"Equals",
																	[
																		"ReferencedField",
																		"hostos-application tag",
																		"tag key"
																	],
																	[
																		"Text",
																		"release-policy"
																	]
																],
																[
																	"Equals",
																	[
																		"ReferencedField",
																		"hostos-application tag",
																		"value"
																	],
																	[
																		"Text",
																		"esr"
																	]
																]
															]
														]
													]
												]
											],
											[
												"Exists",
												[
													"SelectQuery",
													[
														"Select",
														[
															[
																"Alias",
																[
																	"Number",
																	1
																],
																"id"
															]
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Resource",
																"subscription$resin$bypass"
															],
															"user-application.subscription"
														]
													],
													[
														"Join",
														[
															"Alias",
															[
																"Resource",
																"plan$resin$bypass"
															],
															"user-application.plan"
														],
														[
															"On",
															[
																"Equals",
																[
																	"ReferencedField",
																	"user-application.subscription",
																	"is for-plan"
																],
																[
																	"ReferencedField",
																	"user-application.plan",
																	"id"
																]
															]
														]
													],
													[
														"Join",
														[
															"Alias",
															[
																"Resource",
																"plan-provides-feature$resin$bypass"
															],
															"user-application.plan feature"
														],
														[
															"On",
															[
																"Equals",
																[
																	"ReferencedField",
																	"user-application.plan feature",
																	"plan"
																],
																[
																	"ReferencedField",
																	"user-application.plan",
																	"id"
																]
															]
														]
													],
													[
														"Join",
														[
															"Alias",
															[
																"Resource",
																"feature$resin$bypass"
															],
															"user-application.feature"
														],
														[
															"On",
															[
																"Equals",
																[
																	"ReferencedField",
																	"user-application.plan feature",
																	"provides-feature"
																],
																[
																	"ReferencedField",
																	"user-application.feature",
																	"id"
																]
															]
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"user-application",
																	"organization"
																],
																[
																	"ReferencedField",
																	"user-application.subscription",
																	"is for-organization"
																]
															],
															[
																"Equals",
																[
																	"Cast",
																	[
																		"ReferencedField",
																		"user-application.subscription",
																		"is active"
																	],
																	"Boolean"
																],
																[
																	"Boolean",
																	true
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"user-application.feature",
																	"slug"
																],
																[
																	"Text",
																	"hostos-esr-access:any"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						}
					},
					"user-has direct access to-application$resin": {
						"fields": [
							{
								"dataType": "Big Integer",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "user",
								"required": true,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "has direct access to-application",
								"required": true,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							}
						],
						"primitive": false,
						"name": "user-has direct access to-application",
						"indexes": [],
						"idField": "id",
						"resourceName": "user-has direct access to-application",
						"definition": {
							"abstractSql": [
								"SelectQuery",
								[
									"Select",
									[
										[
											"Alias",
											[
												"Null"
											],
											"id"
										],
										[
											"Alias",
											[
												"ReferencedField",
												"application.user",
												"id"
											],
											"user"
										],
										[
											"Alias",
											[
												"ReferencedField",
												"application",
												"id"
											],
											"has direct access to-application"
										]
									]
								],
								[
									"From",
									[
										"Alias",
										[
											"Resource",
											"application$resin"
										],
										"application"
									]
								],
								[
									"CrossJoin",
									[
										"Alias",
										[
											"Resource",
											"user$resin$bypass"
										],
										"application.user"
									]
								],
								[
									"Where",
									[
										"And",
										[
											"Equals",
											[
												"ReferencedField",
												"application.user",
												"actor"
											],
											[
												"Bind",
												"@__ACTOR_ID"
											]
										],
										[
											"Or",
											[
												"Exists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Resource",
																"user-is member of-organization$resin$bypass"
															],
															"application.om"
														]
													],
													[
														"Join",
														[
															"Alias",
															[
																"Resource",
																"organization membership role$resin$bypass"
															],
															"application.om.omr"
														],
														[
															"On",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.om.omr",
																	"id"
																],
																[
																	"ReferencedField",
																	"application.om",
																	"organization membership role"
																]
															]
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.om",
																	"user"
																],
																[
																	"ReferencedField",
																	"application.user",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.om",
																	"is member of-organization"
																],
																[
																	"ReferencedField",
																	"application",
																	"organization"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.om.omr",
																	"name"
																],
																[
																	"EmbeddedText",
																	"administrator"
																]
															]
														]
													]
												]
											],
											[
												"Exists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Resource",
																"user-is member of-application$resin$bypass"
															],
															"application.uma"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.uma",
																	"user"
																],
																[
																	"ReferencedField",
																	"application.user",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.uma",
																	"is member of-application"
																],
																[
																	"ReferencedField",
																	"application",
																	"id"
																]
															]
														]
													]
												]
											],
											[
												"Exists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Resource",
																"team-grants access to-application$resin$bypass"
															],
															"application.taa"
														]
													],
													[
														"Join",
														[
															"Alias",
															[
																"Resource",
																"user-is member of-team$resin$bypass"
															],
															"application.taa.umt"
														],
														[
															"On",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.taa",
																	"team"
																],
																[
																	"ReferencedField",
																	"application.taa.umt",
																	"is member of-team"
																]
															]
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.taa.umt",
																	"user"
																],
																[
																	"ReferencedField",
																	"application.user",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.taa",
																	"grants access to-application"
																],
																[
																	"ReferencedField",
																	"application",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						}
					},
					"public organization$resin": {
						"fields": [
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "Short Text",
								"fieldName": "name",
								"required": true,
								"references": {
									"resourceName": "name",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "handle",
								"required": true,
								"references": {
									"resourceName": "handle",
									"fieldName": null
								},
								"index": "UNIQUE"
							}
						],
						"primitive": false,
						"name": "public organization",
						"indexes": [],
						"idField": "id",
						"resourceName": "public organization",
						"definition": {
							"abstractSql": [
								"SelectQuery",
								[
									"Select",
									[
										[
											"ReferencedField",
											"organization",
											"id"
										],
										[
											"ReferencedField",
											"organization",
											"name"
										],
										[
											"ReferencedField",
											"organization",
											"handle"
										]
									]
								],
								[
									"From",
									[
										"Alias",
										[
											"Resource",
											"organization$resin$bypass"
										],
										"organization"
									]
								],
								[
									"Where",
									[
										"Exists",
										[
											"SelectQuery",
											[
												"Select",
												[]
											],
											[
												"From",
												[
													"Alias",
													[
														"Resource",
														"application$resin"
													],
													"organization.application"
												]
											],
											[
												"Where",
												[
													"And",
													[
														"Equals",
														[
															"ReferencedField",
															"organization.application",
															"organization"
														],
														[
															"ReferencedField",
															"organization",
															"id"
														]
													],
													[
														"Equals",
														[
															"ReferencedField",
															"organization.application",
															"is public"
														],
														[
															"Boolean",
															true
														]
													]
												]
											]
										]
									]
								]
							]
						}
					},
					"public device$resin": {
						"fields": [
							{
								"dataType": "Date Time",
								"fieldName": "created at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Date Time",
								"fieldName": "modified at",
								"required": true,
								"defaultValue": "CURRENT_TIMESTAMP"
							},
							{
								"dataType": "Serial",
								"fieldName": "id",
								"required": true,
								"index": "PRIMARY KEY"
							},
							{
								"dataType": "ConceptType",
								"fieldName": "actor",
								"required": true,
								"references": {
									"resourceName": "actor",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "api heartbeat state",
								"required": true,
								"references": {
									"resourceName": "api heartbeat state",
									"fieldName": null
								},
								"checks": [
									[
										"In",
										[
											"Field",
											"api heartbeat state"
										],
										[
											"Text",
											"online"
										],
										[
											"Text",
											"offline"
										],
										[
											"Text",
											"timeout"
										],
										[
											"Text",
											"unknown"
										]
									]
								]
							},
							{
								"dataType": "Text",
								"fieldName": "uuid",
								"required": true,
								"references": {
									"resourceName": "uuid",
									"fieldName": null
								},
								"index": "UNIQUE"
							},
							{
								"dataType": "Short Text",
								"fieldName": "local id",
								"required": false,
								"references": {
									"resourceName": "local id",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "device name",
								"required": false,
								"references": {
									"resourceName": "device name",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "note",
								"required": false,
								"references": {
									"resourceName": "note",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is of-device type",
								"required": true,
								"references": {
									"resourceName": "device type",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-application",
								"required": false,
								"references": {
									"resourceName": "application",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is online",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "last connectivity event",
								"required": false,
								"references": {
									"resourceName": "last connectivity event",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is connected to vpn",
								"required": true
							},
							{
								"dataType": "Date Time",
								"fieldName": "last vpn event",
								"required": false,
								"references": {
									"resourceName": "last vpn event",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "is locked until-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "logs channel",
								"required": false,
								"references": {
									"resourceName": "logs channel",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "public address",
								"required": false,
								"references": {
									"resourceName": "public address",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "vpn address",
								"required": false,
								"references": {
									"resourceName": "vpn address",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "ip address",
								"required": false,
								"references": {
									"resourceName": "ip address",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "mac address",
								"required": false,
								"references": {
									"resourceName": "mac address",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "memory usage",
								"required": false,
								"references": {
									"resourceName": "memory usage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "memory total",
								"required": false,
								"references": {
									"resourceName": "memory total",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "storage block device",
								"required": false,
								"references": {
									"resourceName": "storage block device",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "storage usage",
								"required": false,
								"references": {
									"resourceName": "storage usage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "storage total",
								"required": false,
								"references": {
									"resourceName": "storage total",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "cpu usage",
								"required": false,
								"references": {
									"resourceName": "cpu usage",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "cpu temp",
								"required": false,
								"references": {
									"resourceName": "cpu temp",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is undervolted",
								"required": true
							},
							{
								"dataType": "Short Text",
								"fieldName": "cpu id",
								"required": false,
								"references": {
									"resourceName": "cpu id",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is running-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "download progress",
								"required": false,
								"references": {
									"resourceName": "download progress",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "status",
								"required": false,
								"references": {
									"resourceName": "status",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os version",
								"required": false,
								"references": {
									"resourceName": "os version",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "os variant",
								"required": false,
								"references": {
									"resourceName": "os variant",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "supervisor version",
								"required": false,
								"references": {
									"resourceName": "supervisor version",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "provisioning progress",
								"required": false,
								"references": {
									"resourceName": "provisioning progress",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "provisioning state",
								"required": false,
								"references": {
									"resourceName": "provisioning state",
									"fieldName": null
								}
							},
							{
								"dataType": "Integer",
								"fieldName": "api port",
								"required": false,
								"references": {
									"resourceName": "api port",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "api secret",
								"required": false,
								"references": {
									"resourceName": "api secret",
									"fieldName": null
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is managed by-service instance",
								"required": false,
								"references": {
									"resourceName": "service instance",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be running-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be operated by-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "is managed by-device",
								"required": false,
								"references": {
									"resourceName": "device",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "should be managed by-release",
								"required": false,
								"references": {
									"resourceName": "release",
									"fieldName": "id"
								}
							},
							{
								"dataType": "ForeignKey",
								"fieldName": "belongs to-user",
								"required": false,
								"references": {
									"resourceName": "user",
									"fieldName": "id"
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "latitude",
								"required": false,
								"references": {
									"resourceName": "latitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "longitude",
								"required": false,
								"references": {
									"resourceName": "longitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "custom latitude",
								"required": false,
								"references": {
									"resourceName": "custom latitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Short Text",
								"fieldName": "custom longitude",
								"required": false,
								"references": {
									"resourceName": "custom longitude",
									"fieldName": null
								}
							},
							{
								"dataType": "Text",
								"fieldName": "location",
								"required": false,
								"references": {
									"resourceName": "location",
									"fieldName": null
								}
							},
							{
								"dataType": "Date Time",
								"fieldName": "is accessible by support until-date",
								"required": false,
								"references": {
									"resourceName": "date",
									"fieldName": null
								}
							},
							{
								"dataType": "Boolean",
								"fieldName": "is web accessible",
								"required": true
							},
							{
								"dataType": "Boolean",
								"fieldName": "is active",
								"required": true
							},
							{
								"fieldName": "overall status",
								"dataType": "Short Text",
								"computed": [
									"Case",
									[
										"When",
										[
											"Or",
											[
												"In",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Ordered"
												],
												[
													"EmbeddedText",
													"Preparing"
												]
											],
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"status"
													],
													[
														"EmbeddedText",
														"Shipped"
													]
												]
											]
										],
										[
											"ToLower",
											[
												"ReferencedField",
												"device",
												"status"
											]
										]
									],
									[
										"When",
										[
											"Equals",
											[
												"ReferencedField",
												"device",
												"is active"
											],
											[
												"Boolean",
												false
											]
										],
										[
											"EmbeddedText",
											"inactive"
										]
									],
									[
										"When",
										[
											"Equals",
											[
												"ReferencedField",
												"device",
												"provisioning state"
											],
											[
												"EmbeddedText",
												"Post-Provisioning"
											]
										],
										[
											"EmbeddedText",
											"post-provisioning"
										]
									],
									[
										"When",
										[
											"And",
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"In",
													[
														"ReferencedField",
														"device",
														"api heartbeat state"
													],
													[
														"EmbeddedText",
														"offline"
													],
													[
														"EmbeddedText",
														"unknown"
													]
												]
											],
											[
												"NotExists",
												[
													"ReferencedField",
													"device",
													"last connectivity event"
												]
											]
										],
										[
											"EmbeddedText",
											"configuring"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"is online"
												],
												[
													"Boolean",
													false
												]
											],
											[
												"In",
												[
													"ReferencedField",
													"device",
													"api heartbeat state"
												],
												[
													"EmbeddedText",
													"offline"
												],
												[
													"EmbeddedText",
													"unknown"
												]
											]
										],
										[
											"EmbeddedText",
											"offline"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Exists",
												[
													"ReferencedField",
													"device",
													"download progress"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Downloading"
												]
											]
										],
										[
											"EmbeddedText",
											"updating"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"ReferencedField",
												"device",
												"provisioning progress"
											]
										],
										[
											"EmbeddedText",
											"configuring"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"SelectQuery",
												[
													"Select",
													[]
												],
												[
													"From",
													[
														"Table",
														"image install"
													]
												],
												[
													"Where",
													[
														"And",
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"device"
															],
															[
																"ReferencedField",
																"device",
																"id"
															]
														],
														[
															"Exists",
															[
																"ReferencedField",
																"image install",
																"download progress"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"status"
															],
															[
																"EmbeddedText",
																"Downloading"
															]
														]
													]
												]
											]
										],
										[
											"EmbeddedText",
											"updating"
										]
									],
									[
										"Else",
										[
											"EmbeddedText",
											"idle"
										]
									]
								]
							},
							{
								"fieldName": "overall progress",
								"dataType": "Integer",
								"computed": [
									"Case",
									[
										"When",
										[
											"Or",
											[
												"In",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Ordered"
												],
												[
													"EmbeddedText",
													"Preparing"
												]
											],
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"status"
													],
													[
														"EmbeddedText",
														"Shipped"
													]
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"is active"
												],
												[
													"Boolean",
													false
												]
											]
										],
										[
											"Null"
										]
									],
									[
										"When",
										[
											"Equals",
											[
												"ReferencedField",
												"device",
												"provisioning state"
											],
											[
												"EmbeddedText",
												"Post-Provisioning"
											]
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										]
									],
									[
										"When",
										[
											"And",
											[
												"And",
												[
													"Equals",
													[
														"ReferencedField",
														"device",
														"is online"
													],
													[
														"Boolean",
														false
													]
												],
												[
													"In",
													[
														"ReferencedField",
														"device",
														"api heartbeat state"
													],
													[
														"EmbeddedText",
														"offline"
													],
													[
														"EmbeddedText",
														"unknown"
													]
												]
											],
											[
												"NotExists",
												[
													"ReferencedField",
													"device",
													"last connectivity event"
												]
											]
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"is online"
												],
												[
													"Boolean",
													false
												]
											],
											[
												"In",
												[
													"ReferencedField",
													"device",
													"api heartbeat state"
												],
												[
													"EmbeddedText",
													"offline"
												],
												[
													"EmbeddedText",
													"unknown"
												]
											]
										],
										[
											"Null"
										]
									],
									[
										"When",
										[
											"And",
											[
												"Exists",
												[
													"ReferencedField",
													"device",
													"download progress"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device",
													"status"
												],
												[
													"EmbeddedText",
													"Downloading"
												]
											]
										],
										[
											"ReferencedField",
											"device",
											"download progress"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"ReferencedField",
												"device",
												"provisioning progress"
											]
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										]
									],
									[
										"When",
										[
											"Exists",
											[
												"SelectQuery",
												[
													"Select",
													[]
												],
												[
													"From",
													[
														"Table",
														"image install"
													]
												],
												[
													"Where",
													[
														"And",
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"device"
															],
															[
																"ReferencedField",
																"device",
																"id"
															]
														],
														[
															"Exists",
															[
																"ReferencedField",
																"image install",
																"download progress"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"status"
															],
															[
																"EmbeddedText",
																"Downloading"
															]
														]
													]
												]
											]
										],
										[
											"SelectQuery",
											[
												"Select",
												[
													[
														"Cast",
														[
															"Round",
															[
																"Average",
																[
																	"Coalesce",
																	[
																		"ReferencedField",
																		"image install",
																		"download progress"
																	],
																	[
																		"Number",
																		100
																	]
																]
															]
														],
														"Integer"
													]
												]
											],
											[
												"From",
												[
													"Table",
													"image install"
												]
											],
											[
												"Where",
												[
													"And",
													[
														"Equals",
														[
															"ReferencedField",
															"image install",
															"device"
														],
														[
															"ReferencedField",
															"device",
															"id"
														]
													],
													[
														"NotEquals",
														[
															"ReferencedField",
															"image install",
															"status"
														],
														[
															"EmbeddedText",
															"deleted"
														]
													],
													[
														"Or",
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"status"
															],
															[
																"EmbeddedText",
																"Downloading"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"image install",
																"is provided by-release"
															],
															[
																"Coalesce",
																[
																	"ReferencedField",
																	"device",
																	"should be running-release"
																],
																[
																	"SelectQuery",
																	[
																		"Select",
																		[
																			[
																				"ReferencedField",
																				"application",
																				"should be running-release"
																			]
																		]
																	],
																	[
																		"From",
																		[
																			"Table",
																			"application"
																		]
																	],
																	[
																		"Where",
																		[
																			"Equals",
																			[
																				"ReferencedField",
																				"device",
																				"belongs to-application"
																			],
																			[
																				"ReferencedField",
																				"application",
																				"id"
																			]
																		]
																	]
																]
															]
														]
													]
												]
											]
										]
									],
									[
										"Else",
										[
											"Null"
										]
									]
								]
							},
							{
								"fieldName": "was recently online",
								"dataType": "Boolean",
								"required": true,
								"computed": [
									"Or",
									[
										"Equals",
										[
											"ReferencedField",
											"public device",
											"is online"
										],
										[
											"Boolean",
											true
										]
									],
									[
										"LessThanOrEqual",
										[
											"Subtract",
											[
												"Cast",
												[
													"CurrentDate"
												],
												"Date"
											],
											[
												"ReferencedField",
												"public device",
												"last connectivity event"
											]
										],
										[
											"Duration",
											{
												"day": 28
											}
										]
									]
								]
							}
						],
						"primitive": false,
						"name": "public device",
						"indexes": [],
						"idField": "id",
						"resourceName": "public device",
						"modelName": "device",
						"triggers": [
							{
								"when": "BEFORE",
								"operation": "UPDATE",
								"level": "ROW",
								"fnName": "trigger_update_modified_at"
							}
						],
						"referenceScheme": "id",
						"definition": {
							"abstractSql": [
								"SelectQuery",
								[
									"Select",
									[
										[
											"ReferencedField",
											"device",
											"created at"
										],
										[
											"ReferencedField",
											"device",
											"modified at"
										],
										[
											"ReferencedField",
											"device",
											"id"
										],
										[
											"Alias",
											[
												"Null"
											],
											"actor"
										],
										[
											"ReferencedField",
											"device",
											"api heartbeat state"
										],
										[
											"ReferencedField",
											"device",
											"uuid"
										],
										[
											"ReferencedField",
											"device",
											"local id"
										],
										[
											"ReferencedField",
											"device",
											"device name"
										],
										[
											"ReferencedField",
											"device",
											"note"
										],
										[
											"ReferencedField",
											"device",
											"is of-device type"
										],
										[
											"ReferencedField",
											"device",
											"belongs to-application"
										],
										[
											"ReferencedField",
											"device",
											"is online"
										],
										[
											"ReferencedField",
											"device",
											"last connectivity event"
										],
										[
											"ReferencedField",
											"device",
											"is connected to vpn"
										],
										[
											"ReferencedField",
											"device",
											"last vpn event"
										],
										[
											"ReferencedField",
											"device",
											"is locked until-date"
										],
										[
											"ReferencedField",
											"device",
											"logs channel"
										],
										[
											"ReferencedField",
											"device",
											"public address"
										],
										[
											"ReferencedField",
											"device",
											"vpn address"
										],
										[
											"ReferencedField",
											"device",
											"ip address"
										],
										[
											"ReferencedField",
											"device",
											"mac address"
										],
										[
											"ReferencedField",
											"device",
											"memory usage"
										],
										[
											"ReferencedField",
											"device",
											"memory total"
										],
										[
											"ReferencedField",
											"device",
											"storage block device"
										],
										[
											"ReferencedField",
											"device",
											"storage usage"
										],
										[
											"ReferencedField",
											"device",
											"storage total"
										],
										[
											"ReferencedField",
											"device",
											"cpu usage"
										],
										[
											"ReferencedField",
											"device",
											"cpu temp"
										],
										[
											"ReferencedField",
											"device",
											"is undervolted"
										],
										[
											"ReferencedField",
											"device",
											"cpu id"
										],
										[
											"ReferencedField",
											"device",
											"is running-release"
										],
										[
											"ReferencedField",
											"device",
											"download progress"
										],
										[
											"ReferencedField",
											"device",
											"status"
										],
										[
											"ReferencedField",
											"device",
											"os version"
										],
										[
											"ReferencedField",
											"device",
											"os variant"
										],
										[
											"ReferencedField",
											"device",
											"supervisor version"
										],
										[
											"ReferencedField",
											"device",
											"provisioning progress"
										],
										[
											"ReferencedField",
											"device",
											"provisioning state"
										],
										[
											"ReferencedField",
											"device",
											"api port"
										],
										[
											"ReferencedField",
											"device",
											"api secret"
										],
										[
											"Alias",
											[
												"Null"
											],
											"is managed by-service instance"
										],
										[
											"Alias",
											[
												"Null"
											],
											"should be running-release"
										],
										[
											"ReferencedField",
											"device",
											"should be operated by-release"
										],
										[
											"Alias",
											[
												"Null"
											],
											"is managed by-device"
										],
										[
											"ReferencedField",
											"device",
											"should be managed by-release"
										],
										[
											"Alias",
											[
												"Null"
											],
											"belongs to-user"
										],
										[
											"Alias",
											[
												"Case",
												[
													"When",
													[
														"Equals",
														[
															"Coalesce",
															[
																"ReferencedField",
																"device",
																"latitude"
															],
															[
																"Text",
																""
															]
														],
														[
															"Text",
															""
														]
													],
													[
														"ReferencedField",
														"device",
														"latitude"
													]
												],
												[
													"Else",
													[
														"Cast",
														[
															"Divide",
															[
																"Round",
																[
																	"Multiply",
																	[
																		"Cast",
																		[
																			"ReferencedField",
																			"device",
																			"latitude"
																		],
																		"Real"
																	],
																	[
																		"Number",
																		6
																	]
																]
															],
															[
																"Number",
																6
															]
														],
														"Text"
													]
												]
											],
											"latitude"
										],
										[
											"Alias",
											[
												"Case",
												[
													"When",
													[
														"Equals",
														[
															"Coalesce",
															[
																"ReferencedField",
																"device",
																"longitude"
															],
															[
																"Text",
																""
															]
														],
														[
															"Text",
															""
														]
													],
													[
														"ReferencedField",
														"device",
														"longitude"
													]
												],
												[
													"Else",
													[
														"Cast",
														[
															"Divide",
															[
																"Round",
																[
																	"Multiply",
																	[
																		"Cast",
																		[
																			"ReferencedField",
																			"device",
																			"longitude"
																		],
																		"Real"
																	],
																	[
																		"Number",
																		6
																	]
																]
															],
															[
																"Number",
																6
															]
														],
														"Text"
													]
												]
											],
											"longitude"
										],
										[
											"ReferencedField",
											"device",
											"custom latitude"
										],
										[
											"ReferencedField",
											"device",
											"custom longitude"
										],
										[
											"ReferencedField",
											"device",
											"location"
										],
										[
											"ReferencedField",
											"device",
											"is accessible by support until-date"
										],
										[
											"ReferencedField",
											"device",
											"is web accessible"
										],
										[
											"ReferencedField",
											"device",
											"is active"
										],
										[
											"ReferencedField",
											"device",
											"overall status"
										],
										[
											"ReferencedField",
											"device",
											"overall progress"
										]
									]
								],
								[
									"From",
									[
										"Alias",
										[
											"Resource",
											"device$resin$bypass"
										],
										"device"
									]
								],
								[
									"Where",
									[
										"Exists",
										[
											"SelectQuery",
											[
												"Select",
												[]
											],
											[
												"From",
												[
													"Alias",
													[
														"Resource",
														"application$resin$bypass"
													],
													"device.application"
												]
											],
											[
												"Where",
												[
													"And",
													[
														"Equals",
														[
															"ReferencedField",
															"device.application",
															"id"
														],
														[
															"ReferencedField",
															"device",
															"belongs to-application"
														]
													],
													[
														"Equals",
														[
															"ReferencedField",
															"device.application",
															"is public"
														],
														[
															"Boolean",
															true
														]
													]
												]
											]
										]
									]
								]
							]
						}
					}
				},
				"functions": {
					"trigger_update_modified_at": {
						"type": "trigger",
						"body": "NEW.\"modified at\" = NOW();\nRETURN NEW;",
						"language": "plpgsql"
					}
				},
				"relationships": {
					"Big Integer": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"Serial": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"Case Insensitive Text": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"JSON": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"Hashed": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"SHA": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"Length": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"Current Time": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"Short Text": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"Red Component": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"Green Component": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"Blue Component": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"Alpha Component": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"Color": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"jwt secret": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"name": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"username": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"password": {
						"Hashed": {
							"$": [
								"Hashed"
							]
						},
						"has": {
							"Hashed": {
								"$": [
									"Hashed"
								]
							}
						}
					},
					"expiry date": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"key": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"description": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"permission": {
						"has": {
							"name": {
								"$": [
									"name"
								]
							},
							"user": {
								"has": {
									"permission": {
										"$": [
											"id",
											[
												"user-has-permission",
												"permission"
											]
										]
									}
								}
							}
						},
						"permission": {
							"has": {
								"name": {
									"$": [
										"name"
									]
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"is of": {
							"role": {
								"$": [
									"id",
									[
										"role-has-permission",
										"permission"
									]
								]
							},
							"user": {
								"$": [
									"id",
									[
										"user-has-permission",
										"permission"
									]
								]
							},
							"api key": {
								"$": [
									"id",
									[
										"api key-has-permission",
										"permission"
									]
								]
							}
						},
						"user": {
							"has": {
								"permission": {
									"$": [
										"id",
										[
											"user-has-permission",
											"permission"
										]
									]
								}
							}
						}
					},
					"role": {
						"has": {
							"name": {
								"$": [
									"name"
								]
							},
							"permission": {
								"$": [
									"id",
									[
										"role-has-permission",
										"role"
									]
								]
							},
							"user": {
								"has": {
									"role": {
										"$": [
											"id",
											[
												"user-has-role",
												"role"
											]
										]
									}
								}
							}
						},
						"role": {
							"has": {
								"name": {
									"$": [
										"name"
									]
								},
								"permission": {
									"$": [
										"id",
										[
											"role-has-permission",
											"role"
										]
									]
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"user": {
							"has": {
								"role": {
									"$": [
										"id",
										[
											"user-has-role",
											"role"
										]
									]
								}
							}
						},
						"is of": {
							"user": {
								"$": [
									"id",
									[
										"user-has-role",
										"role"
									]
								]
							},
							"api key": {
								"$": [
									"id",
									[
										"api key-has-role",
										"role"
									]
								]
							},
							"billing plan": {
								"$": [
									"id",
									[
										"billing plan",
										"role"
									]
								]
							}
						}
					},
					"role-has-permission": {
						"role": {
							"$": [
								"role",
								[
									"role",
									"id"
								]
							]
						},
						"permission": {
							"$": [
								"permission",
								[
									"permission",
									"id"
								]
							]
						},
						"has": {
							"permission": {
								"$": [
									"permission",
									[
										"permission",
										"id"
									]
								]
							}
						},
						"is of": {
							"role": {
								"$": [
									"role",
									[
										"role",
										"id"
									]
								]
							}
						}
					},
					"actor": {
						"is of": {
							"user": {
								"$": [
									"id",
									[
										"user",
										"actor"
									]
								]
							},
							"application": {
								"$": [
									"id",
									[
										"application",
										"actor"
									]
								]
							},
							"device": {
								"$": [
									"id",
									[
										"device",
										"actor"
									]
								]
							}
						},
						"api key": {
							"$": [
								"id",
								[
									"api key",
									"is of-actor"
								]
							]
						},
						"has": {
							"api key": {
								"$": [
									"id",
									[
										"api key",
										"is of-actor"
									]
								]
							}
						}
					},
					"user": {
						"actor": {
							"$": [
								"actor",
								[
									"actor",
									"id"
								]
							]
						},
						"has": {
							"actor": {
								"$": [
									"actor",
									[
										"actor",
										"id"
									]
								]
							},
							"username": {
								"$": [
									"username"
								]
							},
							"password": {
								"$": [
									"password"
								]
							},
							"jwt secret": {
								"$": [
									"jwt secret"
								]
							},
							"role": {
								"$": [
									"id",
									[
										"user-has-role",
										"user"
									]
								]
							},
							"user": {
								"has": {
									"role": {
										"$": [
											"id",
											[
												"user-has-role",
												"user"
											]
										]
									},
									"permission": {
										"$": [
											"id",
											[
												"user-has-permission",
												"user"
											]
										]
									},
									"public key": {
										"$": [
											"id",
											[
												"user-has-public key",
												"user"
											]
										]
									}
								},
								"is member of": {
									"organization": {
										"$": [
											"id",
											[
												"user-is member of-organization",
												"user"
											]
										]
									},
									"team": {
										"$": [
											"id",
											[
												"user-is member of-team",
												"user"
											]
										]
									},
									"application": {
										"$": [
											"id",
											[
												"user-is member of-application",
												"user"
											]
										]
									}
								}
							},
							"permission": {
								"$": [
									"id",
									[
										"user-has-permission",
										"user"
									]
								]
							},
							"email": {
								"$": [
									"email"
								]
							},
							"public key": {
								"$": [
									"id",
									[
										"user-has-public key",
										"user"
									]
								]
							},
							"internal note": {
								"$": [
									"internal note"
								]
							},
							"two factor key": {
								"$": [
									"two factor key"
								]
							},
							"unverified email": {
								"$": [
									"unverified email"
								]
							},
							"email verification code": {
								"$": [
									"email verification code"
								]
							},
							"password reset code": {
								"$": [
									"password reset code"
								]
							},
							"first name": {
								"$": [
									"first name"
								]
							},
							"last name": {
								"$": [
									"last name"
								]
							},
							"account type": {
								"$": [
									"account type"
								]
							}
						},
						"user": {
							"has": {
								"username": {
									"$": [
										"username"
									]
								},
								"password": {
									"$": [
										"password"
									]
								},
								"jwt secret": {
									"$": [
										"jwt secret"
									]
								},
								"role": {
									"$": [
										"id",
										[
											"user-has-role",
											"user"
										]
									]
								},
								"permission": {
									"$": [
										"id",
										[
											"user-has-permission",
											"user"
										]
									]
								},
								"email": {
									"$": [
										"email"
									]
								},
								"public key": {
									"$": [
										"id",
										[
											"user-has-public key",
											"user"
										]
									]
								},
								"internal note": {
									"$": [
										"internal note"
									]
								},
								"two factor key": {
									"$": [
										"two factor key"
									]
								},
								"unverified email": {
									"$": [
										"unverified email"
									]
								},
								"email verification code": {
									"$": [
										"email verification code"
									]
								},
								"password reset code": {
									"$": [
										"password reset code"
									]
								},
								"first name": {
									"$": [
										"first name"
									]
								},
								"last name": {
									"$": [
										"last name"
									]
								},
								"account type": {
									"$": [
										"account type"
									]
								}
							},
							"is member of": {
								"organization": {
									"$": [
										"id",
										[
											"user-is member of-organization",
											"user"
										]
									]
								},
								"team": {
									"$": [
										"id",
										[
											"user-is member of-team",
											"user"
										]
									]
								},
								"application": {
									"$": [
										"id",
										[
											"user-is member of-application",
											"user"
										]
									]
								}
							},
							"can use email verification code until": {
								"expiry date": {
									"$": [
										"can use email verification code until-expiry date"
									]
								}
							},
							"can reset password until": {
								"expiry date": {
									"$": [
										"can reset password until-expiry date"
									]
								}
							},
							"has legacy link to": {
								"organization": {
									"$": [
										"id",
										[
											"user-has legacy link to-organization",
											"user"
										]
									]
								}
							}
						},
						"username": {
							"$": [
								"username"
							]
						},
						"password": {
							"$": [
								"password"
							]
						},
						"jwt secret": {
							"$": [
								"jwt secret"
							]
						},
						"is member of": {
							"organization": {
								"$": [
									"id",
									[
										"user-is member of-organization",
										"user"
									]
								]
							},
							"team": {
								"$": [
									"id",
									[
										"user-is member of-team",
										"user"
									]
								]
							},
							"application": {
								"$": [
									"id",
									[
										"user-is member of-application",
										"user"
									]
								]
							}
						},
						"email": {
							"$": [
								"email"
							]
						},
						"internal note": {
							"$": [
								"internal note"
							]
						},
						"two factor key": {
							"$": [
								"two factor key"
							]
						},
						"is two factor protected": {
							"$": [
								"is two factor protected"
							]
						},
						"has disabled newsletter": {
							"$": [
								"has disabled newsletter"
							]
						},
						"has been sent verification email": {
							"$": [
								"has been sent verification email"
							]
						},
						"is verified": {
							"$": [
								"is verified"
							]
						},
						"must be verified": {
							"$": [
								"must be verified"
							]
						},
						"unverified email": {
							"$": [
								"unverified email"
							]
						},
						"email verification code": {
							"$": [
								"email verification code"
							]
						},
						"can use email verification code until": {
							"expiry date": {
								"$": [
									"can use email verification code until-expiry date"
								]
							}
						},
						"password reset code": {
							"$": [
								"password reset code"
							]
						},
						"can reset password until": {
							"expiry date": {
								"$": [
									"can reset password until-expiry date"
								]
							}
						},
						"first name": {
							"$": [
								"first name"
							]
						},
						"last name": {
							"$": [
								"last name"
							]
						},
						"account type": {
							"$": [
								"account type"
							]
						},
						"has legacy link to": {
							"organization": {
								"$": [
									"has legacy link to-organization",
									[
										"organization",
										"id"
									]
								]
							}
						},
						"includes": {
							"user": {
								"is member of": {
									"organization": {
										"$": [
											"id",
											[
												"user-is member of-organization",
												"user"
											]
										]
									},
									"application": {
										"$": [
											"id",
											[
												"user-is member of-application",
												"user"
											]
										]
									}
								}
							}
						},
						"creates": {
							"invitee": {
								"is invited to": {
									"application": {
										"$": [
											"id",
											[
												"invitee-is invited to-application",
												"is created by-user"
											]
										]
									},
									"organization": {
										"$": [
											"id",
											[
												"invitee-is invited to-organization",
												"is created by-user"
											]
										]
									}
								}
							},
							"release": {
								"$": [
									"id",
									[
										"release",
										"is created by-user"
									]
								]
							}
						},
						"owns": {
							"social service account": {
								"$": [
									"id",
									[
										"social service account",
										"belongs to-user"
									]
								]
							},
							"device": {
								"$": [
									"id",
									[
										"device",
										"belongs to-user"
									]
								]
							},
							"image download": {
								"$": [
									"id",
									[
										"image download",
										"belongs to-user"
									]
								]
							},
							"recovery two factor": {
								"$": [
									"id",
									[
										"recovery two factor",
										"belongs to-user"
									]
								]
							}
						},
						"has direct access to": {
							"application": {
								"$": [
									"id",
									[
										"user-has direct access to-application",
										"user"
									]
								]
							}
						}
					},
					"user-has-role": {
						"user": {
							"$": [
								"user",
								[
									"user",
									"id"
								]
							],
							"has": {
								"role": {
									"has": {
										"expiry date": {
											"$": [
												"expiry date"
											]
										}
									}
								}
							}
						},
						"role": {
							"$": [
								"role",
								[
									"role",
									"id"
								]
							]
						},
						"has": {
							"role": {
								"$": [
									"role",
									[
										"role",
										"id"
									]
								]
							},
							"expiry date": {
								"$": [
									"expiry date"
								]
							}
						},
						"is of": {
							"user": {
								"$": [
									"user",
									[
										"user",
										"id"
									]
								]
							}
						},
						"expiry date": {
							"$": [
								"expiry date"
							]
						}
					},
					"user-has-permission": {
						"user": {
							"$": [
								"user",
								[
									"user",
									"id"
								]
							],
							"has": {
								"permission": {
									"has": {
										"expiry date": {
											"$": [
												"expiry date"
											]
										}
									}
								}
							}
						},
						"permission": {
							"$": [
								"permission",
								[
									"permission",
									"id"
								]
							]
						},
						"has": {
							"permission": {
								"$": [
									"permission",
									[
										"permission",
										"id"
									]
								]
							},
							"expiry date": {
								"$": [
									"expiry date"
								]
							}
						},
						"is of": {
							"user": {
								"$": [
									"user",
									[
										"user",
										"id"
									]
								]
							}
						},
						"expiry date": {
							"$": [
								"expiry date"
							]
						}
					},
					"api key": {
						"has": {
							"key": {
								"$": [
									"key"
								]
							},
							"role": {
								"$": [
									"id",
									[
										"api key-has-role",
										"api key"
									]
								]
							},
							"permission": {
								"$": [
									"id",
									[
										"api key-has-permission",
										"api key"
									]
								]
							},
							"name": {
								"$": [
									"name"
								]
							},
							"description": {
								"$": [
									"description"
								]
							}
						},
						"api key": {
							"has": {
								"key": {
									"$": [
										"key"
									]
								},
								"role": {
									"$": [
										"id",
										[
											"api key-has-role",
											"api key"
										]
									]
								},
								"permission": {
									"$": [
										"id",
										[
											"api key-has-permission",
											"api key"
										]
									]
								},
								"name": {
									"$": [
										"name"
									]
								},
								"description": {
									"$": [
										"description"
									]
								}
							},
							"is of": {
								"actor": {
									"$": [
										"id",
										[
											"api key-is of-actor",
											"api key"
										]
									]
								}
							}
						},
						"key": {
							"$": [
								"key"
							]
						},
						"is of": {
							"actor": {
								"$": [
									"is of-actor",
									[
										"actor",
										"id"
									]
								]
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"description": {
							"$": [
								"description"
							]
						}
					},
					"api key-has-role": {
						"api key": {
							"$": [
								"api key",
								[
									"api key",
									"id"
								]
							]
						},
						"role": {
							"$": [
								"role",
								[
									"role",
									"id"
								]
							]
						},
						"has": {
							"role": {
								"$": [
									"role",
									[
										"role",
										"id"
									]
								]
							}
						},
						"is of": {
							"api key": {
								"$": [
									"api key",
									[
										"api key",
										"id"
									]
								]
							}
						}
					},
					"api key-has-permission": {
						"api key": {
							"$": [
								"api key",
								[
									"api key",
									"id"
								]
							]
						},
						"permission": {
							"$": [
								"permission",
								[
									"permission",
									"id"
								]
							]
						},
						"has": {
							"permission": {
								"$": [
									"permission",
									[
										"permission",
										"id"
									]
								]
							}
						},
						"is of": {
							"api key": {
								"$": [
									"api key",
									[
										"api key",
										"id"
									]
								]
							}
						}
					},
					"api heartbeat state": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"api port": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"api secret": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"app name": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"build log": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"class": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"commit": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"composition": {
						"JSON": {
							"$": [
								"JSON"
							]
						},
						"has": {
							"JSON": {
								"$": [
									"JSON"
								]
							}
						}
					},
					"content hash": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"contract": {
						"JSON": {
							"$": [
								"JSON"
							]
						},
						"has": {
							"JSON": {
								"$": [
									"JSON"
								]
							}
						}
					},
					"date": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"device name": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"dockerfile": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"download progress": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"email": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"end timestamp": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"env var name": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"error message": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"handle": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"image location": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"image size": {
						"Big Integer": {
							"$": [
								"Big Integer"
							]
						},
						"has": {
							"Big Integer": {
								"$": [
									"Big Integer"
								]
							}
						}
					},
					"install date": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"invalidation reason": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"ip address": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"known issue list": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"label name": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"last connectivity event": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"last heartbeat": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"last vpn event": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"local id": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"logo": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"logs channel": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"mac address": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"memory usage": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"memory total": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"storage block device": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"storage usage": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"storage total": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"cpu usage": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"cpu temp": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"cpu id": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"maximum device count": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"message": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"note": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"os version": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"os version range": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"os variant": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"project type": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"provisioning progress": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"provisioning state": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"public address": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"public key": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"push timestamp": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"release version": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"revision": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"scope": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"service name": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"service type": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"slug": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"source": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"start timestamp": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"status": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"semver major": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"semver minor": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"semver patch": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"supervisor version": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"tag key": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"title": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"update timestamp": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"uuid": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"value": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"version": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"vpn address": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"application": {
						"actor": {
							"$": [
								"actor",
								[
									"actor",
									"id"
								]
							]
						},
						"has": {
							"actor": {
								"$": [
									"actor",
									[
										"actor",
										"id"
									]
								]
							},
							"env var name": {
								"$": [
									"id",
									[
										"application-has-env var name",
										"application"
									]
								]
							},
							"application": {
								"has": {
									"env var name": {
										"$": [
											"id",
											[
												"application-has-env var name",
												"application"
											]
										]
									},
									"name": {
										"$": [
											"id",
											[
												"application-has-name",
												"application"
											]
										]
									},
									"service name": {
										"$": [
											"id",
											[
												"application-has-service name",
												"application"
											]
										]
									},
									"tag key": {
										"$": [
											"id",
											[
												"application-has-tag key",
												"application"
											]
										]
									},
									"domain": {
										"$": [
											"id",
											[
												"application-has-domain",
												"application"
											]
										]
									},
									"build var name": {
										"$": [
											"id",
											[
												"application-has-build var name",
												"application"
											]
										]
									}
								}
							},
							"name": {
								"$": [
									"id",
									[
										"application-has-name",
										"application"
									]
								]
							},
							"service name": {
								"$": [
									"id",
									[
										"application-has-service name",
										"application"
									]
								]
							},
							"tag key": {
								"$": [
									"id",
									[
										"application-has-tag key",
										"application"
									]
								]
							},
							"organization": {
								"$": [
									"organization",
									[
										"organization",
										"id"
									]
								]
							},
							"app name": {
								"$": [
									"app name"
								]
							},
							"slug": {
								"$": [
									"slug"
								]
							},
							"application type": {
								"$": [
									"application type",
									[
										"application type",
										"id"
									]
								]
							},
							"uuid": {
								"$": [
									"uuid"
								]
							},
							"team": {
								"grants access to": {
									"application": {
										"$": [
											"id",
											[
												"team-grants access to-application",
												"grants access to-application"
											]
										]
									}
								}
							},
							"user": {
								"is member of": {
									"application": {
										"$": [
											"id",
											[
												"user-is member of-application",
												"is member of-application"
											]
										]
									}
								}
							},
							"invitee": {
								"is invited to": {
									"application": {
										"$": [
											"id",
											[
												"invitee-is invited to-application",
												"is invited to-application"
											]
										]
									}
								},
								"$": [
									"id",
									[
										"invitee-is invited to-application",
										"is invited to-application"
									]
								]
							},
							"domain": {
								"$": [
									"id",
									[
										"application-has-domain",
										"application"
									]
								]
							},
							"build var name": {
								"$": [
									"id",
									[
										"application-has-build var name",
										"application"
									]
								]
							},
							"public organization": {
								"$": [
									"public organization",
									[
										"public organization",
										"id"
									]
								]
							}
						},
						"should track latest release": {
							"$": [
								"should track latest release"
							]
						},
						"is of": {
							"class": {
								"$": [
									"is of-class"
								]
							}
						},
						"application": {
							"is of": {
								"class": {
									"$": [
										"is of-class"
									]
								}
							},
							"has": {
								"env var name": {
									"$": [
										"id",
										[
											"application-has-env var name",
											"application"
										]
									]
								},
								"name": {
									"$": [
										"id",
										[
											"application-has-name",
											"application"
										]
									]
								},
								"service name": {
									"$": [
										"id",
										[
											"application-has-service name",
											"application"
										]
									]
								},
								"tag key": {
									"$": [
										"id",
										[
											"application-has-tag key",
											"application"
										]
									]
								},
								"organization": {
									"$": [
										"id",
										[
											"application-has-organization",
											"application"
										]
									]
								},
								"app name": {
									"$": [
										"app name"
									]
								},
								"slug": {
									"$": [
										"slug"
									]
								},
								"application type": {
									"$": [
										"id",
										[
											"application-has-application type",
											"application"
										]
									]
								},
								"uuid": {
									"$": [
										"uuid"
									]
								},
								"domain": {
									"$": [
										"id",
										[
											"application-has-domain",
											"application"
										]
									]
								},
								"build var name": {
									"$": [
										"id",
										[
											"application-has-build var name",
											"application"
										]
									]
								},
								"public organization": {
									"$": [
										"id",
										[
											"application-has-public organization",
											"application"
										]
									]
								}
							},
							"is for": {
								"device type": {
									"$": [
										"id",
										[
											"application-is for-device type",
											"application"
										]
									]
								}
							},
							"should be running": {
								"release": {
									"$": [
										"id",
										[
											"application-should be running-release",
											"application"
										]
									]
								}
							},
							"depends on": {
								"application": {
									"$": [
										"id",
										[
											"application-depends on-application",
											"application"
										]
									]
								}
							},
							"is accessible by support until": {
								"date": {
									"$": [
										"is accessible by support until-date"
									]
								}
							},
							"is stored at": {
								"repository url": {
									"$": [
										"is stored at-repository url"
									]
								}
							}
						},
						"organization": {
							"$": [
								"organization",
								[
									"organization",
									"id"
								]
							]
						},
						"app name": {
							"$": [
								"app name"
							]
						},
						"slug": {
							"$": [
								"slug"
							]
						},
						"is for": {
							"device type": {
								"$": [
									"is for-device type",
									[
										"device type",
										"id"
									]
								]
							}
						},
						"should be running": {
							"release": {
								"$": [
									"should be running-release",
									[
										"release",
										"id"
									]
								]
							}
						},
						"depends on": {
							"application": {
								"$": [
									"depends on-application",
									[
										"application",
										"id"
									]
								]
							}
						},
						"is depended on by": {
							"application": {
								"$": [
									"id",
									[
										"application",
										"depends on-application"
									]
								]
							}
						},
						"application type": {
							"$": [
								"application type",
								[
									"application type",
									"id"
								]
							]
						},
						"is host": {
							"$": [
								"is host"
							]
						},
						"is archived": {
							"$": [
								"is archived"
							]
						},
						"uuid": {
							"$": [
								"uuid"
							]
						},
						"is public": {
							"$": [
								"is public"
							]
						},
						"owns": {
							"device": {
								"$": [
									"id",
									[
										"device",
										"belongs to-application"
									]
								]
							},
							"release": {
								"$": [
									"id",
									[
										"release",
										"belongs to-application"
									]
								]
							},
							"image download": {
								"$": [
									"id",
									[
										"image download",
										"belongs to-application"
									]
								]
							},
							"public device": {
								"$": [
									"id",
									[
										"public device",
										"belongs to-application"
									]
								]
							}
						},
						"team": {
							"grants access to": {
								"application": {
									"$": [
										"id",
										[
											"team-grants access to-application",
											"grants access to-application"
										]
									]
								}
							}
						},
						"is accessible by": {
							"team": {
								"$": [
									"id",
									[
										"team-grants access to-application",
										"grants access to-application"
									]
								]
							}
						},
						"user": {
							"is member of": {
								"application": {
									"$": [
										"id",
										[
											"user-is member of-application",
											"is member of-application"
										]
									]
								}
							}
						},
						"includes": {
							"user": {
								"$": [
									"id",
									[
										"user-is member of-application",
										"is member of-application"
									]
								],
								"is member of": {
									"application": {
										"$": [
											"id",
											[
												"user-is member of-application",
												"is member of-application"
											]
										]
									}
								}
							}
						},
						"invitee": {
							"is invited to": {
								"application": {
									"$": [
										"id",
										[
											"invitee-is invited to-application",
											"is invited to-application"
										]
									]
								}
							},
							"$": [
								"id",
								[
									"invitee-is invited to-application",
									"is invited to-application"
								]
							]
						},
						"is accessible by support until": {
							"date": {
								"$": [
									"is accessible by support until-date"
								]
							}
						},
						"is discoverable": {
							"$": [
								"is discoverable"
							]
						},
						"is stored at": {
							"repository url": {
								"$": [
									"is stored at-repository url"
								]
							}
						},
						"can use": {
							"application as host": {
								"$": [
									"id",
									[
										"application-can use-application as host",
										"can use-application as host"
									]
								]
							}
						},
						"is directly accessible by": {
							"user": {
								"$": [
									"id",
									[
										"user-has direct access to-application",
										"has direct access to-application"
									]
								]
							}
						},
						"public organization": {
							"$": [
								"public organization",
								[
									"public organization",
									"id"
								]
							]
						}
					},
					"application-has-env var name": {
						"application": {
							"$": [
								"application",
								[
									"application",
									"id"
								]
							],
							"has": {
								"name": {
									"has": {
										"value": {
											"$": [
												"value"
											]
										}
									}
								}
							}
						},
						"has": {
							"value": {
								"$": [
									"value"
								]
							},
							"name": {
								"$": [
									"env var name"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						},
						"name": {
							"$": [
								"name"
							]
						}
					},
					"application-has-name": {
						"application": {
							"$": [
								"application",
								[
									"application",
									"id"
								]
							],
							"has": {
								"name": {
									"has": {
										"value": {
											"$": [
												"value"
											]
										}
									}
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"has": {
							"name": {
								"$": [
									"name"
								]
							},
							"value": {
								"$": [
									"value"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						}
					},
					"application-has-service name": {
						"application": {
							"$": [
								"application",
								[
									"application",
									"id"
								]
							],
							"has": {
								"service name": {
									"has": {
										"label name": {
											"$": [
												"id",
												[
													"application-has-service name-has-label name",
													"service"
												]
											]
										},
										"name": {
											"$": [
												"id",
												[
													"application-has-service name-has-name",
													"service"
												]
											]
										}
									}
								}
							}
						},
						"service name": {
							"$": [
								"service name"
							]
						},
						"has": {
							"service name": {
								"$": [
									"service name"
								]
							},
							"label name": {
								"$": [
									"id",
									[
										"application-has-service name-has-label name",
										"service"
									]
								]
							},
							"application": {
								"has": {
									"service name": {
										"has": {
											"label name": {
												"$": [
													"id",
													[
														"application-has-service name-has-label name",
														"service"
													]
												]
											},
											"name": {
												"$": [
													"id",
													[
														"application-has-service name-has-name",
														"service"
													]
												]
											}
										}
									}
								}
							},
							"name": {
								"$": [
									"id",
									[
										"application-has-service name-has-name",
										"service"
									]
								]
							},
							"device": {
								"installs": {
									"application": {
										"has": {
											"service name": {
												"$": [
													"id",
													[
														"device-installs-application-has-service name",
														"installs-service"
													]
												]
											}
										}
									}
								}
							}
						},
						"device": {
							"installs": {
								"application": {
									"has": {
										"service name": {
											"$": [
												"id",
												[
													"device-installs-application-has-service name",
													"installs-service"
												]
											]
										}
									}
								}
							}
						},
						"is built by": {
							"image": {
								"$": [
									"id",
									[
										"image",
										"is a build of-service"
									]
								]
							}
						}
					},
					"application-has-service name-has-label name": {
						"application": {
							"has": {
								"service name": {
									"$": [
										"service",
										[
											"application-has-service name",
											"id"
										]
									],
									"has": {
										"label name": {
											"has": {
												"value": {
													"$": [
														"value"
													]
												}
											}
										}
									}
								}
							}
						},
						"label name": {
							"$": [
								"label name"
							]
						},
						"has": {
							"label name": {
								"$": [
									"label name"
								]
							},
							"value": {
								"$": [
									"value"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						}
					},
					"application-has-service name-has-name": {
						"application": {
							"has": {
								"service name": {
									"$": [
										"service",
										[
											"application-has-service name",
											"id"
										]
									],
									"has": {
										"name": {
											"has": {
												"value": {
													"$": [
														"value"
													]
												}
											}
										}
									}
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"has": {
							"name": {
								"$": [
									"name"
								]
							},
							"value": {
								"$": [
									"value"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						}
					},
					"application-has-tag key": {
						"application": {
							"$": [
								"application",
								[
									"application",
									"id"
								]
							],
							"has": {
								"tag key": {
									"has": {
										"value": {
											"$": [
												"value"
											]
										}
									}
								}
							}
						},
						"tag key": {
							"$": [
								"tag key"
							]
						},
						"has": {
							"tag key": {
								"$": [
									"tag key"
								]
							},
							"value": {
								"$": [
									"value"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						}
					},
					"device": {
						"actor": {
							"$": [
								"actor",
								[
									"actor",
									"id"
								]
							]
						},
						"has": {
							"actor": {
								"$": [
									"actor",
									[
										"actor",
										"id"
									]
								]
							},
							"api heartbeat state": {
								"$": [
									"api heartbeat state"
								]
							},
							"env var name": {
								"$": [
									"id",
									[
										"device-has-env var name",
										"device"
									]
								]
							},
							"device": {
								"has": {
									"env var name": {
										"$": [
											"id",
											[
												"device-has-env var name",
												"device"
											]
										]
									},
									"name": {
										"$": [
											"id",
											[
												"device-has-name",
												"device"
											]
										]
									},
									"tag key": {
										"$": [
											"id",
											[
												"device-has-tag key",
												"device"
											]
										]
									},
									"fqdn": {
										"$": [
											"id",
											[
												"device-has-fqdn",
												"device"
											]
										]
									}
								},
								"installs": {
									"image": {
										"$": [
											"id",
											[
												"device-installs-image",
												"device"
											]
										]
									},
									"application": {
										"has": {
											"service name": {
												"$": [
													"id",
													[
														"device-installs-application-has-service name",
														"device"
													]
												]
											}
										}
									}
								}
							},
							"name": {
								"$": [
									"id",
									[
										"device-has-name",
										"device"
									]
								]
							},
							"tag key": {
								"$": [
									"id",
									[
										"device-has-tag key",
										"device"
									]
								]
							},
							"image": {
								"is downloaded by": {
									"device": {
										"$": [
											"id",
											[
												"image-is downloaded by-device",
												"is downloaded by-device"
											]
										]
									}
								}
							},
							"uuid": {
								"$": [
									"uuid"
								]
							},
							"local id": {
								"$": [
									"local id"
								]
							},
							"device name": {
								"$": [
									"device name"
								]
							},
							"note": {
								"$": [
									"note"
								]
							},
							"last connectivity event": {
								"$": [
									"last connectivity event"
								]
							},
							"last vpn event": {
								"$": [
									"last vpn event"
								]
							},
							"logs channel": {
								"$": [
									"logs channel"
								]
							},
							"public address": {
								"$": [
									"public address"
								]
							},
							"vpn address": {
								"$": [
									"vpn address"
								]
							},
							"ip address": {
								"$": [
									"ip address"
								]
							},
							"mac address": {
								"$": [
									"mac address"
								]
							},
							"memory usage": {
								"$": [
									"memory usage"
								]
							},
							"memory total": {
								"$": [
									"memory total"
								]
							},
							"storage block device": {
								"$": [
									"storage block device"
								]
							},
							"storage usage": {
								"$": [
									"storage usage"
								]
							},
							"storage total": {
								"$": [
									"storage total"
								]
							},
							"cpu usage": {
								"$": [
									"cpu usage"
								]
							},
							"cpu temp": {
								"$": [
									"cpu temp"
								]
							},
							"cpu id": {
								"$": [
									"cpu id"
								]
							},
							"download progress": {
								"$": [
									"download progress"
								]
							},
							"status": {
								"$": [
									"status"
								]
							},
							"os version": {
								"$": [
									"os version"
								]
							},
							"os variant": {
								"$": [
									"os variant"
								]
							},
							"supervisor version": {
								"$": [
									"supervisor version"
								]
							},
							"provisioning progress": {
								"$": [
									"provisioning progress"
								]
							},
							"provisioning state": {
								"$": [
									"provisioning state"
								]
							},
							"api port": {
								"$": [
									"api port"
								]
							},
							"api secret": {
								"$": [
									"api secret"
								]
							},
							"fqdn": {
								"$": [
									"id",
									[
										"device-has-fqdn",
										"device"
									]
								]
							},
							"latitude": {
								"$": [
									"latitude"
								]
							},
							"longitude": {
								"$": [
									"longitude"
								]
							},
							"custom latitude": {
								"$": [
									"custom latitude"
								]
							},
							"custom longitude": {
								"$": [
									"custom longitude"
								]
							},
							"location": {
								"$": [
									"location"
								]
							}
						},
						"device": {
							"has": {
								"api heartbeat state": {
									"$": [
										"api heartbeat state"
									]
								},
								"env var name": {
									"$": [
										"id",
										[
											"device-has-env var name",
											"device"
										]
									]
								},
								"name": {
									"$": [
										"id",
										[
											"device-has-name",
											"device"
										]
									]
								},
								"tag key": {
									"$": [
										"id",
										[
											"device-has-tag key",
											"device"
										]
									]
								},
								"uuid": {
									"$": [
										"uuid"
									]
								},
								"local id": {
									"$": [
										"local id"
									]
								},
								"device name": {
									"$": [
										"device name"
									]
								},
								"note": {
									"$": [
										"note"
									]
								},
								"last connectivity event": {
									"$": [
										"last connectivity event"
									]
								},
								"last vpn event": {
									"$": [
										"last vpn event"
									]
								},
								"logs channel": {
									"$": [
										"logs channel"
									]
								},
								"public address": {
									"$": [
										"public address"
									]
								},
								"vpn address": {
									"$": [
										"vpn address"
									]
								},
								"ip address": {
									"$": [
										"ip address"
									]
								},
								"mac address": {
									"$": [
										"mac address"
									]
								},
								"memory usage": {
									"$": [
										"memory usage"
									]
								},
								"memory total": {
									"$": [
										"memory total"
									]
								},
								"storage block device": {
									"$": [
										"storage block device"
									]
								},
								"storage usage": {
									"$": [
										"storage usage"
									]
								},
								"storage total": {
									"$": [
										"storage total"
									]
								},
								"cpu usage": {
									"$": [
										"cpu usage"
									]
								},
								"cpu temp": {
									"$": [
										"cpu temp"
									]
								},
								"cpu id": {
									"$": [
										"cpu id"
									]
								},
								"download progress": {
									"$": [
										"download progress"
									]
								},
								"status": {
									"$": [
										"status"
									]
								},
								"os version": {
									"$": [
										"os version"
									]
								},
								"os variant": {
									"$": [
										"os variant"
									]
								},
								"supervisor version": {
									"$": [
										"supervisor version"
									]
								},
								"provisioning progress": {
									"$": [
										"provisioning progress"
									]
								},
								"provisioning state": {
									"$": [
										"provisioning state"
									]
								},
								"api port": {
									"$": [
										"api port"
									]
								},
								"api secret": {
									"$": [
										"api secret"
									]
								},
								"fqdn": {
									"$": [
										"id",
										[
											"device-has-fqdn",
											"device"
										]
									]
								},
								"latitude": {
									"$": [
										"latitude"
									]
								},
								"longitude": {
									"$": [
										"longitude"
									]
								},
								"custom latitude": {
									"$": [
										"custom latitude"
									]
								},
								"custom longitude": {
									"$": [
										"custom longitude"
									]
								},
								"location": {
									"$": [
										"location"
									]
								}
							},
							"installs": {
								"image": {
									"$": [
										"id",
										[
											"device-installs-image",
											"device"
										]
									]
								},
								"application": {
									"has": {
										"service name": {
											"$": [
												"id",
												[
													"device-installs-application-has-service name",
													"device"
												]
											]
										}
									}
								}
							},
							"is of": {
								"device type": {
									"$": [
										"id",
										[
											"device-is of-device type",
											"device"
										]
									]
								}
							},
							"belongs to": {
								"application": {
									"$": [
										"id",
										[
											"device-belongs to-application",
											"device"
										]
									]
								},
								"user": {
									"$": [
										"id",
										[
											"device-belongs to-user",
											"device"
										]
									]
								}
							},
							"is locked until": {
								"date": {
									"$": [
										"is locked until-date"
									]
								}
							},
							"is running": {
								"release": {
									"$": [
										"id",
										[
											"device-is running-release",
											"device"
										]
									]
								}
							},
							"is managed by": {
								"service instance": {
									"$": [
										"id",
										[
											"device-is managed by-service instance",
											"device"
										]
									]
								},
								"device": {
									"$": [
										"id",
										[
											"device-is managed by-device",
											"device"
										]
									]
								}
							},
							"should be running": {
								"release": {
									"$": [
										"id",
										[
											"device-should be running-release",
											"device"
										]
									]
								}
							},
							"should be operated by": {
								"release": {
									"$": [
										"id",
										[
											"device-should be operated by-release",
											"device"
										]
									]
								}
							},
							"should be managed by": {
								"release": {
									"$": [
										"id",
										[
											"device-should be managed by-release",
											"device"
										]
									]
								}
							},
							"is accessible by support until": {
								"date": {
									"$": [
										"is accessible by support until-date"
									]
								}
							}
						},
						"api heartbeat state": {
							"$": [
								"api heartbeat state"
							]
						},
						"installs": {
							"image": {
								"$": [
									"id",
									[
										"device-installs-image",
										"device"
									]
								]
							},
							"application": {
								"has": {
									"service name": {
										"$": [
											"id",
											[
												"device-installs-application-has-service name",
												"device"
											]
										]
									}
								}
							}
						},
						"image": {
							"is downloaded by": {
								"device": {
									"$": [
										"id",
										[
											"image-is downloaded by-device",
											"is downloaded by-device"
										]
									]
								}
							}
						},
						"downloads": {
							"image": {
								"$": [
									"id",
									[
										"image-is downloaded by-device",
										"is downloaded by-device"
									]
								]
							}
						},
						"uuid": {
							"$": [
								"uuid"
							]
						},
						"local id": {
							"$": [
								"local id"
							]
						},
						"device name": {
							"$": [
								"device name"
							]
						},
						"note": {
							"$": [
								"note"
							]
						},
						"is of": {
							"device type": {
								"$": [
									"is of-device type",
									[
										"device type",
										"id"
									]
								]
							}
						},
						"belongs to": {
							"application": {
								"$": [
									"belongs to-application",
									[
										"application",
										"id"
									]
								]
							},
							"user": {
								"$": [
									"belongs to-user",
									[
										"user",
										"id"
									]
								]
							}
						},
						"is online": {
							"$": [
								"is online"
							]
						},
						"last connectivity event": {
							"$": [
								"last connectivity event"
							]
						},
						"is connected to vpn": {
							"$": [
								"is connected to vpn"
							]
						},
						"last vpn event": {
							"$": [
								"last vpn event"
							]
						},
						"is locked until": {
							"date": {
								"$": [
									"is locked until-date"
								]
							}
						},
						"logs channel": {
							"$": [
								"logs channel"
							]
						},
						"public address": {
							"$": [
								"public address"
							]
						},
						"vpn address": {
							"$": [
								"vpn address"
							]
						},
						"ip address": {
							"$": [
								"ip address"
							]
						},
						"mac address": {
							"$": [
								"mac address"
							]
						},
						"memory usage": {
							"$": [
								"memory usage"
							]
						},
						"memory total": {
							"$": [
								"memory total"
							]
						},
						"storage block device": {
							"$": [
								"storage block device"
							]
						},
						"storage usage": {
							"$": [
								"storage usage"
							]
						},
						"storage total": {
							"$": [
								"storage total"
							]
						},
						"cpu usage": {
							"$": [
								"cpu usage"
							]
						},
						"cpu temp": {
							"$": [
								"cpu temp"
							]
						},
						"is undervolted": {
							"$": [
								"is undervolted"
							]
						},
						"cpu id": {
							"$": [
								"cpu id"
							]
						},
						"is running": {
							"release": {
								"$": [
									"is running-release",
									[
										"release",
										"id"
									]
								]
							}
						},
						"download progress": {
							"$": [
								"download progress"
							]
						},
						"status": {
							"$": [
								"status"
							]
						},
						"os version": {
							"$": [
								"os version"
							]
						},
						"os variant": {
							"$": [
								"os variant"
							]
						},
						"supervisor version": {
							"$": [
								"supervisor version"
							]
						},
						"provisioning progress": {
							"$": [
								"provisioning progress"
							]
						},
						"provisioning state": {
							"$": [
								"provisioning state"
							]
						},
						"api port": {
							"$": [
								"api port"
							]
						},
						"api secret": {
							"$": [
								"api secret"
							]
						},
						"is managed by": {
							"service instance": {
								"$": [
									"is managed by-service instance",
									[
										"service instance",
										"id"
									]
								]
							},
							"device": {
								"$": [
									"is managed by-device",
									[
										"device",
										"id"
									]
								]
							}
						},
						"should be running": {
							"release": {
								"$": [
									"should be running-release",
									[
										"release",
										"id"
									]
								]
							}
						},
						"should be operated by": {
							"release": {
								"$": [
									"should be operated by-release",
									[
										"release",
										"id"
									]
								]
							}
						},
						"manages": {
							"device": {
								"$": [
									"id",
									[
										"device",
										"is managed by-device"
									]
								]
							}
						},
						"should be managed by": {
							"release": {
								"$": [
									"should be managed by-release",
									[
										"release",
										"id"
									]
								]
							}
						},
						"latitude": {
							"$": [
								"latitude"
							]
						},
						"longitude": {
							"$": [
								"longitude"
							]
						},
						"custom latitude": {
							"$": [
								"custom latitude"
							]
						},
						"custom longitude": {
							"$": [
								"custom longitude"
							]
						},
						"location": {
							"$": [
								"location"
							]
						},
						"is accessible by support until": {
							"date": {
								"$": [
									"is accessible by support until-date"
								]
							}
						},
						"is web accessible": {
							"$": [
								"is web accessible"
							]
						},
						"is active": {
							"$": [
								"is active"
							]
						}
					},
					"device-has-env var name": {
						"device": {
							"$": [
								"device",
								[
									"device",
									"id"
								]
							],
							"has": {
								"name": {
									"has": {
										"value": {
											"$": [
												"value"
											]
										}
									}
								}
							}
						},
						"has": {
							"value": {
								"$": [
									"value"
								]
							},
							"name": {
								"$": [
									"env var name"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						},
						"name": {
							"$": [
								"name"
							]
						}
					},
					"device-has-name": {
						"device": {
							"$": [
								"device",
								[
									"device",
									"id"
								]
							],
							"has": {
								"name": {
									"has": {
										"value": {
											"$": [
												"value"
											]
										}
									}
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"has": {
							"name": {
								"$": [
									"name"
								]
							},
							"value": {
								"$": [
									"value"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						}
					},
					"device-installs-image": {
						"device": {
							"$": [
								"device",
								[
									"device",
									"id"
								]
							],
							"installs": {
								"image": {
									"has": {
										"install date": {
											"$": [
												"install date"
											]
										},
										"download progress": {
											"$": [
												"download progress"
											]
										},
										"status": {
											"$": [
												"status"
											]
										}
									},
									"is provided by": {
										"release": {
											"$": [
												"id",
												[
													"device-installs-image-is provided by-release",
													"image install"
												]
											]
										}
									}
								}
							}
						},
						"image": {
							"$": [
								"installs-image",
								[
									"image",
									"id"
								]
							]
						},
						"installs": {
							"image": {
								"$": [
									"installs-image",
									[
										"image",
										"id"
									]
								]
							}
						},
						"has": {
							"install date": {
								"$": [
									"install date"
								]
							},
							"download progress": {
								"$": [
									"download progress"
								]
							},
							"status": {
								"$": [
									"status"
								]
							}
						},
						"install date": {
							"$": [
								"install date"
							]
						},
						"download progress": {
							"$": [
								"download progress"
							]
						},
						"status": {
							"$": [
								"status"
							]
						},
						"is provided by": {
							"release": {
								"$": [
									"is provided by-release",
									[
										"release",
										"id"
									]
								]
							}
						}
					},
					"image": {
						"device": {
							"installs": {
								"image": {
									"$": [
										"id",
										[
											"device-installs-image",
											"installs-image"
										]
									]
								}
							}
						},
						"has": {
							"device": {
								"installs": {
									"image": {
										"$": [
											"id",
											[
												"device-installs-image",
												"installs-image"
											]
										]
									}
								}
							},
							"image": {
								"is downloaded by": {
									"device": {
										"$": [
											"id",
											[
												"image-is downloaded by-device",
												"image"
											]
										]
									}
								},
								"is part of": {
									"release": {
										"$": [
											"id",
											[
												"image-is part of-release",
												"image"
											]
										]
									}
								}
							},
							"start timestamp": {
								"$": [
									"start timestamp"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							},
							"dockerfile": {
								"$": [
									"dockerfile"
								]
							},
							"image size": {
								"$": [
									"image size"
								]
							},
							"project type": {
								"$": [
									"project type"
								]
							},
							"error message": {
								"$": [
									"error message"
								]
							},
							"build log": {
								"$": [
									"build log"
								]
							},
							"push timestamp": {
								"$": [
									"push timestamp"
								]
							},
							"status": {
								"$": [
									"status"
								]
							},
							"content hash": {
								"$": [
									"content hash"
								]
							},
							"contract": {
								"$": [
									"contract"
								]
							}
						},
						"is downloaded by": {
							"device": {
								"$": [
									"id",
									[
										"image-is downloaded by-device",
										"image"
									]
								]
							}
						},
						"image": {
							"is downloaded by": {
								"device": {
									"$": [
										"id",
										[
											"image-is downloaded by-device",
											"image"
										]
									]
								}
							},
							"is part of": {
								"release": {
									"$": [
										"id",
										[
											"image-is part of-release",
											"image"
										]
									]
								}
							},
							"has": {
								"start timestamp": {
									"$": [
										"start timestamp"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								},
								"dockerfile": {
									"$": [
										"dockerfile"
									]
								},
								"image size": {
									"$": [
										"image size"
									]
								},
								"project type": {
									"$": [
										"project type"
									]
								},
								"error message": {
									"$": [
										"error message"
									]
								},
								"build log": {
									"$": [
										"build log"
									]
								},
								"push timestamp": {
									"$": [
										"push timestamp"
									]
								},
								"status": {
									"$": [
										"status"
									]
								},
								"content hash": {
									"$": [
										"content hash"
									]
								},
								"contract": {
									"$": [
										"contract"
									]
								}
							},
							"is a build of": {
								"application": {
									"has": {
										"service name": {
											"$": [
												"id",
												[
													"image-is a build of-application-has-service name",
													"image"
												]
											]
										}
									}
								}
							},
							"is stored at": {
								"image location": {
									"$": [
										"is stored at-image location"
									]
								}
							}
						},
						"is part of": {
							"release": {
								"$": [
									"id",
									[
										"image-is part of-release",
										"image"
									]
								]
							}
						},
						"start timestamp": {
							"$": [
								"start timestamp"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						},
						"dockerfile": {
							"$": [
								"dockerfile"
							]
						},
						"is a build of": {
							"application": {
								"has": {
									"service name": {
										"$": [
											"is a build of-service",
											[
												"application-has-service name",
												"id"
											]
										]
									}
								}
							}
						},
						"image size": {
							"$": [
								"image size"
							]
						},
						"is stored at": {
							"image location": {
								"$": [
									"is stored at-image location"
								]
							}
						},
						"project type": {
							"$": [
								"project type"
							]
						},
						"error message": {
							"$": [
								"error message"
							]
						},
						"build log": {
							"$": [
								"build log"
							]
						},
						"push timestamp": {
							"$": [
								"push timestamp"
							]
						},
						"status": {
							"$": [
								"status"
							]
						},
						"content hash": {
							"$": [
								"content hash"
							]
						},
						"contract": {
							"$": [
								"contract"
							]
						},
						"is": {
							"origin": {
								"of": {
									"delta": {
										"$": [
											"id",
											[
												"delta",
												"originates from-image"
											]
										]
									}
								}
							}
						},
						"is produced by": {
							"delta": {
								"$": [
									"id",
									[
										"delta",
										"produces-image"
									]
								]
							}
						}
					},
					"device-installs-application-has-service name": {
						"device": {
							"$": [
								"device",
								[
									"device",
									"id"
								]
							],
							"installs": {
								"application": {
									"has": {
										"service name": {
											"has": {
												"name": {
													"$": [
														"id",
														[
															"device-installs-application-has-service name-has-name",
															"service install"
														]
													]
												}
											}
										}
									}
								}
							}
						},
						"application": {
							"has": {
								"service name": {
									"$": [
										"installs-service",
										[
											"application-has-service name",
											"id"
										]
									]
								}
							}
						},
						"installs": {
							"application": {
								"has": {
									"service name": {
										"$": [
											"installs-service",
											[
												"application-has-service name",
												"id"
											]
										]
									}
								}
							}
						},
						"has": {
							"name": {
								"$": [
									"id",
									[
										"device-installs-application-has-service name-has-name",
										"service install"
									]
								]
							},
							"device": {
								"installs": {
									"application": {
										"has": {
											"service name": {
												"has": {
													"name": {
														"$": [
															"id",
															[
																"device-installs-application-has-service name-has-name",
																"service install"
															]
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"device-installs-application-has-service name-has-name": {
						"device": {
							"installs": {
								"application": {
									"has": {
										"service name": {
											"$": [
												"service install",
												[
													"device-installs-application-has-service name",
													"id"
												]
											],
											"has": {
												"name": {
													"has": {
														"value": {
															"$": [
																"value"
															]
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"has": {
							"name": {
								"$": [
									"name"
								]
							},
							"value": {
								"$": [
									"value"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						}
					},
					"device-has-tag key": {
						"device": {
							"$": [
								"device",
								[
									"device",
									"id"
								]
							],
							"has": {
								"tag key": {
									"has": {
										"value": {
											"$": [
												"value"
											]
										}
									}
								}
							}
						},
						"tag key": {
							"$": [
								"tag key"
							]
						},
						"has": {
							"tag key": {
								"$": [
									"tag key"
								]
							},
							"value": {
								"$": [
									"value"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						}
					},
					"release-has-tag key": {
						"release": {
							"$": [
								"release",
								[
									"release",
									"id"
								]
							],
							"has": {
								"tag key": {
									"has": {
										"value": {
											"$": [
												"value"
											]
										}
									}
								}
							}
						},
						"tag key": {
							"$": [
								"tag key"
							]
						},
						"has": {
							"tag key": {
								"$": [
									"tag key"
								]
							},
							"value": {
								"$": [
									"value"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						}
					},
					"release": {
						"has": {
							"tag key": {
								"$": [
									"id",
									[
										"release-has-tag key",
										"release"
									]
								]
							},
							"release": {
								"has": {
									"tag key": {
										"$": [
											"id",
											[
												"release-has-tag key",
												"release"
											]
										]
									}
								}
							},
							"image": {
								"is part of": {
									"release": {
										"$": [
											"id",
											[
												"image-is part of-release",
												"is part of-release"
											]
										]
									}
								}
							},
							"commit": {
								"$": [
									"commit"
								]
							},
							"composition": {
								"$": [
									"composition"
								]
							},
							"status": {
								"$": [
									"status"
								]
							},
							"source": {
								"$": [
									"source"
								]
							},
							"build log": {
								"$": [
									"build log"
								]
							},
							"start timestamp": {
								"$": [
									"start timestamp"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							},
							"update timestamp": {
								"$": [
									"update timestamp"
								]
							},
							"release version": {
								"$": [
									"release version"
								]
							},
							"contract": {
								"$": [
									"contract"
								]
							},
							"semver major": {
								"$": [
									"semver major"
								]
							},
							"semver minor": {
								"$": [
									"semver minor"
								]
							},
							"semver patch": {
								"$": [
									"semver patch"
								]
							},
							"revision": {
								"$": [
									"revision"
								]
							},
							"known issue list": {
								"$": [
									"known issue list"
								]
							},
							"note": {
								"$": [
									"note"
								]
							},
							"invalidation reason": {
								"$": [
									"invalidation reason"
								]
							},
							"statistics set": {
								"$": [
									"statistics set"
								]
							}
						},
						"release": {
							"has": {
								"tag key": {
									"$": [
										"id",
										[
											"release-has-tag key",
											"release"
										]
									]
								},
								"commit": {
									"$": [
										"commit"
									]
								},
								"composition": {
									"$": [
										"composition"
									]
								},
								"status": {
									"$": [
										"status"
									]
								},
								"source": {
									"$": [
										"source"
									]
								},
								"build log": {
									"$": [
										"build log"
									]
								},
								"start timestamp": {
									"$": [
										"start timestamp"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								},
								"update timestamp": {
									"$": [
										"update timestamp"
									]
								},
								"release version": {
									"$": [
										"release version"
									]
								},
								"contract": {
									"$": [
										"contract"
									]
								},
								"semver major": {
									"$": [
										"semver major"
									]
								},
								"semver minor": {
									"$": [
										"semver minor"
									]
								},
								"semver patch": {
									"$": [
										"semver patch"
									]
								},
								"revision": {
									"$": [
										"revision"
									]
								},
								"known issue list": {
									"$": [
										"known issue list"
									]
								},
								"note": {
									"$": [
										"note"
									]
								},
								"invalidation reason": {
									"$": [
										"invalidation reason"
									]
								},
								"statistics set": {
									"$": [
										"statistics set"
									]
								}
							},
							"belongs to": {
								"application": {
									"$": [
										"id",
										[
											"release-belongs to-application",
											"release"
										]
									]
								}
							},
							"is finalized at": {
								"date": {
									"$": [
										"is finalized at-date"
									]
								}
							},
							"is created by": {
								"user": {
									"$": [
										"id",
										[
											"release-is created by-user",
											"release"
										]
									]
								}
							}
						},
						"image": {
							"is part of": {
								"release": {
									"$": [
										"id",
										[
											"image-is part of-release",
											"is part of-release"
										]
									]
								}
							}
						},
						"contains": {
							"image": {
								"$": [
									"id",
									[
										"image-is part of-release",
										"is part of-release"
									]
								]
							}
						},
						"should be running on": {
							"application": {
								"$": [
									"id",
									[
										"application",
										"should be running-release"
									]
								]
							},
							"device": {
								"$": [
									"id",
									[
										"device",
										"should be running-release"
									]
								]
							}
						},
						"is running on": {
							"device": {
								"$": [
									"id",
									[
										"device",
										"is running-release"
									]
								]
							}
						},
						"should operate": {
							"device": {
								"$": [
									"id",
									[
										"device",
										"should be operated by-release"
									]
								]
							}
						},
						"should manage": {
							"device": {
								"$": [
									"id",
									[
										"device",
										"should be managed by-release"
									]
								]
							}
						},
						"belongs to": {
							"application": {
								"$": [
									"belongs to-application",
									[
										"application",
										"id"
									]
								]
							}
						},
						"commit": {
							"$": [
								"commit"
							]
						},
						"composition": {
							"$": [
								"composition"
							]
						},
						"status": {
							"$": [
								"status"
							]
						},
						"source": {
							"$": [
								"source"
							]
						},
						"build log": {
							"$": [
								"build log"
							]
						},
						"is invalidated": {
							"$": [
								"is invalidated"
							]
						},
						"start timestamp": {
							"$": [
								"start timestamp"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						},
						"update timestamp": {
							"$": [
								"update timestamp"
							]
						},
						"release version": {
							"$": [
								"release version"
							]
						},
						"contract": {
							"$": [
								"contract"
							]
						},
						"is passing tests": {
							"$": [
								"is passing tests"
							]
						},
						"is finalized at": {
							"date": {
								"$": [
									"is finalized at-date"
								]
							}
						},
						"semver major": {
							"$": [
								"semver major"
							]
						},
						"semver minor": {
							"$": [
								"semver minor"
							]
						},
						"semver patch": {
							"$": [
								"semver patch"
							]
						},
						"revision": {
							"$": [
								"revision"
							]
						},
						"known issue list": {
							"$": [
								"known issue list"
							]
						},
						"note": {
							"$": [
								"note"
							]
						},
						"invalidation reason": {
							"$": [
								"invalidation reason"
							]
						},
						"provides": {
							"device": {
								"installs": {
									"image": {
										"$": [
											"id",
											[
												"device-installs-image",
												"is provided by-release"
											]
										]
									}
								}
							}
						},
						"is created by": {
							"user": {
								"$": [
									"is created by-user",
									[
										"user",
										"id"
									]
								]
							}
						},
						"statistics set": {
							"$": [
								"statistics set"
							]
						}
					},
					"image-is downloaded by-device": {
						"image": {
							"$": [
								"image",
								[
									"image",
									"id"
								]
							],
							"is downloaded by": {
								"device": {
									"has": {
										"status": {
											"$": [
												"status"
											]
										},
										"download progress": {
											"$": [
												"download progress"
											]
										}
									}
								}
							}
						},
						"device": {
							"$": [
								"is downloaded by-device",
								[
									"device",
									"id"
								]
							]
						},
						"is downloaded by": {
							"device": {
								"$": [
									"is downloaded by-device",
									[
										"device",
										"id"
									]
								]
							}
						},
						"downloads": {
							"image": {
								"$": [
									"image",
									[
										"image",
										"id"
									]
								]
							}
						},
						"has": {
							"status": {
								"$": [
									"status"
								]
							},
							"download progress": {
								"$": [
									"download progress"
								]
							}
						},
						"status": {
							"$": [
								"status"
							]
						},
						"download progress": {
							"$": [
								"download progress"
							]
						}
					},
					"image-is part of-release": {
						"image": {
							"$": [
								"image",
								[
									"image",
									"id"
								]
							],
							"is part of": {
								"release": {
									"has": {
										"label name": {
											"$": [
												"id",
												[
													"image-is part of-release-has-label name",
													"release image"
												]
											]
										},
										"name": {
											"$": [
												"id",
												[
													"image-is part of-release-has-name",
													"release image"
												]
											]
										}
									}
								}
							}
						},
						"release": {
							"$": [
								"is part of-release",
								[
									"release",
									"id"
								]
							]
						},
						"is part of": {
							"release": {
								"$": [
									"is part of-release",
									[
										"release",
										"id"
									]
								]
							}
						},
						"contains": {
							"image": {
								"$": [
									"image",
									[
										"image",
										"id"
									]
								]
							}
						},
						"has": {
							"label name": {
								"$": [
									"id",
									[
										"image-is part of-release-has-label name",
										"release image"
									]
								]
							},
							"image": {
								"is part of": {
									"release": {
										"has": {
											"label name": {
												"$": [
													"id",
													[
														"image-is part of-release-has-label name",
														"release image"
													]
												]
											},
											"name": {
												"$": [
													"id",
													[
														"image-is part of-release-has-name",
														"release image"
													]
												]
											}
										}
									}
								}
							},
							"name": {
								"$": [
									"id",
									[
										"image-is part of-release-has-name",
										"release image"
									]
								]
							}
						}
					},
					"image-is part of-release-has-label name": {
						"image": {
							"is part of": {
								"release": {
									"$": [
										"release image",
										[
											"image-is part of-release",
											"id"
										]
									],
									"has": {
										"label name": {
											"has": {
												"value": {
													"$": [
														"value"
													]
												}
											}
										}
									}
								}
							}
						},
						"label name": {
							"$": [
								"label name"
							]
						},
						"has": {
							"label name": {
								"$": [
									"label name"
								]
							},
							"value": {
								"$": [
									"value"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						}
					},
					"image-is part of-release-has-name": {
						"image": {
							"is part of": {
								"release": {
									"$": [
										"release image",
										[
											"image-is part of-release",
											"id"
										]
									],
									"has": {
										"name": {
											"has": {
												"value": {
													"$": [
														"value"
													]
												}
											}
										}
									}
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"has": {
							"name": {
								"$": [
									"name"
								]
							},
							"value": {
								"$": [
									"value"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						}
					},
					"user-is member of-organization": {
						"user": {
							"$": [
								"user",
								[
									"user",
									"id"
								]
							],
							"is member of": {
								"organization": {
									"has": {
										"organization membership role": {
											"$": [
												"id",
												[
													"user-is member of-organization-has-organization membership role",
													"organization membership"
												]
											]
										},
										"effective seat role": {
											"$": [
												"effective seat role"
											]
										},
										"user": {
											"$": [
												"id",
												[
													"user-is member of-organization-has-user",
													"organization membership"
												]
											]
										},
										"tag key": {
											"$": [
												"id",
												[
													"user-is member of-organization-has-tag key",
													"organization membership"
												]
											]
										}
									},
									"is member of": {
										"organization": {
											"$": [
												"id",
												[
													"user-is member of-organization-is member of-organization",
													"organization membership"
												]
											]
										}
									}
								}
							}
						},
						"organization": {
							"$": [
								"is member of-organization",
								[
									"organization",
									"id"
								]
							]
						},
						"is member of": {
							"organization": {
								"$": [
									"is member of-organization",
									[
										"organization",
										"id"
									]
								]
							}
						},
						"includes": {
							"user": {
								"$": [
									"user",
									[
										"user",
										"id"
									]
								]
							}
						},
						"has": {
							"organization membership role": {
								"$": [
									"organization membership role",
									[
										"organization membership role",
										"id"
									]
								]
							},
							"effective seat role": {
								"$": [
									"effective seat role"
								]
							},
							"user": {
								"$": [
									"user",
									[
										"user",
										"id"
									]
								],
								"is member of": {
									"organization": {
										"has": {
											"tag key": {
												"$": [
													"id",
													[
														"user-is member of-organization-has-tag key",
														"organization membership"
													]
												]
											}
										}
									}
								}
							},
							"tag key": {
								"$": [
									"id",
									[
										"user-is member of-organization-has-tag key",
										"organization membership"
									]
								]
							}
						},
						"organization membership role": {
							"$": [
								"organization membership role",
								[
									"organization membership role",
									"id"
								]
							]
						},
						"effective seat role": {
							"$": [
								"effective seat role"
							]
						}
					},
					"organization": {
						"user": {
							"is member of": {
								"organization": {
									"$": [
										"id",
										[
											"user-is member of-organization",
											"is member of-organization"
										]
									]
								}
							}
						},
						"has": {
							"user": {
								"is member of": {
									"organization": {
										"$": [
											"id",
											[
												"user-is member of-organization",
												"is member of-organization"
											]
										]
									}
								}
							},
							"name": {
								"$": [
									"name"
								]
							},
							"handle": {
								"$": [
									"handle"
								]
							},
							"application": {
								"$": [
									"id",
									[
										"application",
										"organization"
									]
								]
							},
							"invitee": {
								"is invited to": {
									"organization": {
										"$": [
											"id",
											[
												"invitee-is invited to-organization",
												"is invited to-organization"
											]
										]
									}
								},
								"$": [
									"id",
									[
										"invitee-is invited to-organization",
										"is invited to-organization"
									]
								]
							},
							"company name": {
								"$": [
									"company name"
								]
							},
							"internal company name": {
								"$": [
									"internal company name"
								]
							},
							"internal note": {
								"$": [
									"internal note"
								]
							},
							"billing account code": {
								"$": [
									"billing account code"
								]
							},
							"tradegecko company id": {
								"$": [
									"tradegecko company id"
								]
							},
							"industry": {
								"$": [
									"industry"
								]
							},
							"website": {
								"$": [
									"website"
								]
							},
							"subscription": {
								"$": [
									"id",
									[
										"subscription",
										"is for-organization"
									]
								]
							}
						},
						"includes": {
							"user": {
								"$": [
									"id",
									[
										"user-is member of-organization",
										"is member of-organization"
									]
								],
								"is member of": {
									"organization": {
										"$": [
											"id",
											[
												"user-is member of-organization",
												"is member of-organization"
											]
										]
									}
								}
							}
						},
						"organization": {
							"has": {
								"name": {
									"$": [
										"name"
									]
								},
								"handle": {
									"$": [
										"handle"
									]
								},
								"company name": {
									"$": [
										"company name"
									]
								},
								"internal company name": {
									"$": [
										"internal company name"
									]
								},
								"internal note": {
									"$": [
										"internal note"
									]
								},
								"billing account code": {
									"$": [
										"billing account code"
									]
								},
								"tradegecko company id": {
									"$": [
										"tradegecko company id"
									]
								},
								"industry": {
									"$": [
										"industry"
									]
								},
								"website": {
									"$": [
										"website"
									]
								}
							},
							"has past due invoice since": {
								"date": {
									"$": [
										"has past due invoice since-date"
									]
								}
							},
							"has private access to": {
								"device type": {
									"$": [
										"id",
										[
											"organization-has private access to-device type",
											"organization"
										]
									]
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"handle": {
							"$": [
								"handle"
							]
						},
						"application": {
							"$": [
								"id",
								[
									"application",
									"organization"
								]
							]
						},
						"owns": {
							"team": {
								"$": [
									"id",
									[
										"team",
										"belongs to-organization"
									]
								]
							}
						},
						"invitee": {
							"is invited to": {
								"organization": {
									"$": [
										"id",
										[
											"invitee-is invited to-organization",
											"is invited to-organization"
										]
									]
								}
							},
							"$": [
								"id",
								[
									"invitee-is invited to-organization",
									"is invited to-organization"
								]
							]
						},
						"includes legacy link to": {
							"user": {
								"$": [
									"id",
									[
										"user",
										"has legacy link to-organization"
									]
								]
							}
						},
						"is active": {
							"$": [
								"is active"
							]
						},
						"company name": {
							"$": [
								"company name"
							]
						},
						"internal company name": {
							"$": [
								"internal company name"
							]
						},
						"internal note": {
							"$": [
								"internal note"
							]
						},
						"billing account code": {
							"$": [
								"billing account code"
							]
						},
						"has past due invoice since": {
							"date": {
								"$": [
									"has past due invoice since-date"
								]
							}
						},
						"tradegecko company id": {
							"$": [
								"tradegecko company id"
							]
						},
						"industry": {
							"$": [
								"industry"
							]
						},
						"website": {
							"$": [
								"website"
							]
						},
						"has private access to": {
							"device type": {
								"$": [
									"id",
									[
										"organization-has private access to-device type",
										"organization"
									]
								]
							}
						},
						"subscription": {
							"$": [
								"id",
								[
									"subscription",
									"is for-organization"
								]
							]
						}
					},
					"user-has-public key": {
						"user": {
							"$": [
								"user",
								[
									"user",
									"id"
								]
							],
							"has": {
								"public key": {
									"has": {
										"title": {
											"$": [
												"title"
											]
										}
									}
								}
							}
						},
						"public key": {
							"$": [
								"public key"
							]
						},
						"has": {
							"public key": {
								"$": [
									"public key"
								]
							},
							"title": {
								"$": [
									"title"
								]
							}
						},
						"title": {
							"$": [
								"title"
							]
						}
					},
					"application type": {
						"has": {
							"name": {
								"$": [
									"name"
								]
							},
							"slug": {
								"$": [
									"slug"
								]
							},
							"description": {
								"$": [
									"description"
								]
							},
							"maximum device count": {
								"$": [
									"maximum device count"
								]
							}
						},
						"application type": {
							"has": {
								"name": {
									"$": [
										"name"
									]
								},
								"slug": {
									"$": [
										"slug"
									]
								},
								"description": {
									"$": [
										"description"
									]
								},
								"maximum device count": {
									"$": [
										"maximum device count"
									]
								}
							},
							"needs": {
								"os version range": {
									"$": [
										"needs-os version range"
									]
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"supports web url": {
							"$": [
								"supports web url"
							]
						},
						"supports multicontainer": {
							"$": [
								"supports multicontainer"
							]
						},
						"supports gateway mode": {
							"$": [
								"supports gateway mode"
							]
						},
						"needs": {
							"os version range": {
								"$": [
									"needs-os version range"
								]
							}
						},
						"requires payment": {
							"$": [
								"requires payment"
							]
						},
						"is legacy": {
							"$": [
								"is legacy"
							]
						},
						"slug": {
							"$": [
								"slug"
							]
						},
						"description": {
							"$": [
								"description"
							]
						},
						"maximum device count": {
							"$": [
								"maximum device count"
							]
						},
						"is of": {
							"application": {
								"$": [
									"id",
									[
										"application",
										"application type"
									]
								]
							},
							"application history": {
								"$": [
									"id",
									[
										"application history",
										"application type"
									]
								]
							}
						},
						"is billed as": {
							"application type feature": {
								"$": [
									"id",
									[
										"application type feature",
										"application type"
									]
								]
							}
						}
					},
					"device type": {
						"is default for": {
							"application": {
								"$": [
									"id",
									[
										"application",
										"is for-device type"
									]
								]
							}
						},
						"describes": {
							"device": {
								"$": [
									"id",
									[
										"device",
										"is of-device type"
									]
								]
							}
						},
						"has": {
							"slug": {
								"$": [
									"slug"
								]
							},
							"name": {
								"$": [
									"name"
								]
							},
							"logo": {
								"$": [
									"logo"
								]
							},
							"contract": {
								"$": [
									"contract"
								]
							},
							"device history": {
								"$": [
									"id",
									[
										"device history",
										"is of-device type"
									]
								]
							}
						},
						"device type": {
							"has": {
								"slug": {
									"$": [
										"slug"
									]
								},
								"name": {
									"$": [
										"name"
									]
								},
								"logo": {
									"$": [
										"logo"
									]
								},
								"contract": {
									"$": [
										"contract"
									]
								}
							},
							"is of": {
								"cpu architecture": {
									"$": [
										"id",
										[
											"device type-is of-cpu architecture",
											"device type"
										]
									]
								}
							},
							"belongs to": {
								"device family": {
									"$": [
										"id",
										[
											"device type-belongs to-device family",
											"device type"
										]
									]
								}
							}
						},
						"slug": {
							"$": [
								"slug"
							]
						},
						"name": {
							"$": [
								"name"
							]
						},
						"is of": {
							"cpu architecture": {
								"$": [
									"is of-cpu architecture",
									[
										"cpu architecture",
										"id"
									]
								]
							}
						},
						"logo": {
							"$": [
								"logo"
							]
						},
						"contract": {
							"$": [
								"contract"
							]
						},
						"belongs to": {
							"device family": {
								"$": [
									"belongs to-device family",
									[
										"device family",
										"id"
									]
								]
							}
						},
						"is accessible privately by": {
							"organization": {
								"$": [
									"id",
									[
										"organization-has private access to-device type",
										"has private access to-device type"
									]
								]
							}
						},
						"is private": {
							"$": [
								"is private"
							]
						},
						"device history": {
							"$": [
								"id",
								[
									"device history",
									"is of-device type"
								]
							]
						}
					},
					"service instance": {
						"has": {
							"service type": {
								"$": [
									"service type"
								]
							},
							"ip address": {
								"$": [
									"ip address"
								]
							},
							"last heartbeat": {
								"$": [
									"last heartbeat"
								]
							}
						},
						"service instance": {
							"has": {
								"service type": {
									"$": [
										"service type"
									]
								},
								"ip address": {
									"$": [
										"ip address"
									]
								},
								"last heartbeat": {
									"$": [
										"last heartbeat"
									]
								}
							}
						},
						"service type": {
							"$": [
								"service type"
							]
						},
						"ip address": {
							"$": [
								"ip address"
							]
						},
						"last heartbeat": {
							"$": [
								"last heartbeat"
							]
						},
						"manages": {
							"device": {
								"$": [
									"id",
									[
										"device",
										"is managed by-service instance"
									]
								]
							}
						}
					},
					"cpu architecture": {
						"is supported by": {
							"device type": {
								"$": [
									"id",
									[
										"device type",
										"is of-cpu architecture"
									]
								]
							}
						},
						"has": {
							"slug": {
								"$": [
									"slug"
								]
							}
						},
						"cpu architecture": {
							"has": {
								"slug": {
									"$": [
										"slug"
									]
								}
							}
						},
						"slug": {
							"$": [
								"slug"
							]
						}
					},
					"device family": {
						"device type": {
							"$": [
								"id",
								[
									"device type",
									"belongs to-device family"
								]
							]
						},
						"has": {
							"device type": {
								"$": [
									"id",
									[
										"device type",
										"belongs to-device family"
									]
								]
							},
							"slug": {
								"$": [
									"slug"
								]
							},
							"name": {
								"$": [
									"name"
								]
							}
						},
						"device family": {
							"has": {
								"slug": {
									"$": [
										"slug"
									]
								},
								"name": {
									"$": [
										"name"
									]
								}
							},
							"is manufactured by": {
								"device manufacturer": {
									"$": [
										"id",
										[
											"device family-is manufactured by-device manufacturer",
											"device family"
										]
									]
								}
							}
						},
						"slug": {
							"$": [
								"slug"
							]
						},
						"name": {
							"$": [
								"name"
							]
						},
						"is manufactured by": {
							"device manufacturer": {
								"$": [
									"is manufactured by-device manufacturer",
									[
										"device manufacturer",
										"id"
									]
								]
							}
						}
					},
					"device manufacturer": {
						"has": {
							"slug": {
								"$": [
									"slug"
								]
							},
							"name": {
								"$": [
									"name"
								]
							}
						},
						"device manufacturer": {
							"has": {
								"slug": {
									"$": [
										"slug"
									]
								},
								"name": {
									"$": [
										"name"
									]
								}
							}
						},
						"slug": {
							"$": [
								"slug"
							]
						},
						"name": {
							"$": [
								"name"
							]
						},
						"manufactures": {
							"device family": {
								"$": [
									"id",
									[
										"device family",
										"is manufactured by-device manufacturer"
									]
								]
							}
						}
					},
					"config": {
						"has": {
							"key": {
								"$": [
									"key"
								]
							},
							"value": {
								"$": [
									"value"
								]
							},
							"scope": {
								"$": [
									"scope"
								]
							},
							"description": {
								"$": [
									"description"
								]
							}
						},
						"config": {
							"has": {
								"key": {
									"$": [
										"key"
									]
								},
								"value": {
									"$": [
										"value"
									]
								},
								"scope": {
									"$": [
										"scope"
									]
								},
								"description": {
									"$": [
										"description"
									]
								}
							}
						},
						"key": {
							"$": [
								"key"
							]
						},
						"value": {
							"$": [
								"value"
							]
						},
						"scope": {
							"$": [
								"scope"
							]
						},
						"description": {
							"$": [
								"description"
							]
						}
					},
					"two factor key": {
						"File": {
							"$": [
								"File"
							]
						},
						"has": {
							"File": {
								"$": [
									"File"
								]
							}
						}
					},
					"internal note": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"account type": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"annual price": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"application id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"base price": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"billing account code": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"billing code": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"billing cycle": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"blocked uri": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"build end timestamp": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"build start timestamp": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"build var name": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"bytes sent": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"client id": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"company name": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"custom latitude": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"custom longitude": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"device id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"discount code": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"discount percentage": {
						"Real": {
							"$": [
								"Real"
							]
						},
						"has": {
							"Real": {
								"$": [
									"Real"
								]
							}
						}
					},
					"display name": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"document uri": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"domain": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"effective seat role": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"email verification code": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"file name": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"file size": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"first name": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"fqdn": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"generation": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"image name": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"incidents counter": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"industry": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"internal company name": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"last name": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"last seen time": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"latitude": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"location": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"longitude": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"monthly price": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"organization id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"origin": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"original policy": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"password reset code": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"provider": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"quantity": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"reason": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"recovery code": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"recurly id": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"redirect uri": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"referrer": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"release id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"remote id": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"repository url": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"secret": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"SLA": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"size": {
						"Big Integer": {
							"$": [
								"Big Integer"
							]
						},
						"has": {
							"Big Integer": {
								"$": [
									"Big Integer"
								]
							}
						}
					},
					"statistics set": {
						"JSON": {
							"$": [
								"JSON"
							]
						},
						"has": {
							"JSON": {
								"$": [
									"JSON"
								]
							}
						}
					},
					"invitation token": {
						"Short Text": {
							"$": [
								"Short Text"
							]
						},
						"has": {
							"Short Text": {
								"$": [
									"Short Text"
								]
							}
						}
					},
					"tradegecko company id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"unit cost": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"unverified email": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"used timestamp": {
						"Date Time": {
							"$": [
								"Date Time"
							]
						},
						"has": {
							"Date Time": {
								"$": [
									"Date Time"
								]
							}
						}
					},
					"violated directive": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"website": {
						"Text": {
							"$": [
								"Text"
							]
						},
						"has": {
							"Text": {
								"$": [
									"Text"
								]
							}
						}
					},
					"billing plan": {
						"role": {
							"$": [
								"role",
								[
									"role",
									"id"
								]
							]
						},
						"has": {
							"role": {
								"$": [
									"role",
									[
										"role",
										"id"
									]
								]
							},
							"title": {
								"$": [
									"title"
								]
							}
						},
						"billing plan": {
							"has": {
								"title": {
									"$": [
										"title"
									]
								}
							}
						},
						"title": {
							"$": [
								"title"
							]
						}
					},
					"feature": {
						"is of": {
							"support feature": {
								"$": [
									"id",
									[
										"support feature",
										"feature"
									]
								]
							},
							"application type feature": {
								"$": [
									"id",
									[
										"application type feature",
										"feature"
									]
								]
							},
							"application member feature": {
								"$": [
									"id",
									[
										"application member feature",
										"feature"
									]
								]
							},
							"organization member feature": {
								"$": [
									"id",
									[
										"organization member feature",
										"feature"
									]
								]
							}
						},
						"has": {
							"title": {
								"$": [
									"title"
								]
							},
							"slug": {
								"$": [
									"slug"
								]
							},
							"billing code": {
								"$": [
									"billing code"
								]
							},
							"plan": {
								"provides": {
									"feature": {
										"$": [
											"id",
											[
												"plan-provides-feature",
												"provides-feature"
											]
										]
									}
								},
								"offers": {
									"feature": {
										"$": [
											"id",
											[
												"plan-offers-feature",
												"offers-feature"
											]
										]
									}
								}
							}
						},
						"feature": {
							"has": {
								"title": {
									"$": [
										"title"
									]
								},
								"slug": {
									"$": [
										"slug"
									]
								},
								"billing code": {
									"$": [
										"billing code"
									]
								}
							}
						},
						"title": {
							"$": [
								"title"
							]
						},
						"slug": {
							"$": [
								"slug"
							]
						},
						"billing code": {
							"$": [
								"billing code"
							]
						},
						"plan": {
							"provides": {
								"feature": {
									"$": [
										"id",
										[
											"plan-provides-feature",
											"provides-feature"
										]
									]
								}
							},
							"offers": {
								"feature": {
									"$": [
										"id",
										[
											"plan-offers-feature",
											"offers-feature"
										]
									]
								}
							}
						},
						"is offered by": {
							"plan": {
								"$": [
									"id",
									[
										"plan-offers-feature",
										"offers-feature"
									]
								]
							}
						}
					},
					"support feature": {
						"feature": {
							"$": [
								"feature",
								[
									"feature",
									"id"
								]
							]
						},
						"has": {
							"feature": {
								"$": [
									"feature",
									[
										"feature",
										"id"
									]
								]
							},
							"support tier": {
								"$": [
									"support tier",
									[
										"support tier",
										"id"
									]
								]
							}
						},
						"support feature": {
							"has": {
								"support tier": {
									"$": [
										"id",
										[
											"support feature-has-support tier",
											"support feature"
										]
									]
								}
							}
						},
						"support tier": {
							"$": [
								"support tier",
								[
									"support tier",
									"id"
								]
							]
						}
					},
					"application type feature": {
						"feature": {
							"$": [
								"feature",
								[
									"feature",
									"id"
								]
							]
						},
						"has": {
							"feature": {
								"$": [
									"feature",
									[
										"feature",
										"id"
									]
								]
							},
							"application type": {
								"$": [
									"application type",
									[
										"application type",
										"id"
									]
								]
							}
						},
						"application type feature": {
							"has": {
								"application type": {
									"$": [
										"id",
										[
											"application type feature-has-application type",
											"application type feature"
										]
									]
								}
							},
							"is composed of": {
								"billable component": {
									"$": [
										"id",
										[
											"application type feature-is composed of-billable component",
											"application type feature"
										]
									]
								}
							}
						},
						"application type": {
							"$": [
								"application type",
								[
									"application type",
									"id"
								]
							]
						},
						"is composed of": {
							"billable component": {
								"$": [
									"id",
									[
										"application type feature-is composed of-billable component",
										"application type feature"
									]
								]
							}
						}
					},
					"application member feature": {
						"feature": {
							"$": [
								"feature",
								[
									"feature",
									"id"
								]
							]
						},
						"has": {
							"feature": {
								"$": [
									"feature",
									[
										"feature",
										"id"
									]
								]
							},
							"application membership role": {
								"$": [
									"application membership role",
									[
										"application membership role",
										"id"
									]
								]
							}
						},
						"application member feature": {
							"has": {
								"application membership role": {
									"$": [
										"id",
										[
											"application member feature-has-application membership role",
											"application member feature"
										]
									]
								}
							},
							"is composed of": {
								"billable component": {
									"$": [
										"id",
										[
											"application member feature-is composed of-billable component",
											"application member feature"
										]
									]
								}
							}
						},
						"application membership role": {
							"$": [
								"application membership role",
								[
									"application membership role",
									"id"
								]
							]
						},
						"is composed of": {
							"billable component": {
								"$": [
									"id",
									[
										"application member feature-is composed of-billable component",
										"application member feature"
									]
								]
							}
						}
					},
					"organization member feature": {
						"feature": {
							"$": [
								"feature",
								[
									"feature",
									"id"
								]
							]
						},
						"has": {
							"feature": {
								"$": [
									"feature",
									[
										"feature",
										"id"
									]
								]
							},
							"organization membership role": {
								"$": [
									"organization membership role",
									[
										"organization membership role",
										"id"
									]
								]
							}
						},
						"organization member feature": {
							"has": {
								"organization membership role": {
									"$": [
										"id",
										[
											"organization member feature-has-organization membership role",
											"organization member feature"
										]
									]
								}
							},
							"is composed of": {
								"billable component": {
									"$": [
										"id",
										[
											"organization member feature-is composed of-billable component",
											"organization member feature"
										]
									]
								}
							}
						},
						"organization membership role": {
							"$": [
								"organization membership role",
								[
									"organization membership role",
									"id"
								]
							]
						},
						"is composed of": {
							"billable component": {
								"$": [
									"id",
									[
										"organization member feature-is composed of-billable component",
										"organization member feature"
									]
								]
							}
						}
					},
					"team": {
						"belongs to": {
							"organization": {
								"$": [
									"belongs to-organization",
									[
										"organization",
										"id"
									]
								]
							}
						},
						"team": {
							"belongs to": {
								"organization": {
									"$": [
										"id",
										[
											"team-belongs to-organization",
											"team"
										]
									]
								}
							},
							"grants access to": {
								"application": {
									"$": [
										"id",
										[
											"team-grants access to-application",
											"team"
										]
									]
								}
							},
							"has": {
								"name": {
									"$": [
										"name"
									]
								},
								"description": {
									"$": [
										"description"
									]
								}
							}
						},
						"grants access to": {
							"application": {
								"$": [
									"id",
									[
										"team-grants access to-application",
										"team"
									]
								]
							}
						},
						"has": {
							"team": {
								"grants access to": {
									"application": {
										"$": [
											"id",
											[
												"team-grants access to-application",
												"team"
											]
										]
									}
								}
							},
							"user": {
								"is member of": {
									"team": {
										"$": [
											"id",
											[
												"user-is member of-team",
												"is member of-team"
											]
										]
									}
								}
							},
							"name": {
								"$": [
									"name"
								]
							},
							"description": {
								"$": [
									"description"
								]
							}
						},
						"user": {
							"is member of": {
								"team": {
									"$": [
										"id",
										[
											"user-is member of-team",
											"is member of-team"
										]
									]
								}
							}
						},
						"includes": {
							"user": {
								"$": [
									"id",
									[
										"user-is member of-team",
										"is member of-team"
									]
								]
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"description": {
							"$": [
								"description"
							]
						}
					},
					"team-grants access to-application": {
						"team": {
							"$": [
								"team",
								[
									"team",
									"id"
								]
							],
							"grants access to": {
								"application": {
									"has": {
										"application membership role": {
											"$": [
												"id",
												[
													"team-grants access to-application-has-application membership role",
													"team application access"
												]
											]
										}
									}
								}
							}
						},
						"application": {
							"$": [
								"grants access to-application",
								[
									"application",
									"id"
								]
							]
						},
						"grants access to": {
							"application": {
								"$": [
									"grants access to-application",
									[
										"application",
										"id"
									]
								]
							}
						},
						"is accessible by": {
							"team": {
								"$": [
									"team",
									[
										"team",
										"id"
									]
								]
							}
						},
						"has": {
							"application membership role": {
								"$": [
									"application membership role",
									[
										"application membership role",
										"id"
									]
								]
							}
						},
						"application membership role": {
							"$": [
								"application membership role",
								[
									"application membership role",
									"id"
								]
							]
						}
					},
					"user-is member of-team": {
						"user": {
							"$": [
								"user",
								[
									"user",
									"id"
								]
							]
						},
						"team": {
							"$": [
								"is member of-team",
								[
									"team",
									"id"
								]
							]
						},
						"is member of": {
							"team": {
								"$": [
									"is member of-team",
									[
										"team",
										"id"
									]
								]
							}
						},
						"includes": {
							"user": {
								"$": [
									"user",
									[
										"user",
										"id"
									]
								]
							}
						}
					},
					"user-is member of-application": {
						"user": {
							"$": [
								"user",
								[
									"user",
									"id"
								]
							],
							"is member of": {
								"application": {
									"has": {
										"application membership role": {
											"$": [
												"id",
												[
													"user-is member of-application-has-application membership role",
													"user application membership"
												]
											]
										},
										"user": {
											"$": [
												"id",
												[
													"user-is member of-application-has-user",
													"user application membership"
												]
											]
										}
									},
									"is member of": {
										"application": {
											"$": [
												"id",
												[
													"user-is member of-application-is member of-application",
													"user application membership"
												]
											]
										}
									}
								}
							}
						},
						"application": {
							"$": [
								"is member of-application",
								[
									"application",
									"id"
								]
							]
						},
						"is member of": {
							"application": {
								"$": [
									"is member of-application",
									[
										"application",
										"id"
									]
								]
							}
						},
						"includes": {
							"user": {
								"$": [
									"user",
									[
										"user",
										"id"
									]
								]
							}
						},
						"has": {
							"application membership role": {
								"$": [
									"application membership role",
									[
										"application membership role",
										"id"
									]
								]
							},
							"user": {
								"$": [
									"user",
									[
										"user",
										"id"
									]
								]
							}
						},
						"application membership role": {
							"$": [
								"application membership role",
								[
									"application membership role",
									"id"
								]
							]
						}
					},
					"invitee-is invited to-application": {
						"invitee": {
							"$": [
								"invitee",
								[
									"invitee",
									"id"
								]
							],
							"is invited to": {
								"application": {
									"has": {
										"application membership role": {
											"$": [
												"id",
												[
													"invitee-is invited to-application-has-application membership role",
													"application invite"
												]
											]
										},
										"invitee": {
											"$": [
												"id",
												[
													"invitee-is invited to-application-has-invitee",
													"application invite"
												]
											]
										},
										"invitation token": {
											"$": [
												"invitation token"
											]
										},
										"message": {
											"$": [
												"message"
											]
										}
									},
									"is created by": {
										"user": {
											"$": [
												"id",
												[
													"invitee-is invited to-application-is created by-user",
													"application invite"
												]
											]
										}
									}
								}
							}
						},
						"application": {
							"$": [
								"is invited to-application",
								[
									"application",
									"id"
								]
							]
						},
						"is invited to": {
							"application": {
								"$": [
									"is invited to-application",
									[
										"application",
										"id"
									]
								]
							}
						},
						"has": {
							"invitee": {
								"$": [
									"invitee",
									[
										"invitee",
										"id"
									]
								]
							},
							"application membership role": {
								"$": [
									"application membership role",
									[
										"application membership role",
										"id"
									]
								]
							},
							"invitation token": {
								"$": [
									"invitation token"
								]
							},
							"message": {
								"$": [
									"message"
								]
							}
						},
						"application membership role": {
							"$": [
								"application membership role",
								[
									"application membership role",
									"id"
								]
							]
						},
						"invitation token": {
							"$": [
								"invitation token"
							]
						},
						"message": {
							"$": [
								"message"
							]
						},
						"is created by": {
							"user": {
								"$": [
									"is created by-user",
									[
										"user",
										"id"
									]
								]
							}
						}
					},
					"invitee": {
						"is invited to": {
							"application": {
								"$": [
									"id",
									[
										"invitee-is invited to-application",
										"invitee"
									]
								]
							},
							"organization": {
								"$": [
									"id",
									[
										"invitee-is invited to-organization",
										"invitee"
									]
								]
							}
						},
						"invitee": {
							"is invited to": {
								"application": {
									"$": [
										"id",
										[
											"invitee-is invited to-application",
											"invitee"
										]
									]
								},
								"organization": {
									"$": [
										"id",
										[
											"invitee-is invited to-organization",
											"invitee"
										]
									]
								}
							},
							"has": {
								"email": {
									"$": [
										"email"
									]
								}
							}
						},
						"has": {
							"invitee": {
								"is invited to": {
									"application": {
										"$": [
											"id",
											[
												"invitee-is invited to-application",
												"invitee"
											]
										]
									},
									"organization": {
										"$": [
											"id",
											[
												"invitee-is invited to-organization",
												"invitee"
											]
										]
									}
								}
							},
							"email": {
								"$": [
									"email"
								]
							}
						},
						"email": {
							"$": [
								"email"
							]
						},
						"includes": {
							"invitee": {
								"is invited to": {
									"application": {
										"$": [
											"id",
											[
												"invitee-is invited to-application",
												"invitee"
											]
										]
									},
									"organization": {
										"$": [
											"id",
											[
												"invitee-is invited to-organization",
												"invitee"
											]
										]
									}
								}
							}
						}
					},
					"invitee-is invited to-organization": {
						"invitee": {
							"$": [
								"invitee",
								[
									"invitee",
									"id"
								]
							],
							"is invited to": {
								"organization": {
									"has": {
										"organization membership role": {
											"$": [
												"id",
												[
													"invitee-is invited to-organization-has-organization membership role",
													"organization invite"
												]
											]
										},
										"invitee": {
											"$": [
												"id",
												[
													"invitee-is invited to-organization-has-invitee",
													"organization invite"
												]
											]
										},
										"invitation token": {
											"$": [
												"invitation token"
											]
										},
										"message": {
											"$": [
												"message"
											]
										}
									},
									"is created by": {
										"user": {
											"$": [
												"id",
												[
													"invitee-is invited to-organization-is created by-user",
													"organization invite"
												]
											]
										}
									}
								}
							}
						},
						"organization": {
							"$": [
								"is invited to-organization",
								[
									"organization",
									"id"
								]
							]
						},
						"is invited to": {
							"organization": {
								"$": [
									"is invited to-organization",
									[
										"organization",
										"id"
									]
								]
							}
						},
						"has": {
							"invitee": {
								"$": [
									"invitee",
									[
										"invitee",
										"id"
									]
								]
							},
							"organization membership role": {
								"$": [
									"organization membership role",
									[
										"organization membership role",
										"id"
									]
								]
							},
							"invitation token": {
								"$": [
									"invitation token"
								]
							},
							"message": {
								"$": [
									"message"
								]
							}
						},
						"organization membership role": {
							"$": [
								"organization membership role",
								[
									"organization membership role",
									"id"
								]
							]
						},
						"invitation token": {
							"$": [
								"invitation token"
							]
						},
						"message": {
							"$": [
								"message"
							]
						},
						"is created by": {
							"user": {
								"$": [
									"is created by-user",
									[
										"user",
										"id"
									]
								]
							}
						}
					},
					"device-has-fqdn": {
						"device": {
							"$": [
								"device",
								[
									"device",
									"id"
								]
							],
							"has": {
								"fqdn": {
									"has": {
										"fqdn": {
											"$": [
												"fqdn"
											]
										}
									}
								}
							}
						},
						"fqdn": {
							"$": [
								"fqdn"
							]
						},
						"has": {
							"fqdn": {
								"$": [
									"fqdn"
								]
							}
						}
					},
					"application-has-domain": {
						"application": {
							"$": [
								"application",
								[
									"application",
									"id"
								]
							],
							"has": {
								"domain": {
									"has": {
										"domain": {
											"$": [
												"domain"
											]
										}
									}
								}
							}
						},
						"domain": {
							"$": [
								"domain"
							]
						},
						"has": {
							"domain": {
								"$": [
									"domain"
								]
							}
						}
					},
					"application-has-build var name": {
						"application": {
							"$": [
								"application",
								[
									"application",
									"id"
								]
							],
							"has": {
								"name": {
									"has": {
										"value": {
											"$": [
												"value"
											]
										}
									}
								}
							}
						},
						"has": {
							"build var name": {
								"$": [
									"build var name"
								]
							},
							"value": {
								"$": [
									"value"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						},
						"name": {
							"$": [
								"name"
							]
						}
					},
					"organization-has private access to-device type": {
						"organization": {
							"$": [
								"organization",
								[
									"organization",
									"id"
								]
							]
						},
						"device type": {
							"$": [
								"has private access to-device type",
								[
									"device type",
									"id"
								]
							]
						},
						"has private access to": {
							"device type": {
								"$": [
									"has private access to-device type",
									[
										"device type",
										"id"
									]
								]
							}
						},
						"is accessible privately by": {
							"organization": {
								"$": [
									"organization",
									[
										"organization",
										"id"
									]
								]
							}
						}
					},
					"organization membership role": {
						"is of": {
							"user": {
								"is member of": {
									"organization": {
										"$": [
											"id",
											[
												"user-is member of-organization",
												"organization membership role"
											]
										]
									}
								}
							},
							"invitee": {
								"is invited to": {
									"organization": {
										"$": [
											"id",
											[
												"invitee-is invited to-organization",
												"organization membership role"
											]
										]
									}
								}
							},
							"organization membership history": {
								"$": [
									"id",
									[
										"organization membership history",
										"organization membership role"
									]
								]
							}
						},
						"has": {
							"name": {
								"$": [
									"name"
								]
							}
						},
						"organization membership role": {
							"has": {
								"name": {
									"$": [
										"name"
									]
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"is billed as": {
							"organization member feature": {
								"$": [
									"id",
									[
										"organization member feature",
										"organization membership role"
									]
								]
							}
						}
					},
					"user-is member of-organization-has-tag key": {
						"user": {
							"is member of": {
								"organization": {
									"$": [
										"organization membership",
										[
											"user-is member of-organization",
											"id"
										]
									],
									"has": {
										"tag key": {
											"has": {
												"value": {
													"$": [
														"value"
													]
												}
											}
										}
									}
								}
							}
						},
						"tag key": {
							"$": [
								"tag key"
							]
						},
						"has": {
							"tag key": {
								"$": [
									"tag key"
								]
							},
							"value": {
								"$": [
									"value"
								]
							}
						},
						"value": {
							"$": [
								"value"
							]
						}
					},
					"application membership role": {
						"is of": {
							"team": {
								"grants access to": {
									"application": {
										"$": [
											"id",
											[
												"team-grants access to-application",
												"application membership role"
											]
										]
									}
								}
							},
							"invitee": {
								"is invited to": {
									"application": {
										"$": [
											"id",
											[
												"invitee-is invited to-application",
												"application membership role"
											]
										]
									}
								}
							},
							"user": {
								"is member of": {
									"application": {
										"$": [
											"id",
											[
												"user-is member of-application",
												"application membership role"
											]
										]
									}
								}
							},
							"user is member of application history": {
								"$": [
									"id",
									[
										"user is member of application history",
										"application membership role"
									]
								]
							},
							"team application access history": {
								"$": [
									"id",
									[
										"team application access history",
										"application membership role"
									]
								]
							}
						},
						"has": {
							"name": {
								"$": [
									"name"
								]
							}
						},
						"application membership role": {
							"has": {
								"name": {
									"$": [
										"name"
									]
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"is billed as": {
							"application member feature": {
								"$": [
									"id",
									[
										"application member feature",
										"application membership role"
									]
								]
							}
						}
					},
					"social service account": {
						"belongs to": {
							"user": {
								"$": [
									"belongs to-user",
									[
										"user",
										"id"
									]
								]
							}
						},
						"social service account": {
							"belongs to": {
								"user": {
									"$": [
										"id",
										[
											"social service account-belongs to-user",
											"social service account"
										]
									]
								}
							},
							"has": {
								"provider": {
									"$": [
										"provider"
									]
								},
								"remote id": {
									"$": [
										"remote id"
									]
								},
								"display name": {
									"$": [
										"display name"
									]
								},
								"email": {
									"$": [
										"email"
									]
								}
							}
						},
						"has": {
							"provider": {
								"$": [
									"provider"
								]
							},
							"remote id": {
								"$": [
									"remote id"
								]
							},
							"display name": {
								"$": [
									"display name"
								]
							},
							"email": {
								"$": [
									"email"
								]
							}
						},
						"provider": {
							"$": [
								"provider"
							]
						},
						"remote id": {
							"$": [
								"remote id"
							]
						},
						"display name": {
							"$": [
								"display name"
							]
						},
						"email": {
							"$": [
								"email"
							]
						}
					},
					"csp report": {
						"has": {
							"document uri": {
								"$": [
									"document uri"
								]
							},
							"blocked uri": {
								"$": [
									"blocked uri"
								]
							},
							"referrer": {
								"$": [
									"referrer"
								]
							},
							"violated directive": {
								"$": [
									"violated directive"
								]
							},
							"original policy": {
								"$": [
									"original policy"
								]
							},
							"incidents counter": {
								"$": [
									"incidents counter"
								]
							},
							"last seen time": {
								"$": [
									"last seen time"
								]
							}
						},
						"csp report": {
							"has": {
								"document uri": {
									"$": [
										"document uri"
									]
								},
								"blocked uri": {
									"$": [
										"blocked uri"
									]
								},
								"referrer": {
									"$": [
										"referrer"
									]
								},
								"violated directive": {
									"$": [
										"violated directive"
									]
								},
								"original policy": {
									"$": [
										"original policy"
									]
								},
								"incidents counter": {
									"$": [
										"incidents counter"
									]
								},
								"last seen time": {
									"$": [
										"last seen time"
									]
								}
							}
						},
						"document uri": {
							"$": [
								"document uri"
							]
						},
						"blocked uri": {
							"$": [
								"blocked uri"
							]
						},
						"referrer": {
							"$": [
								"referrer"
							]
						},
						"violated directive": {
							"$": [
								"violated directive"
							]
						},
						"original policy": {
							"$": [
								"original policy"
							]
						},
						"incidents counter": {
							"$": [
								"incidents counter"
							]
						},
						"last seen time": {
							"$": [
								"last seen time"
							]
						}
					},
					"image download": {
						"belongs to": {
							"application": {
								"$": [
									"belongs to-application",
									[
										"application",
										"id"
									]
								]
							},
							"user": {
								"$": [
									"belongs to-user",
									[
										"user",
										"id"
									]
								]
							}
						},
						"image download": {
							"belongs to": {
								"application": {
									"$": [
										"id",
										[
											"image download-belongs to-application",
											"image download"
										]
									]
								},
								"user": {
									"$": [
										"id",
										[
											"image download-belongs to-user",
											"image download"
										]
									]
								}
							},
							"is for": {
								"device type": {
									"$": [
										"id",
										[
											"image download-is for-device type",
											"image download"
										]
									]
								},
								"release": {
									"$": [
										"id",
										[
											"image download-is for-release",
											"image download"
										]
									]
								}
							},
							"has": {
								"os version": {
									"$": [
										"os version"
									]
								},
								"file name": {
									"$": [
										"file name"
									]
								},
								"file size": {
									"$": [
										"file size"
									]
								},
								"bytes sent": {
									"$": [
										"bytes sent"
									]
								},
								"start timestamp": {
									"$": [
										"start timestamp"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								}
							}
						},
						"is for": {
							"device type": {
								"$": [
									"is for-device type",
									[
										"device type",
										"id"
									]
								]
							},
							"release": {
								"$": [
									"is for-release",
									[
										"release",
										"id"
									]
								]
							}
						},
						"has": {
							"os version": {
								"$": [
									"os version"
								]
							},
							"file name": {
								"$": [
									"file name"
								]
							},
							"file size": {
								"$": [
									"file size"
								]
							},
							"bytes sent": {
								"$": [
									"bytes sent"
								]
							},
							"start timestamp": {
								"$": [
									"start timestamp"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							}
						},
						"os version": {
							"$": [
								"os version"
							]
						},
						"file name": {
							"$": [
								"file name"
							]
						},
						"file size": {
							"$": [
								"file size"
							]
						},
						"bytes sent": {
							"$": [
								"bytes sent"
							]
						},
						"start timestamp": {
							"$": [
								"start timestamp"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						}
					},
					"plan": {
						"has": {
							"title": {
								"$": [
									"title"
								]
							},
							"billing code": {
								"$": [
									"billing code"
								]
							},
							"generation": {
								"$": [
									"generation"
								]
							},
							"monthly price": {
								"$": [
									"monthly price"
								]
							},
							"annual price": {
								"$": [
									"annual price"
								]
							},
							"discount code": {
								"$": [
									"id",
									[
										"plan-has-discount code",
										"plan"
									]
								]
							},
							"plan": {
								"provides": {
									"feature": {
										"$": [
											"id",
											[
												"plan-provides-feature",
												"plan"
											]
										]
									}
								},
								"offers": {
									"feature": {
										"$": [
											"id",
											[
												"plan-offers-feature",
												"plan"
											]
										]
									}
								}
							},
							"subscription": {
								"$": [
									"id",
									[
										"subscription",
										"is for-plan"
									]
								]
							}
						},
						"plan": {
							"has": {
								"title": {
									"$": [
										"title"
									]
								},
								"billing code": {
									"$": [
										"billing code"
									]
								},
								"generation": {
									"$": [
										"generation"
									]
								},
								"monthly price": {
									"$": [
										"monthly price"
									]
								},
								"annual price": {
									"$": [
										"annual price"
									]
								},
								"discount code": {
									"$": [
										"id",
										[
											"plan-has-discount code",
											"plan"
										]
									]
								}
							},
							"provides": {
								"feature": {
									"$": [
										"id",
										[
											"plan-provides-feature",
											"plan"
										]
									]
								}
							},
							"offers": {
								"feature": {
									"$": [
										"id",
										[
											"plan-offers-feature",
											"plan"
										]
									]
								}
							}
						},
						"title": {
							"$": [
								"title"
							]
						},
						"billing code": {
							"$": [
								"billing code"
							]
						},
						"generation": {
							"$": [
								"generation"
							]
						},
						"monthly price": {
							"$": [
								"monthly price"
							]
						},
						"annual price": {
							"$": [
								"annual price"
							]
						},
						"can self serve": {
							"$": [
								"can self serve"
							]
						},
						"is legacy": {
							"$": [
								"is legacy"
							]
						},
						"provides": {
							"feature": {
								"$": [
									"id",
									[
										"plan-provides-feature",
										"plan"
									]
								]
							}
						},
						"offers": {
							"feature": {
								"$": [
									"id",
									[
										"plan-offers-feature",
										"plan"
									]
								]
							},
							"plan": {
								"offers": {
									"feature": {
										"$": [
											"id",
											[
												"plan-offers-feature",
												"plan"
											]
										]
									}
								}
							}
						},
						"subscription": {
							"$": [
								"id",
								[
									"subscription",
									"is for-plan"
								]
							]
						}
					},
					"plan-has-discount code": {
						"plan": {
							"$": [
								"plan",
								[
									"plan",
									"id"
								]
							]
						},
						"discount code": {
							"$": [
								"discount code"
							]
						},
						"has": {
							"discount code": {
								"$": [
									"discount code"
								]
							}
						}
					},
					"support tier": {
						"has": {
							"title": {
								"$": [
									"title"
								]
							},
							"slug": {
								"$": [
									"slug"
								]
							}
						},
						"support tier": {
							"has": {
								"title": {
									"$": [
										"title"
									]
								},
								"slug": {
									"$": [
										"slug"
									]
								}
							},
							"includes": {
								"SLA": {
									"$": [
										"includes-SLA"
									]
								}
							}
						},
						"title": {
							"$": [
								"title"
							]
						},
						"slug": {
							"$": [
								"slug"
							]
						},
						"includes private support": {
							"$": [
								"includes private support"
							]
						},
						"includes": {
							"SLA": {
								"$": [
									"includes-SLA"
								]
							}
						},
						"is of": {
							"support feature": {
								"$": [
									"id",
									[
										"support feature",
										"support tier"
									]
								]
							}
						}
					},
					"billable component": {
						"has": {
							"slug": {
								"$": [
									"slug"
								]
							}
						},
						"billable component": {
							"has": {
								"slug": {
									"$": [
										"slug"
									]
								}
							}
						},
						"slug": {
							"$": [
								"slug"
							]
						}
					},
					"application type feature-is composed of-billable component": {
						"application type feature": {
							"$": [
								"application type feature",
								[
									"application type feature",
									"id"
								]
							]
						},
						"billable component": {
							"$": [
								"is composed of-billable component",
								[
									"billable component",
									"id"
								]
							]
						},
						"is composed of": {
							"billable component": {
								"$": [
									"is composed of-billable component",
									[
										"billable component",
										"id"
									]
								]
							}
						}
					},
					"application member feature-is composed of-billable component": {
						"application member feature": {
							"$": [
								"application member feature",
								[
									"application member feature",
									"id"
								]
							]
						},
						"billable component": {
							"$": [
								"is composed of-billable component",
								[
									"billable component",
									"id"
								]
							]
						},
						"is composed of": {
							"billable component": {
								"$": [
									"is composed of-billable component",
									[
										"billable component",
										"id"
									]
								]
							}
						}
					},
					"organization member feature-is composed of-billable component": {
						"organization member feature": {
							"$": [
								"organization member feature",
								[
									"organization member feature",
									"id"
								]
							]
						},
						"billable component": {
							"$": [
								"is composed of-billable component",
								[
									"billable component",
									"id"
								]
							]
						},
						"is composed of": {
							"billable component": {
								"$": [
									"is composed of-billable component",
									[
										"billable component",
										"id"
									]
								]
							}
						}
					},
					"oauth application": {
						"has": {
							"name": {
								"$": [
									"name"
								]
							},
							"secret": {
								"$": [
									"secret"
								]
							},
							"client id": {
								"$": [
									"client id"
								]
							},
							"redirect uri": {
								"$": [
									"redirect uri"
								]
							},
							"description": {
								"$": [
									"description"
								]
							},
							"oauth application authorization": {
								"$": [
									"id",
									[
										"oauth application authorization",
										"is for-oauth application"
									]
								]
							}
						},
						"oauth application": {
							"has": {
								"name": {
									"$": [
										"name"
									]
								},
								"secret": {
									"$": [
										"secret"
									]
								},
								"client id": {
									"$": [
										"client id"
									]
								},
								"redirect uri": {
									"$": [
										"redirect uri"
									]
								},
								"description": {
									"$": [
										"description"
									]
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"secret": {
							"$": [
								"secret"
							]
						},
						"client id": {
							"$": [
								"client id"
							]
						},
						"redirect uri": {
							"$": [
								"redirect uri"
							]
						},
						"description": {
							"$": [
								"description"
							]
						},
						"oauth application authorization": {
							"$": [
								"id",
								[
									"oauth application authorization",
									"is for-oauth application"
								]
							]
						}
					},
					"oauth application authorization": {
						"belongs to": {
							"user": {
								"$": [
									"belongs to-user",
									[
										"user",
										"id"
									]
								]
							}
						},
						"oauth application authorization": {
							"belongs to": {
								"user": {
									"$": [
										"id",
										[
											"oauth application authorization-belongs to-user",
											"oauth application authorization"
										]
									]
								}
							},
							"is for": {
								"oauth application": {
									"$": [
										"id",
										[
											"oauth application authorization-is for-oauth application",
											"oauth application authorization"
										]
									]
								}
							}
						},
						"is for": {
							"oauth application": {
								"$": [
									"is for-oauth application",
									[
										"oauth application",
										"id"
									]
								]
							}
						}
					},
					"plan-provides-feature": {
						"plan": {
							"$": [
								"plan",
								[
									"plan",
									"id"
								]
							],
							"provides": {
								"feature": {
									"has": {
										"quantity": {
											"$": [
												"quantity"
											]
										}
									}
								}
							}
						},
						"feature": {
							"$": [
								"provides-feature",
								[
									"feature",
									"id"
								]
							]
						},
						"provides": {
							"feature": {
								"$": [
									"provides-feature",
									[
										"feature",
										"id"
									]
								]
							}
						},
						"has": {
							"quantity": {
								"$": [
									"quantity"
								]
							}
						},
						"quantity": {
							"$": [
								"quantity"
							]
						}
					},
					"plan-offers-feature": {
						"plan": {
							"$": [
								"plan",
								[
									"plan",
									"id"
								]
							],
							"offers": {
								"feature": {
									"has": {
										"plan": {
											"$": [
												"id",
												[
													"plan-offers-feature-has-plan",
													"plan addon"
												]
											]
										},
										"base price": {
											"$": [
												"base price"
											]
										}
									}
								}
							}
						},
						"feature": {
							"$": [
								"offers-feature",
								[
									"feature",
									"id"
								]
							]
						},
						"offers": {
							"feature": {
								"$": [
									"offers-feature",
									[
										"feature",
										"id"
									]
								]
							}
						},
						"is offered by": {
							"plan": {
								"$": [
									"plan",
									[
										"plan",
										"id"
									]
								]
							}
						},
						"has": {
							"plan": {
								"$": [
									"plan",
									[
										"plan",
										"id"
									]
								]
							},
							"base price": {
								"$": [
									"base price"
								]
							},
							"subscription": {
								"discounts": {
									"plan": {
										"offers": {
											"feature": {
												"$": [
													"id",
													[
														"subscription-discounts-plan-offers-feature",
														"discounts-plan addon"
													]
												]
											}
										}
									}
								}
							}
						},
						"base price": {
							"$": [
								"base price"
							]
						},
						"can self serve": {
							"$": [
								"can self serve"
							]
						},
						"bills dynamically": {
							"$": [
								"bills dynamically"
							]
						},
						"subscription": {
							"discounts": {
								"plan": {
									"offers": {
										"feature": {
											"$": [
												"id",
												[
													"subscription-discounts-plan-offers-feature",
													"discounts-plan addon"
												]
											]
										}
									}
								}
							}
						}
					},
					"subscription": {
						"is for": {
							"plan": {
								"$": [
									"is for-plan",
									[
										"plan",
										"id"
									]
								]
							},
							"organization": {
								"$": [
									"is for-organization",
									[
										"organization",
										"id"
									]
								]
							}
						},
						"subscription": {
							"is for": {
								"plan": {
									"$": [
										"id",
										[
											"subscription-is for-plan",
											"subscription"
										]
									]
								},
								"organization": {
									"$": [
										"id",
										[
											"subscription-is for-organization",
											"subscription"
										]
									]
								}
							},
							"has": {
								"billing cycle": {
									"$": [
										"billing cycle"
									]
								},
								"discount percentage": {
									"$": [
										"discount percentage"
									]
								},
								"origin": {
									"$": [
										"origin"
									]
								},
								"internal note": {
									"$": [
										"internal note"
									]
								}
							},
							"starts on": {
								"date": {
									"$": [
										"starts on-date"
									]
								}
							},
							"ends on": {
								"date": {
									"$": [
										"ends on-date"
									]
								}
							},
							"bills base with": {
								"recurly id": {
									"$": [
										"bills base with-recurly id"
									]
								}
							},
							"bills addons with": {
								"recurly id": {
									"$": [
										"bills addons with-recurly id"
									]
								}
							},
							"is agreed upon on": {
								"date": {
									"$": [
										"is agreed upon on-date"
									]
								}
							},
							"is terminated on": {
								"date": {
									"$": [
										"is terminated on-date"
									]
								}
							},
							"is terminated with": {
								"reason": {
									"$": [
										"is terminated with-reason"
									]
								}
							},
							"expects first payment on": {
								"date": {
									"$": [
										"expects first payment on-date"
									]
								}
							},
							"discounts": {
								"plan": {
									"offers": {
										"feature": {
											"$": [
												"id",
												[
													"subscription-discounts-plan-offers-feature",
													"subscription"
												]
											]
										}
									}
								}
							}
						},
						"has": {
							"billing cycle": {
								"$": [
									"billing cycle"
								]
							},
							"discount percentage": {
								"$": [
									"discount percentage"
								]
							},
							"origin": {
								"$": [
									"origin"
								]
							},
							"internal note": {
								"$": [
									"internal note"
								]
							},
							"subscription": {
								"discounts": {
									"plan": {
										"offers": {
											"feature": {
												"$": [
													"id",
													[
														"subscription-discounts-plan-offers-feature",
														"subscription"
													]
												]
											}
										}
									}
								}
							},
							"subscription prepaid addon": {
								"$": [
									"id",
									[
										"subscription prepaid addon",
										"is for-subscription"
									]
								]
							}
						},
						"billing cycle": {
							"$": [
								"billing cycle"
							]
						},
						"starts on": {
							"date": {
								"$": [
									"starts on-date"
								]
							}
						},
						"ends on": {
							"date": {
								"$": [
									"ends on-date"
								]
							}
						},
						"discount percentage": {
							"$": [
								"discount percentage"
							]
						},
						"origin": {
							"$": [
								"origin"
							]
						},
						"bills base with": {
							"recurly id": {
								"$": [
									"bills base with-recurly id"
								]
							}
						},
						"bills addons with": {
							"recurly id": {
								"$": [
									"bills addons with-recurly id"
								]
							}
						},
						"is agreed upon on": {
							"date": {
								"$": [
									"is agreed upon on-date"
								]
							}
						},
						"is terminated on": {
							"date": {
								"$": [
									"is terminated on-date"
								]
							}
						},
						"is terminated with": {
							"reason": {
								"$": [
									"is terminated with-reason"
								]
							}
						},
						"expects first payment on": {
							"date": {
								"$": [
									"expects first payment on-date"
								]
							}
						},
						"internal note": {
							"$": [
								"internal note"
							]
						},
						"discounts": {
							"plan": {
								"offers": {
									"feature": {
										"$": [
											"id",
											[
												"subscription-discounts-plan-offers-feature",
												"subscription"
											]
										]
									}
								}
							}
						},
						"subscription prepaid addon": {
							"$": [
								"id",
								[
									"subscription prepaid addon",
									"is for-subscription"
								]
							]
						}
					},
					"subscription-discounts-plan-offers-feature": {
						"subscription": {
							"$": [
								"subscription",
								[
									"subscription",
									"id"
								]
							],
							"discounts": {
								"plan": {
									"offers": {
										"feature": {
											"has": {
												"discount percentage": {
													"$": [
														"discount percentage"
													]
												}
											}
										}
									}
								}
							}
						},
						"plan": {
							"offers": {
								"feature": {
									"$": [
										"discounts-plan addon",
										[
											"plan-offers-feature",
											"id"
										]
									]
								}
							}
						},
						"discounts": {
							"plan": {
								"offers": {
									"feature": {
										"$": [
											"discounts-plan addon",
											[
												"plan-offers-feature",
												"id"
											]
										]
									}
								}
							}
						},
						"has": {
							"discount percentage": {
								"$": [
									"discount percentage"
								]
							}
						},
						"discount percentage": {
							"$": [
								"discount percentage"
							]
						}
					},
					"subscription prepaid addon": {
						"is for": {
							"subscription": {
								"$": [
									"is for-subscription",
									[
										"subscription",
										"id"
									]
								]
							},
							"plan": {
								"offers": {
									"feature": {
										"$": [
											"is for-plan addon",
											[
												"plan-offers-feature",
												"id"
											]
										]
									}
								}
							}
						},
						"subscription prepaid addon": {
							"is for": {
								"subscription": {
									"$": [
										"id",
										[
											"subscription prepaid addon-is for-subscription",
											"subscription prepaid addon"
										]
									]
								},
								"plan": {
									"offers": {
										"feature": {
											"$": [
												"id",
												[
													"subscription prepaid addon-is for-plan-offers-feature",
													"subscription prepaid addon"
												]
											]
										}
									}
								}
							},
							"has": {
								"discount percentage": {
									"$": [
										"discount percentage"
									]
								},
								"quantity": {
									"$": [
										"quantity"
									]
								}
							},
							"starts on": {
								"date": {
									"$": [
										"starts on-date"
									]
								}
							},
							"expires on": {
								"date": {
									"$": [
										"expires on-date"
									]
								}
							}
						},
						"has": {
							"discount percentage": {
								"$": [
									"discount percentage"
								]
							},
							"quantity": {
								"$": [
									"quantity"
								]
							}
						},
						"discount percentage": {
							"$": [
								"discount percentage"
							]
						},
						"quantity": {
							"$": [
								"quantity"
							]
						},
						"starts on": {
							"date": {
								"$": [
									"starts on-date"
								]
							}
						},
						"expires on": {
							"date": {
								"$": [
									"expires on-date"
								]
							}
						}
					},
					"recovery two factor": {
						"has": {
							"recovery code": {
								"$": [
									"recovery code"
								]
							},
							"used timestamp": {
								"$": [
									"used timestamp"
								]
							}
						},
						"recovery two factor": {
							"has": {
								"recovery code": {
									"$": [
										"recovery code"
									]
								},
								"used timestamp": {
									"$": [
										"used timestamp"
									]
								}
							},
							"belongs to": {
								"user": {
									"$": [
										"id",
										[
											"recovery two factor-belongs to-user",
											"recovery two factor"
										]
									]
								}
							}
						},
						"recovery code": {
							"$": [
								"recovery code"
							]
						},
						"used timestamp": {
							"$": [
								"used timestamp"
							]
						},
						"belongs to": {
							"user": {
								"$": [
									"belongs to-user",
									[
										"user",
										"id"
									]
								]
							}
						}
					},
					"delta": {
						"originates from": {
							"image": {
								"$": [
									"originates from-image",
									[
										"image",
										"id"
									]
								]
							}
						},
						"delta": {
							"originates from": {
								"image": {
									"$": [
										"id",
										[
											"delta-originates from-image",
											"delta"
										]
									]
								}
							},
							"produces": {
								"image": {
									"$": [
										"id",
										[
											"delta-produces-image",
											"delta"
										]
									]
								}
							},
							"has": {
								"version": {
									"$": [
										"version"
									]
								},
								"status": {
									"$": [
										"status"
									]
								},
								"error message": {
									"$": [
										"error message"
									]
								},
								"size": {
									"$": [
										"size"
									]
								},
								"update timestamp": {
									"$": [
										"update timestamp"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								}
							},
							"is stored at": {
								"location": {
									"$": [
										"is stored at-location"
									]
								}
							}
						},
						"produces": {
							"image": {
								"$": [
									"produces-image",
									[
										"image",
										"id"
									]
								]
							}
						},
						"has": {
							"version": {
								"$": [
									"version"
								]
							},
							"status": {
								"$": [
									"status"
								]
							},
							"error message": {
								"$": [
									"error message"
								]
							},
							"size": {
								"$": [
									"size"
								]
							},
							"update timestamp": {
								"$": [
									"update timestamp"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							}
						},
						"version": {
							"$": [
								"version"
							]
						},
						"status": {
							"$": [
								"status"
							]
						},
						"error message": {
							"$": [
								"error message"
							]
						},
						"is stored at": {
							"location": {
								"$": [
									"is stored at-location"
								]
							}
						},
						"size": {
							"$": [
								"size"
							]
						},
						"update timestamp": {
							"$": [
								"update timestamp"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						}
					},
					"overage report": {
						"has": {
							"organization id": {
								"$": [
									"organization id"
								]
							},
							"billing code": {
								"$": [
									"billing code"
								]
							},
							"unit cost": {
								"$": [
									"unit cost"
								]
							},
							"quantity": {
								"$": [
									"quantity"
								]
							}
						},
						"overage report": {
							"has": {
								"organization id": {
									"$": [
										"organization id"
									]
								},
								"billing code": {
									"$": [
										"billing code"
									]
								},
								"unit cost": {
									"$": [
										"unit cost"
									]
								},
								"quantity": {
									"$": [
										"quantity"
									]
								}
							}
						},
						"organization id": {
							"$": [
								"organization id"
							]
						},
						"billing code": {
							"$": [
								"billing code"
							]
						},
						"unit cost": {
							"$": [
								"unit cost"
							]
						},
						"quantity": {
							"$": [
								"quantity"
							]
						}
					},
					"actor id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"organization membership id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"team application access id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"team id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"team membership id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"user id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"user is member of application id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"device history": {
						"has": {
							"device id": {
								"$": [
									"device id"
								]
							},
							"actor id": {
								"$": [
									"actor id"
								]
							},
							"uuid": {
								"$": [
									"uuid"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							},
							"api heartbeat state": {
								"$": [
									"api heartbeat state"
								]
							},
							"os version": {
								"$": [
									"os version"
								]
							},
							"os variant": {
								"$": [
									"os variant"
								]
							},
							"supervisor version": {
								"$": [
									"supervisor version"
								]
							}
						},
						"device history": {
							"has": {
								"device id": {
									"$": [
										"device id"
									]
								},
								"actor id": {
									"$": [
										"actor id"
									]
								},
								"uuid": {
									"$": [
										"uuid"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								},
								"api heartbeat state": {
									"$": [
										"api heartbeat state"
									]
								},
								"os version": {
									"$": [
										"os version"
									]
								},
								"os variant": {
									"$": [
										"os variant"
									]
								},
								"supervisor version": {
									"$": [
										"supervisor version"
									]
								}
							},
							"belongs to": {
								"application id": {
									"$": [
										"belongs to-application id"
									]
								}
							},
							"is running": {
								"release id": {
									"$": [
										"is running-release id"
									]
								}
							},
							"should be running": {
								"release id": {
									"$": [
										"should be running-release id"
									]
								}
							},
							"is managed by": {
								"service instance": {
									"$": [
										"id",
										[
											"device history-is managed by-service instance",
											"device history"
										]
									]
								}
							},
							"is of": {
								"device type": {
									"$": [
										"id",
										[
											"device history-is of-device type",
											"device history"
										]
									]
								}
							}
						},
						"device id": {
							"$": [
								"device id"
							]
						},
						"actor id": {
							"$": [
								"actor id"
							]
						},
						"uuid": {
							"$": [
								"uuid"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						},
						"belongs to": {
							"application id": {
								"$": [
									"belongs to-application id"
								]
							}
						},
						"is active": {
							"$": [
								"is active"
							]
						},
						"is running": {
							"release id": {
								"$": [
									"is running-release id"
								]
							}
						},
						"should be running": {
							"release id": {
								"$": [
									"should be running-release id"
								]
							}
						},
						"api heartbeat state": {
							"$": [
								"api heartbeat state"
							]
						},
						"is connected to vpn": {
							"$": [
								"is connected to vpn"
							]
						},
						"is managed by": {
							"service instance": {
								"$": [
									"is managed by-service instance",
									[
										"service instance",
										"id"
									]
								]
							}
						},
						"os version": {
							"$": [
								"os version"
							]
						},
						"os variant": {
							"$": [
								"os variant"
							]
						},
						"supervisor version": {
							"$": [
								"supervisor version"
							]
						},
						"is of": {
							"device type": {
								"$": [
									"is of-device type",
									[
										"device type",
										"id"
									]
								]
							}
						}
					},
					"application history": {
						"has": {
							"application id": {
								"$": [
									"application id"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							},
							"application type": {
								"$": [
									"application type",
									[
										"application type",
										"id"
									]
								]
							},
							"organization id": {
								"$": [
									"organization id"
								]
							},
							"should be running release id": {
								"$": [
									"should be running release id"
								]
							}
						},
						"application history": {
							"has": {
								"application id": {
									"$": [
										"application id"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								},
								"application type": {
									"$": [
										"id",
										[
											"application history-has-application type",
											"application history"
										]
									]
								},
								"organization id": {
									"$": [
										"organization id"
									]
								},
								"should be running release id": {
									"$": [
										"should be running release id"
									]
								}
							},
							"is of": {
								"class": {
									"$": [
										"is of-class"
									]
								}
							},
							"is stored at": {
								"repository url": {
									"$": [
										"is stored at-repository url"
									]
								}
							}
						},
						"application id": {
							"$": [
								"application id"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						},
						"application type": {
							"$": [
								"application type",
								[
									"application type",
									"id"
								]
							]
						},
						"is host": {
							"$": [
								"is host"
							]
						},
						"is public": {
							"$": [
								"is public"
							]
						},
						"is discoverable": {
							"$": [
								"is discoverable"
							]
						},
						"is archived": {
							"$": [
								"is archived"
							]
						},
						"is of": {
							"class": {
								"$": [
									"is of-class"
								]
							}
						},
						"organization id": {
							"$": [
								"organization id"
							]
						},
						"should be running release id": {
							"$": [
								"should be running release id"
							]
						},
						"is stored at": {
							"repository url": {
								"$": [
									"is stored at-repository url"
								]
							}
						}
					},
					"should be running release id": {
						"Integer": {
							"$": [
								"Integer"
							]
						},
						"has": {
							"Integer": {
								"$": [
									"Integer"
								]
							}
						}
					},
					"release history": {
						"has": {
							"commit": {
								"$": [
									"commit"
								]
							},
							"status": {
								"$": [
									"status"
								]
							},
							"source": {
								"$": [
									"source"
								]
							},
							"build start timestamp": {
								"$": [
									"build start timestamp"
								]
							},
							"build end timestamp": {
								"$": [
									"build end timestamp"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							},
							"contract": {
								"$": [
									"contract"
								]
							},
							"release id": {
								"$": [
									"release id"
								]
							},
							"release version": {
								"$": [
									"release version"
								]
							}
						},
						"release history": {
							"has": {
								"commit": {
									"$": [
										"commit"
									]
								},
								"status": {
									"$": [
										"status"
									]
								},
								"source": {
									"$": [
										"source"
									]
								},
								"build start timestamp": {
									"$": [
										"build start timestamp"
									]
								},
								"build end timestamp": {
									"$": [
										"build end timestamp"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								},
								"contract": {
									"$": [
										"contract"
									]
								},
								"release id": {
									"$": [
										"release id"
									]
								},
								"release version": {
									"$": [
										"release version"
									]
								}
							},
							"belongs to": {
								"application id": {
									"$": [
										"belongs to-application id"
									]
								}
							},
							"is created by": {
								"user id": {
									"$": [
										"is created by-user id"
									]
								}
							}
						},
						"commit": {
							"$": [
								"commit"
							]
						},
						"status": {
							"$": [
								"status"
							]
						},
						"source": {
							"$": [
								"source"
							]
						},
						"build start timestamp": {
							"$": [
								"build start timestamp"
							]
						},
						"build end timestamp": {
							"$": [
								"build end timestamp"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						},
						"contract": {
							"$": [
								"contract"
							]
						},
						"release id": {
							"$": [
								"release id"
							]
						},
						"belongs to": {
							"application id": {
								"$": [
									"belongs to-application id"
								]
							}
						},
						"is created by": {
							"user id": {
								"$": [
									"is created by-user id"
								]
							}
						},
						"is invalidated": {
							"$": [
								"is invalidated"
							]
						},
						"release version": {
							"$": [
								"release version"
							]
						}
					},
					"organization history": {
						"has": {
							"organization id": {
								"$": [
									"organization id"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							},
							"billing account code": {
								"$": [
									"billing account code"
								]
							}
						},
						"organization history": {
							"has": {
								"organization id": {
									"$": [
										"organization id"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								},
								"billing account code": {
									"$": [
										"billing account code"
									]
								}
							}
						},
						"organization id": {
							"$": [
								"organization id"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						},
						"billing account code": {
							"$": [
								"billing account code"
							]
						}
					},
					"organization membership history": {
						"has": {
							"organization membership id": {
								"$": [
									"organization membership id"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							},
							"organization id": {
								"$": [
									"organization id"
								]
							},
							"user id": {
								"$": [
									"user id"
								]
							},
							"organization membership role": {
								"$": [
									"organization membership role",
									[
										"organization membership role",
										"id"
									]
								]
							},
							"effective seat role": {
								"$": [
									"effective seat role"
								]
							}
						},
						"organization membership history": {
							"has": {
								"organization membership id": {
									"$": [
										"organization membership id"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								},
								"organization id": {
									"$": [
										"organization id"
									]
								},
								"user id": {
									"$": [
										"user id"
									]
								},
								"organization membership role": {
									"$": [
										"id",
										[
											"organization membership history-has-organization membership role",
											"organization membership history"
										]
									]
								},
								"effective seat role": {
									"$": [
										"effective seat role"
									]
								}
							}
						},
						"organization membership id": {
							"$": [
								"organization membership id"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						},
						"organization id": {
							"$": [
								"organization id"
							]
						},
						"user id": {
							"$": [
								"user id"
							]
						},
						"organization membership role": {
							"$": [
								"organization membership role",
								[
									"organization membership role",
									"id"
								]
							]
						},
						"effective seat role": {
							"$": [
								"effective seat role"
							]
						}
					},
					"user is member of application history": {
						"has": {
							"user is member of application id": {
								"$": [
									"user is member of application id"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							},
							"user id": {
								"$": [
									"user id"
								]
							},
							"application membership role": {
								"$": [
									"application membership role",
									[
										"application membership role",
										"id"
									]
								]
							}
						},
						"user is member of application history": {
							"has": {
								"user is member of application id": {
									"$": [
										"user is member of application id"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								},
								"user id": {
									"$": [
										"user id"
									]
								},
								"application membership role": {
									"$": [
										"id",
										[
											"user is member of application history-has-application membership role",
											"user is member of application history"
										]
									]
								}
							},
							"is member of": {
								"application id": {
									"$": [
										"is member of-application id"
									]
								}
							}
						},
						"user is member of application id": {
							"$": [
								"user is member of application id"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						},
						"is member of": {
							"application id": {
								"$": [
									"is member of-application id"
								]
							}
						},
						"user id": {
							"$": [
								"user id"
							]
						},
						"application membership role": {
							"$": [
								"application membership role",
								[
									"application membership role",
									"id"
								]
							]
						}
					},
					"team history": {
						"has": {
							"team id": {
								"$": [
									"team id"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							},
							"name": {
								"$": [
									"name"
								]
							},
							"organization id": {
								"$": [
									"organization id"
								]
							}
						},
						"team history": {
							"has": {
								"team id": {
									"$": [
										"team id"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								},
								"name": {
									"$": [
										"name"
									]
								},
								"organization id": {
									"$": [
										"organization id"
									]
								}
							}
						},
						"team id": {
							"$": [
								"team id"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						},
						"name": {
							"$": [
								"name"
							]
						},
						"organization id": {
							"$": [
								"organization id"
							]
						}
					},
					"team membership history": {
						"has": {
							"team membership id": {
								"$": [
									"team membership id"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							},
							"team id": {
								"$": [
									"team id"
								]
							},
							"user id": {
								"$": [
									"user id"
								]
							}
						},
						"team membership history": {
							"has": {
								"team membership id": {
									"$": [
										"team membership id"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								},
								"team id": {
									"$": [
										"team id"
									]
								},
								"user id": {
									"$": [
										"user id"
									]
								}
							}
						},
						"team membership id": {
							"$": [
								"team membership id"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						},
						"team id": {
							"$": [
								"team id"
							]
						},
						"user id": {
							"$": [
								"user id"
							]
						}
					},
					"team application access history": {
						"has": {
							"team application access id": {
								"$": [
									"team application access id"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							},
							"application id": {
								"$": [
									"application id"
								]
							},
							"team id": {
								"$": [
									"team id"
								]
							},
							"application membership role": {
								"$": [
									"application membership role",
									[
										"application membership role",
										"id"
									]
								]
							}
						},
						"team application access history": {
							"has": {
								"team application access id": {
									"$": [
										"team application access id"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								},
								"application id": {
									"$": [
										"application id"
									]
								},
								"team id": {
									"$": [
										"team id"
									]
								},
								"application membership role": {
									"$": [
										"id",
										[
											"team application access history-has-application membership role",
											"team application access history"
										]
									]
								}
							}
						},
						"team application access id": {
							"$": [
								"team application access id"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						},
						"application id": {
							"$": [
								"application id"
							]
						},
						"team id": {
							"$": [
								"team id"
							]
						},
						"application membership role": {
							"$": [
								"application membership role",
								[
									"application membership role",
									"id"
								]
							]
						}
					},
					"user history": {
						"has": {
							"user id": {
								"$": [
									"user id"
								]
							},
							"end timestamp": {
								"$": [
									"end timestamp"
								]
							},
							"account type": {
								"$": [
									"account type"
								]
							}
						},
						"user history": {
							"has": {
								"user id": {
									"$": [
										"user id"
									]
								},
								"end timestamp": {
									"$": [
										"end timestamp"
									]
								},
								"account type": {
									"$": [
										"account type"
									]
								}
							}
						},
						"user id": {
							"$": [
								"user id"
							]
						},
						"end timestamp": {
							"$": [
								"end timestamp"
							]
						},
						"account type": {
							"$": [
								"account type"
							]
						},
						"is two factor protected": {
							"$": [
								"is two factor protected"
							]
						},
						"is verified": {
							"$": [
								"is verified"
							]
						},
						"has been sent verification email": {
							"$": [
								"has been sent verification email"
							]
						},
						"must be verified": {
							"$": [
								"must be verified"
							]
						},
						"has disabled newsletter": {
							"$": [
								"has disabled newsletter"
							]
						}
					},
					"application-can use-application as host": {
						"application": {
							"$": [
								"application",
								[
									"application",
									"id"
								]
							]
						},
						"has": {
							"application": {
								"$": [
									"application",
									[
										"application",
										"id"
									]
								]
							},
							"can use": {
								"application as host": {
									"$": [
										"can use-application as host",
										[
											"application",
											"id"
										]
									]
								}
							}
						},
						"can use": {
							"application as host": {
								"$": [
									"can use-application as host",
									[
										"application",
										"id"
									]
								]
							}
						}
					},
					"user-has direct access to-application": {
						"user": {
							"$": [
								"user",
								[
									"user",
									"id"
								]
							]
						},
						"application": {
							"$": [
								"has direct access to-application",
								[
									"application",
									"id"
								]
							]
						},
						"has direct access to": {
							"application": {
								"$": [
									"has direct access to-application",
									[
										"application",
										"id"
									]
								]
							}
						},
						"is directly accessible by": {
							"user": {
								"$": [
									"user",
									[
										"user",
										"id"
									]
								]
							}
						}
					},
					"public organization": {
						"has": {
							"name": {
								"$": [
									"name"
								]
							},
							"handle": {
								"$": [
									"handle"
								]
							},
							"application": {
								"$": [
									"id",
									[
										"application",
										"public organization"
									]
								]
							}
						},
						"public organization": {
							"has": {
								"name": {
									"$": [
										"name"
									]
								},
								"handle": {
									"$": [
										"handle"
									]
								}
							}
						},
						"name": {
							"$": [
								"name"
							]
						},
						"handle": {
							"$": [
								"handle"
							]
						},
						"application": {
							"$": [
								"id",
								[
									"application",
									"public organization"
								]
							]
						}
					},
					"public device": {
						"actor": {
							"$": [
								"actor",
								[
									"actor",
									"id"
								]
							]
						},
						"has": {
							"actor": {
								"$": [
									"actor",
									[
										"actor",
										"id"
									]
								]
							},
							"api heartbeat state": {
								"$": [
									"api heartbeat state"
								]
							},
							"env var name": {
								"$": [
									"id",
									[
										"device-has-env var name",
										"device"
									]
								]
							},
							"device": {
								"has": {
									"env var name": {
										"$": [
											"id",
											[
												"device-has-env var name",
												"device"
											]
										]
									},
									"name": {
										"$": [
											"id",
											[
												"device-has-name",
												"device"
											]
										]
									},
									"tag key": {
										"$": [
											"id",
											[
												"device-has-tag key",
												"device"
											]
										]
									},
									"fqdn": {
										"$": [
											"id",
											[
												"device-has-fqdn",
												"device"
											]
										]
									}
								},
								"installs": {
									"image": {
										"$": [
											"id",
											[
												"device-installs-image",
												"device"
											]
										]
									},
									"application": {
										"has": {
											"service name": {
												"$": [
													"id",
													[
														"device-installs-application-has-service name",
														"device"
													]
												]
											}
										}
									}
								}
							},
							"name": {
								"$": [
									"id",
									[
										"device-has-name",
										"device"
									]
								]
							},
							"tag key": {
								"$": [
									"id",
									[
										"device-has-tag key",
										"device"
									]
								]
							},
							"image": {
								"is downloaded by": {
									"device": {
										"$": [
											"id",
											[
												"image-is downloaded by-device",
												"is downloaded by-device"
											]
										]
									}
								}
							},
							"uuid": {
								"$": [
									"uuid"
								]
							},
							"local id": {
								"$": [
									"local id"
								]
							},
							"device name": {
								"$": [
									"device name"
								]
							},
							"note": {
								"$": [
									"note"
								]
							},
							"last connectivity event": {
								"$": [
									"last connectivity event"
								]
							},
							"last vpn event": {
								"$": [
									"last vpn event"
								]
							},
							"logs channel": {
								"$": [
									"logs channel"
								]
							},
							"public address": {
								"$": [
									"public address"
								]
							},
							"vpn address": {
								"$": [
									"vpn address"
								]
							},
							"ip address": {
								"$": [
									"ip address"
								]
							},
							"mac address": {
								"$": [
									"mac address"
								]
							},
							"memory usage": {
								"$": [
									"memory usage"
								]
							},
							"memory total": {
								"$": [
									"memory total"
								]
							},
							"storage block device": {
								"$": [
									"storage block device"
								]
							},
							"storage usage": {
								"$": [
									"storage usage"
								]
							},
							"storage total": {
								"$": [
									"storage total"
								]
							},
							"cpu usage": {
								"$": [
									"cpu usage"
								]
							},
							"cpu temp": {
								"$": [
									"cpu temp"
								]
							},
							"cpu id": {
								"$": [
									"cpu id"
								]
							},
							"download progress": {
								"$": [
									"download progress"
								]
							},
							"status": {
								"$": [
									"status"
								]
							},
							"os version": {
								"$": [
									"os version"
								]
							},
							"os variant": {
								"$": [
									"os variant"
								]
							},
							"supervisor version": {
								"$": [
									"supervisor version"
								]
							},
							"provisioning progress": {
								"$": [
									"provisioning progress"
								]
							},
							"provisioning state": {
								"$": [
									"provisioning state"
								]
							},
							"api port": {
								"$": [
									"api port"
								]
							},
							"api secret": {
								"$": [
									"api secret"
								]
							},
							"fqdn": {
								"$": [
									"id",
									[
										"device-has-fqdn",
										"device"
									]
								]
							},
							"latitude": {
								"$": [
									"latitude"
								]
							},
							"longitude": {
								"$": [
									"longitude"
								]
							},
							"custom latitude": {
								"$": [
									"custom latitude"
								]
							},
							"custom longitude": {
								"$": [
									"custom longitude"
								]
							},
							"location": {
								"$": [
									"location"
								]
							}
						},
						"device": {
							"has": {
								"api heartbeat state": {
									"$": [
										"api heartbeat state"
									]
								},
								"env var name": {
									"$": [
										"id",
										[
											"device-has-env var name",
											"device"
										]
									]
								},
								"name": {
									"$": [
										"id",
										[
											"device-has-name",
											"device"
										]
									]
								},
								"tag key": {
									"$": [
										"id",
										[
											"device-has-tag key",
											"device"
										]
									]
								},
								"uuid": {
									"$": [
										"uuid"
									]
								},
								"local id": {
									"$": [
										"local id"
									]
								},
								"device name": {
									"$": [
										"device name"
									]
								},
								"note": {
									"$": [
										"note"
									]
								},
								"last connectivity event": {
									"$": [
										"last connectivity event"
									]
								},
								"last vpn event": {
									"$": [
										"last vpn event"
									]
								},
								"logs channel": {
									"$": [
										"logs channel"
									]
								},
								"public address": {
									"$": [
										"public address"
									]
								},
								"vpn address": {
									"$": [
										"vpn address"
									]
								},
								"ip address": {
									"$": [
										"ip address"
									]
								},
								"mac address": {
									"$": [
										"mac address"
									]
								},
								"memory usage": {
									"$": [
										"memory usage"
									]
								},
								"memory total": {
									"$": [
										"memory total"
									]
								},
								"storage block device": {
									"$": [
										"storage block device"
									]
								},
								"storage usage": {
									"$": [
										"storage usage"
									]
								},
								"storage total": {
									"$": [
										"storage total"
									]
								},
								"cpu usage": {
									"$": [
										"cpu usage"
									]
								},
								"cpu temp": {
									"$": [
										"cpu temp"
									]
								},
								"cpu id": {
									"$": [
										"cpu id"
									]
								},
								"download progress": {
									"$": [
										"download progress"
									]
								},
								"status": {
									"$": [
										"status"
									]
								},
								"os version": {
									"$": [
										"os version"
									]
								},
								"os variant": {
									"$": [
										"os variant"
									]
								},
								"supervisor version": {
									"$": [
										"supervisor version"
									]
								},
								"provisioning progress": {
									"$": [
										"provisioning progress"
									]
								},
								"provisioning state": {
									"$": [
										"provisioning state"
									]
								},
								"api port": {
									"$": [
										"api port"
									]
								},
								"api secret": {
									"$": [
										"api secret"
									]
								},
								"fqdn": {
									"$": [
										"id",
										[
											"device-has-fqdn",
											"device"
										]
									]
								},
								"latitude": {
									"$": [
										"latitude"
									]
								},
								"longitude": {
									"$": [
										"longitude"
									]
								},
								"custom latitude": {
									"$": [
										"custom latitude"
									]
								},
								"custom longitude": {
									"$": [
										"custom longitude"
									]
								},
								"location": {
									"$": [
										"location"
									]
								}
							},
							"installs": {
								"image": {
									"$": [
										"id",
										[
											"device-installs-image",
											"device"
										]
									]
								},
								"application": {
									"has": {
										"service name": {
											"$": [
												"id",
												[
													"device-installs-application-has-service name",
													"device"
												]
											]
										}
									}
								}
							},
							"is of": {
								"device type": {
									"$": [
										"id",
										[
											"device-is of-device type",
											"device"
										]
									]
								}
							},
							"belongs to": {
								"application": {
									"$": [
										"id",
										[
											"device-belongs to-application",
											"device"
										]
									]
								},
								"user": {
									"$": [
										"id",
										[
											"device-belongs to-user",
											"device"
										]
									]
								}
							},
							"is locked until": {
								"date": {
									"$": [
										"is locked until-date"
									]
								}
							},
							"is running": {
								"release": {
									"$": [
										"id",
										[
											"device-is running-release",
											"device"
										]
									]
								}
							},
							"is managed by": {
								"service instance": {
									"$": [
										"id",
										[
											"device-is managed by-service instance",
											"device"
										]
									]
								},
								"device": {
									"$": [
										"id",
										[
											"device-is managed by-device",
											"device"
										]
									]
								}
							},
							"should be running": {
								"release": {
									"$": [
										"id",
										[
											"device-should be running-release",
											"device"
										]
									]
								}
							},
							"should be operated by": {
								"release": {
									"$": [
										"id",
										[
											"device-should be operated by-release",
											"device"
										]
									]
								}
							},
							"should be managed by": {
								"release": {
									"$": [
										"id",
										[
											"device-should be managed by-release",
											"device"
										]
									]
								}
							},
							"is accessible by support until": {
								"date": {
									"$": [
										"is accessible by support until-date"
									]
								}
							}
						},
						"api heartbeat state": {
							"$": [
								"api heartbeat state"
							]
						},
						"installs": {
							"image": {
								"$": [
									"id",
									[
										"device-installs-image",
										"device"
									]
								]
							},
							"application": {
								"has": {
									"service name": {
										"$": [
											"id",
											[
												"device-installs-application-has-service name",
												"device"
											]
										]
									}
								}
							}
						},
						"image": {
							"is downloaded by": {
								"device": {
									"$": [
										"id",
										[
											"image-is downloaded by-device",
											"is downloaded by-device"
										]
									]
								}
							}
						},
						"downloads": {
							"image": {
								"$": [
									"id",
									[
										"image-is downloaded by-device",
										"is downloaded by-device"
									]
								]
							}
						},
						"uuid": {
							"$": [
								"uuid"
							]
						},
						"local id": {
							"$": [
								"local id"
							]
						},
						"device name": {
							"$": [
								"device name"
							]
						},
						"note": {
							"$": [
								"note"
							]
						},
						"is of": {
							"device type": {
								"$": [
									"is of-device type",
									[
										"device type",
										"id"
									]
								]
							}
						},
						"belongs to": {
							"application": {
								"$": [
									"belongs to-application",
									[
										"application",
										"id"
									]
								]
							},
							"user": {
								"$": [
									"belongs to-user",
									[
										"user",
										"id"
									]
								]
							}
						},
						"is online": {
							"$": [
								"is online"
							]
						},
						"last connectivity event": {
							"$": [
								"last connectivity event"
							]
						},
						"is connected to vpn": {
							"$": [
								"is connected to vpn"
							]
						},
						"last vpn event": {
							"$": [
								"last vpn event"
							]
						},
						"is locked until": {
							"date": {
								"$": [
									"is locked until-date"
								]
							}
						},
						"logs channel": {
							"$": [
								"logs channel"
							]
						},
						"public address": {
							"$": [
								"public address"
							]
						},
						"vpn address": {
							"$": [
								"vpn address"
							]
						},
						"ip address": {
							"$": [
								"ip address"
							]
						},
						"mac address": {
							"$": [
								"mac address"
							]
						},
						"memory usage": {
							"$": [
								"memory usage"
							]
						},
						"memory total": {
							"$": [
								"memory total"
							]
						},
						"storage block device": {
							"$": [
								"storage block device"
							]
						},
						"storage usage": {
							"$": [
								"storage usage"
							]
						},
						"storage total": {
							"$": [
								"storage total"
							]
						},
						"cpu usage": {
							"$": [
								"cpu usage"
							]
						},
						"cpu temp": {
							"$": [
								"cpu temp"
							]
						},
						"is undervolted": {
							"$": [
								"is undervolted"
							]
						},
						"cpu id": {
							"$": [
								"cpu id"
							]
						},
						"is running": {
							"release": {
								"$": [
									"is running-release",
									[
										"release",
										"id"
									]
								]
							}
						},
						"download progress": {
							"$": [
								"download progress"
							]
						},
						"status": {
							"$": [
								"status"
							]
						},
						"os version": {
							"$": [
								"os version"
							]
						},
						"os variant": {
							"$": [
								"os variant"
							]
						},
						"supervisor version": {
							"$": [
								"supervisor version"
							]
						},
						"provisioning progress": {
							"$": [
								"provisioning progress"
							]
						},
						"provisioning state": {
							"$": [
								"provisioning state"
							]
						},
						"api port": {
							"$": [
								"api port"
							]
						},
						"api secret": {
							"$": [
								"api secret"
							]
						},
						"is managed by": {
							"service instance": {
								"$": [
									"is managed by-service instance",
									[
										"service instance",
										"id"
									]
								]
							},
							"device": {
								"$": [
									"is managed by-device",
									[
										"device",
										"id"
									]
								]
							}
						},
						"should be running": {
							"release": {
								"$": [
									"should be running-release",
									[
										"release",
										"id"
									]
								]
							}
						},
						"should be operated by": {
							"release": {
								"$": [
									"should be operated by-release",
									[
										"release",
										"id"
									]
								]
							}
						},
						"manages": {
							"device": {
								"$": [
									"id",
									[
										"device",
										"is managed by-device"
									]
								]
							}
						},
						"should be managed by": {
							"release": {
								"$": [
									"should be managed by-release",
									[
										"release",
										"id"
									]
								]
							}
						},
						"latitude": {
							"$": [
								"latitude"
							]
						},
						"longitude": {
							"$": [
								"longitude"
							]
						},
						"custom latitude": {
							"$": [
								"custom latitude"
							]
						},
						"custom longitude": {
							"$": [
								"custom longitude"
							]
						},
						"location": {
							"$": [
								"location"
							]
						},
						"is accessible by support until": {
							"date": {
								"$": [
									"is accessible by support until-date"
								]
							}
						},
						"is web accessible": {
							"$": [
								"is web accessible"
							]
						},
						"is active": {
							"$": [
								"is active"
							]
						},
						"public device": {
							"belongs to": {
								"application": {
									"$": [
										"id",
										[
											"public device-belongs to-application",
											"public device"
										]
									]
								}
							}
						}
					}
				},
				"rules": [
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"device"
											],
											"device.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"device"
											],
											"device.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device.0",
													"is managed by-device"
												],
												[
													"ReferencedField",
													"device.1",
													"id"
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application"
															],
															"application.2"
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application"
															],
															"application.3"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"device.1",
																	"belongs to-application"
																],
																[
																	"ReferencedField",
																	"application.3",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.2",
																	"depends on-application"
																],
																[
																	"ReferencedField",
																	"application.3",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"device.0",
																	"belongs to-application"
																],
																[
																	"ReferencedField",
																	"application.2",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each device1 that is managed by a device2, belongs to an application1 that depends on an application2 that owns the device2."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"release"
											],
											"release.0"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Exists",
												[
													"ReferencedField",
													"release.0",
													"release version"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"release.0",
													"status"
												],
												[
													"Text",
													"success"
												]
											],
											[
												"Exists",
												[
													"ReferencedField",
													"release.0",
													"status"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"release.0",
													"is invalidated"
												],
												[
													"Boolean",
													false
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application"
															],
															"application.3"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"SelectQuery",
																	[
																		"Select",
																		[
																			[
																				"Count",
																				"*"
																			]
																		]
																	],
																	[
																		"From",
																		[
																			"Alias",
																			[
																				"Table",
																				"release"
																			],
																			"release.4"
																		]
																	],
																	[
																		"Where",
																		[
																			"And",
																			[
																				"Equals",
																				[
																					"ReferencedField",
																					"release.4",
																					"release version"
																				],
																				[
																					"ReferencedField",
																					"release.0",
																					"release version"
																				]
																			],
																			[
																				"Exists",
																				[
																					"ReferencedField",
																					"release.4",
																					"release version"
																				]
																			],
																			[
																				"Equals",
																				[
																					"ReferencedField",
																					"release.4",
																					"status"
																				],
																				[
																					"Text",
																					"success"
																				]
																			],
																			[
																				"Exists",
																				[
																					"ReferencedField",
																					"release.4",
																					"status"
																				]
																			],
																			[
																				"Equals",
																				[
																					"ReferencedField",
																					"release.4",
																					"is invalidated"
																				],
																				[
																					"Boolean",
																					false
																				]
																			],
																			[
																				"Equals",
																				[
																					"ReferencedField",
																					"release.4",
																					"belongs to-application"
																				],
																				[
																					"ReferencedField",
																					"application.3",
																					"id"
																				]
																			]
																		]
																	]
																],
																[
																	"Number",
																	1
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.0",
																	"belongs to-application"
																],
																[
																	"ReferencedField",
																	"application.3",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each release that has a release version1 and has a status that is equal to \"success\" and is not invalidated, belongs to an application that owns exactly one release that has a release version2 that is equal to the release version1 and has a status that is equal to \"success\" and is not invalidated."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"application"
											],
											"application.0"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"application.0",
													"is public"
												],
												[
													"Boolean",
													true
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application type"
															],
															"application type.1"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application type.1",
																	"is legacy"
																],
																[
																	"Boolean",
																	false
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.0",
																	"application type"
																],
																[
																	"ReferencedField",
																	"application type.1",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each application that is public, has an application type that is not legacy."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"application"
											],
											"application.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"release"
											],
											"release.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"release.1",
													"status"
												],
												[
													"Text",
													"success"
												]
											],
											[
												"Exists",
												[
													"ReferencedField",
													"release.1",
													"status"
												]
											],
											[
												"Exists",
												[
													"ReferencedField",
													"release.1",
													"commit"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"release.1",
													"belongs to-application"
												],
												[
													"ReferencedField",
													"application.0",
													"id"
												]
											],
											[
												"GreaterThanOrEqual",
												[
													"SelectQuery",
													[
														"Select",
														[
															[
																"Count",
																"*"
															]
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"release"
															],
															"release.4"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.4",
																	"status"
																],
																[
																	"Text",
																	"success"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"release.4",
																	"status"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.4",
																	"commit"
																],
																[
																	"ReferencedField",
																	"release.1",
																	"commit"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"release.4",
																	"commit"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.4",
																	"belongs to-application"
																],
																[
																	"ReferencedField",
																	"application.0",
																	"id"
																]
															]
														]
													]
												],
												[
													"Number",
													2
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each application that owns a release1 that has a status that is equal to \"success\" and has a commit1, owns at most one release2 that has a status that is equal to \"success\" and has a commit2 that is equal to the commit1."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"application"
											],
											"application.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"release"
											],
											"release.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Exists",
												[
													"ReferencedField",
													"release.1",
													"revision"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"release.1",
													"belongs to-application"
												],
												[
													"ReferencedField",
													"application.0",
													"id"
												]
											],
											[
												"GreaterThanOrEqual",
												[
													"SelectQuery",
													[
														"Select",
														[
															[
																"Count",
																"*"
															]
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"release"
															],
															"release.3"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.1",
																	"semver major"
																],
																[
																	"ReferencedField",
																	"release.3",
																	"semver major"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"release.3",
																	"semver major"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.1",
																	"semver minor"
																],
																[
																	"ReferencedField",
																	"release.3",
																	"semver minor"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"release.3",
																	"semver minor"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.1",
																	"semver patch"
																],
																[
																	"ReferencedField",
																	"release.3",
																	"semver patch"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"release.3",
																	"semver patch"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.1",
																	"revision"
																],
																[
																	"ReferencedField",
																	"release.3",
																	"revision"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"release.3",
																	"revision"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.3",
																	"belongs to-application"
																],
																[
																	"ReferencedField",
																	"application.0",
																	"id"
																]
															]
														]
													]
												],
												[
													"Number",
													2
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each application that owns a release1 that has a revision, owns at most one release2 that has a semver major that is of the release1 and has a semver minor that is of the release1 and has a semver patch that is of the release1 and has a revision that is of the release1."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"release"
											],
											"release.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"device"
											],
											"device.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device.1",
													"should be running-release"
												],
												[
													"ReferencedField",
													"release.0",
													"id"
												]
											],
											[
												"Not",
												[
													"And",
													[
														"Equals",
														[
															"ReferencedField",
															"release.0",
															"status"
														],
														[
															"Text",
															"success"
														]
													],
													[
														"Exists",
														[
															"ReferencedField",
															"release.0",
															"status"
														]
													],
													[
														"Exists",
														[
															"SelectQuery",
															[
																"Select",
																[]
															],
															[
																"From",
																[
																	"Alias",
																	[
																		"Table",
																		"application"
																	],
																	"application.3"
																]
															],
															[
																"Where",
																[
																	"And",
																	[
																		"Equals",
																		[
																			"ReferencedField",
																			"device.1",
																			"belongs to-application"
																		],
																		[
																			"ReferencedField",
																			"application.3",
																			"id"
																		]
																	],
																	[
																		"Equals",
																		[
																			"ReferencedField",
																			"release.0",
																			"belongs to-application"
																		],
																		[
																			"ReferencedField",
																			"application.3",
																			"id"
																		]
																	]
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each release that should be running on a device, has a status that is equal to \"success\" and belongs to an application1 that the device belongs to."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"release"
											],
											"release.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"application"
											],
											"application.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"application.1",
													"should be running-release"
												],
												[
													"ReferencedField",
													"release.0",
													"id"
												]
											],
											[
												"Not",
												[
													"And",
													[
														"Equals",
														[
															"ReferencedField",
															"release.0",
															"status"
														],
														[
															"Text",
															"success"
														]
													],
													[
														"Exists",
														[
															"ReferencedField",
															"release.0",
															"status"
														]
													],
													[
														"Equals",
														[
															"ReferencedField",
															"release.0",
															"belongs to-application"
														],
														[
															"ReferencedField",
															"application.1",
															"id"
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each release that should be running on an application, has a status that is equal to \"success\" and belongs to the application."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"release"
											],
											"release.0"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"GreaterThanOrEqual",
												[
													"SelectQuery",
													[
														"Select",
														[
															[
																"Count",
																"*"
															]
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"image-is part of-release"
															],
															"image.1-is part of-release.0"
														]
													],
													[
														"Where",
														[
															"Equals",
															[
																"ReferencedField",
																"image.1-is part of-release.0",
																"is part of-release"
															],
															[
																"ReferencedField",
																"release.0",
																"id"
															]
														]
													]
												],
												[
													"Number",
													2
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application"
															],
															"application.2"
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application type"
															],
															"application type.3"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application type.3",
																	"supports multicontainer"
																],
																[
																	"Boolean",
																	true
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.2",
																	"application type"
																],
																[
																	"ReferencedField",
																	"application type.3",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.0",
																	"belongs to-application"
																],
																[
																	"ReferencedField",
																	"application.2",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each release that contains at least 2 images, belongs to an application that has an application type that supports multicontainer."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"release"
											],
											"release.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"device"
											],
											"device.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device.1",
													"should be operated by-release"
												],
												[
													"ReferencedField",
													"release.0",
													"id"
												]
											],
											[
												"Not",
												[
													"And",
													[
														"Equals",
														[
															"ReferencedField",
															"release.0",
															"status"
														],
														[
															"Text",
															"success"
														]
													],
													[
														"Exists",
														[
															"ReferencedField",
															"release.0",
															"status"
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each release that should operate a device, has a status that is equal to \"success\"."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"release"
											],
											"release.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"device"
											],
											"device.1"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"device type"
											],
											"device type.2"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device.1",
													"is of-device type"
												],
												[
													"ReferencedField",
													"device type.2",
													"id"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device.1",
													"should be operated by-release"
												],
												[
													"ReferencedField",
													"release.0",
													"id"
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application"
															],
															"application.3"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.3",
																	"is host"
																],
																[
																	"Boolean",
																	true
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.3",
																	"is for-device type"
																],
																[
																	"ReferencedField",
																	"device type.2",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.0",
																	"belongs to-application"
																],
																[
																	"ReferencedField",
																	"application.3",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each release that should operate a device that is of a device type, belongs to an application that is host and is for the device type."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"release"
											],
											"release.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"device"
											],
											"device.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device.1",
													"should be managed by-release"
												],
												[
													"ReferencedField",
													"release.0",
													"id"
												]
											],
											[
												"Not",
												[
													"And",
													[
														"Equals",
														[
															"ReferencedField",
															"release.0",
															"status"
														],
														[
															"Text",
															"success"
														]
													],
													[
														"Exists",
														[
															"ReferencedField",
															"release.0",
															"status"
														]
													],
													[
														"Or",
														[
															"And",
															[
																"LessThan",
																[
																	"Integer",
																	0
																],
																[
																	"ReferencedField",
																	"release.0",
																	"semver major"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"release.0",
																	"semver major"
																]
															]
														],
														[
															"And",
															[
																"LessThan",
																[
																	"Integer",
																	0
																],
																[
																	"ReferencedField",
																	"release.0",
																	"semver minor"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"release.0",
																	"semver minor"
																]
															]
														],
														[
															"And",
															[
																"LessThan",
																[
																	"Integer",
																	0
																],
																[
																	"ReferencedField",
																	"release.0",
																	"semver patch"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"release.0",
																	"semver patch"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each release that should manage a device, has a status that is equal to \"success\" and has a semver major that is greater than 0 or has a semver minor that is greater than 0 or has a semver patch that is greater than 0."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"release"
											],
											"release.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"device"
											],
											"device.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device.1",
													"should be managed by-release"
												],
												[
													"ReferencedField",
													"release.0",
													"id"
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application"
															],
															"application.2"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.2",
																	"is public"
																],
																[
																	"Boolean",
																	true
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.2",
																	"is host"
																],
																[
																	"Boolean",
																	false
																]
															],
															[
																"In",
																[
																	"ReferencedField",
																	"application.2",
																	"slug"
																],
																[
																	"Text",
																	"balena_os/aarch64-supervisor"
																],
																[
																	"Text",
																	"balena_os/amd64-supervisor"
																],
																[
																	"Text",
																	"balena_os/armv7hf-supervisor"
																],
																[
																	"Text",
																	"balena_os/i386-supervisor"
																],
																[
																	"Text",
																	"balena_os/i386-nlp-supervisor"
																],
																[
																	"Text",
																	"balena_os/rpi-supervisor"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"application.2",
																	"slug"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.0",
																	"belongs to-application"
																],
																[
																	"ReferencedField",
																	"application.2",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each release that should manage a device, belongs to an application that is public and is not host and has a slug that is equal to \"balena_os/aarch64-supervisor\" or \"balena_os/amd64-supervisor\" or \"balena_os/armv7hf-supervisor\" or \"balena_os/i386-supervisor\" or \"balena_os/i386-nlp-supervisor\" or \"balena_os/rpi-supervisor\"."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"release"
											],
											"release.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"device"
											],
											"device.1"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"device type"
											],
											"device type.2"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device.1",
													"is of-device type"
												],
												[
													"ReferencedField",
													"device type.2",
													"id"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"device.1",
													"should be managed by-release"
												],
												[
													"ReferencedField",
													"release.0",
													"id"
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application"
															],
															"application.3"
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"device type"
															],
															"device type.4"
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"cpu architecture"
															],
															"cpu architecture.5"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"device type.2",
																	"is of-cpu architecture"
																],
																[
																	"ReferencedField",
																	"cpu architecture.5",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"device type.4",
																	"is of-cpu architecture"
																],
																[
																	"ReferencedField",
																	"cpu architecture.5",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.3",
																	"is for-device type"
																],
																[
																	"ReferencedField",
																	"device type.4",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"release.0",
																	"belongs to-application"
																],
																[
																	"ReferencedField",
																	"application.3",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each release that should manage a device that is of a device type1, belongs to an application that is for a device type2 that is of a cpu architecture that is supported by the device type1."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"team"
											],
											"team.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"application"
											],
											"application.1"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"organization"
											],
											"organization.2"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"team application access"
											],
											"team.0-grants access to-application.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"application.1",
													"organization"
												],
												[
													"ReferencedField",
													"organization.2",
													"id"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"team.0-grants access to-application.1",
													"team"
												],
												[
													"ReferencedField",
													"team.0",
													"id"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"team.0-grants access to-application.1",
													"grants access to-application"
												],
												[
													"ReferencedField",
													"application.1",
													"id"
												]
											],
											[
												"NotEquals",
												[
													"ReferencedField",
													"team.0",
													"belongs to-organization"
												],
												[
													"ReferencedField",
													"organization.2",
													"id"
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each team that grants access to an application that has an organization, belongs to the organization."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"user"
											],
											"user.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"team"
											],
											"team.1"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"organization"
											],
											"organization.2"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"team membership"
											],
											"user.0-is member of-team.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"team.1",
													"belongs to-organization"
												],
												[
													"ReferencedField",
													"organization.2",
													"id"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"user.0-is member of-team.1",
													"user"
												],
												[
													"ReferencedField",
													"user.0",
													"id"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"user.0-is member of-team.1",
													"is member of-team"
												],
												[
													"ReferencedField",
													"team.1",
													"id"
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"organization membership"
															],
															"user.0-is member of-organization.2"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"user.0-is member of-organization.2",
																	"user"
																],
																[
																	"ReferencedField",
																	"user.0",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"user.0-is member of-organization.2",
																	"is member of-organization"
																],
																[
																	"ReferencedField",
																	"organization.2",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each user (Auth) that is member of a team that belongs to an organization, is member of the organization."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"user"
											],
											"user.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"application"
											],
											"application.1"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"organization"
											],
											"organization.2"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"user-is member of-application"
											],
											"user.0-is member of-application.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"application.1",
													"organization"
												],
												[
													"ReferencedField",
													"organization.2",
													"id"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"user.0-is member of-application.1",
													"user"
												],
												[
													"ReferencedField",
													"user.0",
													"id"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"user.0-is member of-application.1",
													"is member of-application"
												],
												[
													"ReferencedField",
													"application.1",
													"id"
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"organization membership"
															],
															"user.0-is member of-organization.2"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"user.0-is member of-organization.2",
																	"user"
																],
																[
																	"ReferencedField",
																	"user.0",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"user.0-is member of-organization.2",
																	"is member of-organization"
																],
																[
																	"ReferencedField",
																	"organization.2",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each user (Auth) that is member of an application that has an organization, is member of the organization."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"user-is member of-application"
											],
											"user application membership.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"application membership role"
											],
											"application membership role.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"NotIn",
												[
													"ReferencedField",
													"application membership role.1",
													"name"
												],
												[
													"Text",
													"developer"
												],
												[
													"Text",
													"observer"
												]
											],
											[
												"Exists",
												[
													"ReferencedField",
													"application membership role.1",
													"name"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"user application membership.0",
													"application membership role"
												],
												[
													"ReferencedField",
													"application membership role.1",
													"id"
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application"
															],
															"application.3"
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application type"
															],
															"application type.4"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"NotEquals",
																[
																	"ReferencedField",
																	"application type.4",
																	"slug"
																],
																[
																	"Text",
																	"microservices-starter"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"application type.4",
																	"slug"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.3",
																	"application type"
																],
																[
																	"ReferencedField",
																	"application type.4",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"user application membership.0",
																	"is member of-application"
																],
																[
																	"ReferencedField",
																	"application.3",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each user application membership that has an application membership role that has a name (Auth) that is not equal to \"developer\" and is not equal to \"observer\", has an application that has an application type that has a slug that is not equal to \"microservices-starter\"."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"invitee-is invited to-application"
											],
											"application invite.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"application membership role"
											],
											"application membership role.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"NotIn",
												[
													"ReferencedField",
													"application membership role.1",
													"name"
												],
												[
													"Text",
													"developer"
												],
												[
													"Text",
													"observer"
												]
											],
											[
												"Exists",
												[
													"ReferencedField",
													"application membership role.1",
													"name"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"application invite.0",
													"application membership role"
												],
												[
													"ReferencedField",
													"application membership role.1",
													"id"
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application"
															],
															"application.3"
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"application type"
															],
															"application type.4"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"NotEquals",
																[
																	"ReferencedField",
																	"application type.4",
																	"slug"
																],
																[
																	"Text",
																	"microservices-starter"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"application type.4",
																	"slug"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.3",
																	"application type"
																],
																[
																	"ReferencedField",
																	"application type.4",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application invite.0",
																	"is invited to-application"
																],
																[
																	"ReferencedField",
																	"application.3",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each application invite that has an application membership role that has a name (Auth) that is not equal to \"developer\" and is not equal to \"observer\", has an application that has an application type that has a slug that is not equal to \"microservices-starter\"."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"application"
											],
											"application.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"device type"
											],
											"device type.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"device type.1",
													"is private"
												],
												[
													"Boolean",
													true
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"application.0",
													"is for-device type"
												],
												[
													"ReferencedField",
													"device type.1",
													"id"
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"device type"
															],
															"device type.2"
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"organization"
															],
															"organization.3"
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"organization-has private access to-device type"
															],
															"organization.3-has private access to-device type.2"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.0",
																	"organization"
																],
																[
																	"ReferencedField",
																	"organization.3",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"organization.3-has private access to-device type.2",
																	"organization"
																],
																[
																	"ReferencedField",
																	"organization.3",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"organization.3-has private access to-device type.2",
																	"has private access to-device type"
																],
																[
																	"ReferencedField",
																	"device type.2",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"application.0",
																	"is for-device type"
																],
																[
																	"ReferencedField",
																	"device type.2",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each application1 that is for a device type that is private, is for a device type that is accessible privately by an organization that has the application1"
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"organization"
											],
											"organization.0"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"organization.0",
													"is active"
												],
												[
													"Boolean",
													true
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"organization membership"
															],
															"organization membership.1"
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"organization membership role"
															],
															"organization membership role.2"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"organization membership role.2",
																	"name"
																],
																[
																	"Text",
																	"administrator"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"organization membership role.2",
																	"name"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"organization membership.1",
																	"organization membership role"
																],
																[
																	"ReferencedField",
																	"organization membership role.2",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"organization membership.1",
																	"is member of-organization"
																],
																[
																	"ReferencedField",
																	"organization.0",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each organization that is active, includes at least one organization membership that has an organization membership role that has a name (Auth) that is equal to \"administrator\"."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"organization"
											],
											"organization.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"team"
											],
											"team.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Exists",
												[
													"ReferencedField",
													"team.1",
													"name"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"team.1",
													"belongs to-organization"
												],
												[
													"ReferencedField",
													"organization.0",
													"id"
												]
											],
											[
												"GreaterThanOrEqual",
												[
													"SelectQuery",
													[
														"Select",
														[
															[
																"Count",
																"*"
															]
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"team"
															],
															"team.3"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"team.3",
																	"name"
																],
																[
																	"ReferencedField",
																	"team.1",
																	"name"
																]
															],
															[
																"Exists",
																[
																	"ReferencedField",
																	"team.3",
																	"name"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"team.3",
																	"belongs to-organization"
																],
																[
																	"ReferencedField",
																	"organization.0",
																	"id"
																]
															]
														]
													]
												],
												[
													"Number",
													2
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each organization that owns a team that has a name (Auth)1, owns at most one team that has a name (Auth)2 that is equal to the name (Auth)1."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Table",
											"delta"
										]
									],
									[
										"Where",
										[
											"Equals",
											[
												"ReferencedField",
												"delta",
												"status"
											],
											[
												"Text",
												"success"
											]
										]
									],
									[
										"GroupBy",
										[
											[
												"ReferencedField",
												"delta",
												"version"
											],
											[
												"ReferencedField",
												"delta",
												"originates from-image"
											],
											[
												"ReferencedField",
												"delta",
												"produces-image"
											]
										]
									],
									[
										"Having",
										[
											"GreaterThanOrEqual",
											[
												"Count",
												"*"
											],
											[
												"Number",
												2
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each image that is produced by a delta1 that has a status that is equal to \"success\" and originates from an image1, is produced by at most one delta that originates from the image1 and has a version that is of the delta1 and has a status that is equal to \"success\"."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"Boolean",
								true
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each image that is produced by a delta1 that has a status that is equal to \"success\" and originates from no image, is produced by at most one delta that originates from no image and has a version that is of the delta1 and has a status that is equal to \"success\"."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"feature"
											],
											"feature.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"plan addon"
											],
											"plan.1-offers-feature.0"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"plan.1-offers-feature.0",
													"offers-feature"
												],
												[
													"ReferencedField",
													"feature.0",
													"id"
												]
											],
											[
												"NotExists",
												[
													"ReferencedField",
													"feature.0",
													"billing code"
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each feature that is offered by a plan, has exactly one billing code"
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"subscription"
											],
											"subscription.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"plan addon"
											],
											"plan addon.1"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"subscription-discounts-plan addon"
											],
											"subscription.0-discounts-plan addon.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"subscription.0-discounts-plan addon.1",
													"subscription"
												],
												[
													"ReferencedField",
													"subscription.0",
													"id"
												]
											],
											[
												"Equals",
												[
													"ReferencedField",
													"subscription.0-discounts-plan addon.1",
													"discounts-plan addon"
												],
												[
													"ReferencedField",
													"plan addon.1",
													"id"
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"plan"
															],
															"plan.2"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"plan addon.1",
																	"plan"
																],
																[
																	"ReferencedField",
																	"plan.2",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"subscription.0",
																	"is for-plan"
																],
																[
																	"ReferencedField",
																	"plan.2",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each subscription that discounts a plan addon1, is for a plan that offers the plan addon1."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"subscription prepaid addon"
											],
											"subscription prepaid addon.0"
										]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"plan addon"
											],
											"plan addon.1"
										]
									],
									[
										"Where",
										[
											"And",
											[
												"Equals",
												[
													"ReferencedField",
													"subscription prepaid addon.0",
													"is for-plan addon"
												],
												[
													"ReferencedField",
													"plan addon.1",
													"id"
												]
											],
											[
												"NotExists",
												[
													"SelectQuery",
													[
														"Select",
														[]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"subscription"
															],
															"subscription.2"
														]
													],
													[
														"From",
														[
															"Alias",
															[
																"Table",
																"plan"
															],
															"plan.3"
														]
													],
													[
														"Where",
														[
															"And",
															[
																"Equals",
																[
																	"ReferencedField",
																	"plan addon.1",
																	"plan"
																],
																[
																	"ReferencedField",
																	"plan.3",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"subscription.2",
																	"is for-plan"
																],
																[
																	"ReferencedField",
																	"plan.3",
																	"id"
																]
															],
															[
																"Equals",
																[
																	"ReferencedField",
																	"subscription prepaid addon.0",
																	"is for-subscription"
																],
																[
																	"ReferencedField",
																	"subscription.2",
																	"id"
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each subscription prepaid addon that is for a plan addon1, is for a subscription that is for a plan that offers the plan addon1."
						]
					],
					[
						"Rule",
						[
							"Body",
							[
								"NotExists",
								[
									"SelectQuery",
									[
										"Select",
										[]
									],
									[
										"From",
										[
											"Alias",
											[
												"Table",
												"organization"
											],
											"organization.0"
										]
									],
									[
										"Where",
										[
											"GreaterThanOrEqual",
											[
												"SelectQuery",
												[
													"Select",
													[
														[
															"Count",
															"*"
														]
													]
												],
												[
													"From",
													[
														"Alias",
														[
															"Table",
															"subscription"
														],
														"subscription.1"
													]
												],
												[
													"Where",
													[
														"And",
														[
															"NotExists",
															[
																"ReferencedField",
																"subscription.1",
																"ends on-date"
															]
														],
														[
															"Equals",
															[
																"ReferencedField",
																"subscription.1",
																"is for-organization"
															],
															[
																"ReferencedField",
																"organization.0",
																"id"
															]
														]
													]
												]
											],
											[
												"Number",
												2
											]
										]
									]
								]
							]
						],
						[
							"StructuredEnglish",
							"It is necessary that each organization has at most one subscription that ends on no date."
						]
					]
				],
				"synonyms": {
					"user role": "user-has-role",
					"user permission": "user-has-permission",
					"application environment variable": "application-has-env var name",
					"application config variable": "application-has-name",
					"service": "application-has-service name",
					"service label": "application-has-service name-has-label name",
					"service environment variable": "application-has-service name-has-name",
					"application tag": "application-has-tag key",
					"device environment variable": "device-has-env var name",
					"device config variable": "device-has-name",
					"image install": "device-installs-image",
					"service install": "device-installs-application-has-service name",
					"device service environment variable": "device-installs-application-has-service name-has-name",
					"device tag": "device-has-tag key",
					"release tag": "release-has-tag key",
					"gateway download": "image-is downloaded by-device",
					"release image": "image-is part of-release",
					"image label": "image-is part of-release-has-label name",
					"image environment variable": "image-is part of-release-has-name",
					"organization membership": "user-is member of-organization",
					"user public key": "user-has-public key",
					"team application access": "team-grants access to-application",
					"team membership": "user-is member of-team",
					"user application membership": "user-is member of-application",
					"application invite": "invitee-is invited to-application",
					"organization invite": "invitee-is invited to-organization",
					"device domain mapping": "device-has-fqdn",
					"application domain mapping": "application-has-domain",
					"build environment variable": "application-has-build var name",
					"organization membership tag": "user-is member of-organization-has-tag key",
					"plan feature": "plan-provides-feature",
					"plan addon": "plan-offers-feature",
					"subscription addon discount": "subscription-discounts-plan-offers-feature"
				}
			}
		},
		{
			"modelName": "events",
			"modelFile": "/usr/src/app/src/models/events.sbvr",
			"migrationsPath": "/usr/src/app/src/models/migrations/events",
			"apiRoot": "events"
		}
	],
	"users": [
		{
			"username": "guest",
			"password": " ",
			"permissions": [
				"resin.cpu_architecture.read",
				"resin.device_type.read?is_private eq 0",
				"resin.device_family.read?has__device_type/any(dt:dt/is_private eq false)",
				"resin.device_manufacturer.read?manufactures__device_family/any(df:df/has__device_type/any(dt:dt/is_private eq false))",
				"resin.device.tunnel-80?is_web_accessible eq 1",
				"resin.device.tunnel-443?is_web_accessible eq 1",
				"resin.device.tunnel-8080?is_web_accessible eq 1",
				"resin.application.read?is_public eq true and is_for__device_type/any(dt:dt/is_private eq false)",
				"resin.application.create-provisioning-api-key?is_public eq true and is_for__device_type/any(dt:dt/is_private eq false)",
				"resin.release.read?belongs_to__application/any(a:a/is_public eq true and is_for__device_type/any(dt:dt/is_private eq false))",
				"resin.service.read?application/any(a:a/is_public eq true and is_for__device_type/any(dt:dt/is_private eq false))",
				"resin.image.read?is_a_build_of__service/any(s:s/application/any(a:a/is_public eq true and is_for__device_type/any(dt:dt/is_private eq false)))",
				"resin.application_tag.read?application/any(a:a/is_public eq true and is_for__device_type/any(dt:dt/is_private eq false))",
				"resin.release_tag.read?release/any(r:r/belongs_to__application/any(a:a/is_public eq true and is_for__device_type/any(dt:dt/is_private eq false)))",
				"resin.image__is_part_of__release.read?is_part_of__release/any(r:r/belongs_to__application/any(a:a/is_public eq true and is_for__device_type/any(dt:dt/is_private eq false)))"
			]
		}
	],
	"whitelist": {
		"admin": {
			"whitelist": {
				"actor": {
					"read": [
						"id"
					]
				},
				"api_key": {
					"read": [
						"id",
						"created_at",
						"is_of__actor",
						"name",
						"description"
					],
					"create": [
						"key",
						"name",
						"description"
					],
					"update": [
						"name",
						"description"
					]
				},
				"application": {
					"read": [
						"id",
						"organization",
						"depends_on__application",
						"actor",
						"app_name",
						"slug",
						"should_be_running__release",
						"application_type",
						"is_for__device_type",
						"should_track_latest_release",
						"is_accessible_by_support_until__date",
						"is_public",
						"is_host",
						"is_archived",
						"is_discoverable",
						"is_stored_at__repository_url",
						"created_at",
						"uuid",
						"is_of__class"
					],
					"create": [
						"organization",
						"app_name",
						"is_for__device_type",
						"depends_on__application",
						"should_track_latest_release",
						"is_accessible_by_support_until__date",
						"application_type",
						"is_archived",
						"uuid",
						"is_of__class",
						"is_stored_at__repository_url",
						"slug",
						"is_public",
						"is_host"
					],
					"update": [
						"app_name",
						"is_for__device_type",
						"depends_on__application",
						"should_track_latest_release",
						"should_be_running__release",
						"is_accessible_by_support_until__date",
						"application_type",
						"organization",
						"is_public",
						"is_archived",
						"is_of__class",
						"is_stored_at__repository_url",
						"is_host",
						"is_discoverable",
						"is_for__device_type"
					]
				},
				"application__can_use__application_as_host": {
					"read": [
						"id",
						"application",
						"can_use__application_as_host"
					]
				},
				"application_config_variable": {
					"read": [
						"id",
						"application",
						"name",
						"value"
					],
					"create": [
						"name",
						"value",
						"application"
					],
					"update": [
						"value"
					]
				},
				"application_domain_mapping": {
					"read": [
						"id",
						"application",
						"domain",
						"created_at"
					],
					"create": [
						"application",
						"domain"
					],
					"update": [
						"domain"
					]
				},
				"application_environment_variable": {
					"read": [
						"created_at",
						"application",
						"name",
						"id",
						"value"
					],
					"create": [
						"application",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"build_environment_variable": {
					"read": [
						"created_at",
						"application",
						"name",
						"id",
						"value"
					],
					"create": [
						"application",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"application_membership_role": {
					"read": [
						"id",
						"name"
					]
				},
				"application_tag": {
					"read": [
						"id",
						"application",
						"tag_key",
						"value"
					],
					"create": [
						"application",
						"tag_key",
						"value"
					],
					"update": [
						"value"
					]
				},
				"application_type": {
					"read": [
						"id",
						"name",
						"slug",
						"supports_web_url",
						"supports_multicontainer",
						"supports_gateway_mode",
						"needs__os_version_range",
						"requires_payment",
						"is_legacy",
						"maximum_device_count",
						"description"
					]
				},
				"cpu_architecture": {
					"read": [
						"id",
						"slug"
					],
					"create": [
						"slug"
					],
					"update": [
						"slug"
					]
				},
				"delta": {
					"read": [
						"id",
						"created_at",
						"update_timestamp",
						"end_timestamp",
						"status",
						"error_message",
						"originates_from__image",
						"produces__image",
						"version",
						"is_stored_at__location",
						"size"
					],
					"create": [
						"created_at",
						"update_timestamp",
						"end_timestamp",
						"status",
						"error_message",
						"originates_from__image",
						"produces__image",
						"version",
						"is_stored_at__location",
						"size"
					],
					"update": [
						"status",
						"error_message",
						"update_timestamp",
						"is_stored_at__location",
						"size"
					]
				},
				"public_device": {
					"read": [
						"belongs_to__application",
						"is_of__device_type",
						"latitude",
						"longitude",
						"was_recently_online"
					]
				},
				"public_organization": {
					"read": [
						"name",
						"handle"
					]
				},
				"device": {
					"read": [
						"id",
						"belongs_to__application",
						"belongs_to__user",
						"is_managed_by__device",
						"actor",
						"should_be_running__release",
						"device_name",
						"is_of__device_type",
						"uuid",
						"is_running__release",
						"note",
						"local_id",
						"status",
						"is_online",
						"last_connectivity_event",
						"is_connected_to_vpn",
						"last_vpn_event",
						"ip_address",
						"mac_address",
						"vpn_address",
						"public_address",
						"os_version",
						"os_variant",
						"supervisor_version",
						"should_be_managed_by__release",
						"should_be_operated_by__release",
						"is_managed_by__service_instance",
						"provisioning_progress",
						"provisioning_state",
						"download_progress",
						"is_web_accessible",
						"longitude",
						"latitude",
						"location",
						"custom_longitude",
						"custom_latitude",
						"logs_channel",
						"is_locked_until__date",
						"is_accessible_by_support_until__date",
						"created_at",
						"modified_at",
						"is_active",
						"api_heartbeat_state",
						"memory_usage",
						"memory_total",
						"storage_block_device",
						"storage_usage",
						"storage_total",
						"cpu_temp",
						"cpu_usage",
						"cpu_id",
						"is_undervolted"
					],
					"explicitRead": [
						"overall_status",
						"overall_progress"
					],
					"create": [
						"device_name",
						"is_of__device_type",
						"uuid",
						"local_id",
						"os_version",
						"os_variant",
						"supervisor_version",
						"belongs_to__application",
						"is_managed_by__device",
						"belongs_to__user",
						"custom_longitude",
						"custom_latitude",
						"logs_channel",
						"is_accessible_by_support_until__date",
						"is_active",
						"is_online",
						"is_locked_until__date"
					],
					"update": [
						"belongs_to__application",
						"is_managed_by__device",
						"should_be_running__release",
						"is_of__device_type",
						"device_name",
						"status",
						"is_online",
						"last_connectivity_event",
						"is_running__release",
						"note",
						"os_version",
						"os_variant",
						"supervisor_version",
						"should_be_managed_by__release",
						"should_be_operated_by__release",
						"is_managed_by__service_instance",
						"provisioning_progress",
						"provisioning_state",
						"ip_address",
						"mac_address",
						"public_address",
						"download_progress",
						"is_web_accessible",
						"custom_longitude",
						"custom_latitude",
						"is_accessible_by_support_until__date",
						"api_port",
						"api_secret",
						"logs_channel",
						"is_locked_until__date",
						"is_active",
						"api_heartbeat_state",
						"memory_usage",
						"memory_total",
						"storage_block_device",
						"storage_usage",
						"storage_total",
						"cpu_temp",
						"cpu_usage",
						"cpu_id",
						"is_undervolted"
					]
				},
				"device_domain_mapping": {
					"read": [
						"id",
						"device",
						"fqdn",
						"created_at"
					],
					"create": [
						"device",
						"fqdn"
					],
					"update": [
						"fqdn"
					]
				},
				"device_config_variable": {
					"read": [
						"id",
						"device",
						"value",
						"name"
					],
					"create": [
						"device",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"device_environment_variable": {
					"read": [
						"created_at",
						"device",
						"name",
						"id",
						"value"
					],
					"create": [
						"device",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"device_service_environment_variable": {
					"read": [
						"created_at",
						"service_install",
						"value",
						"id",
						"name"
					],
					"create": [
						"service_install",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"device_tag": {
					"read": [
						"id",
						"device",
						"tag_key",
						"value"
					],
					"create": [
						"device",
						"tag_key",
						"value"
					],
					"update": [
						"value"
					]
				},
				"device_type": {
					"explicitRead": [
						"logo",
						"contract"
					],
					"read": [
						"id",
						"slug",
						"name",
						"is_private",
						"is_of__cpu_architecture",
						"belongs_to__device_family"
					],
					"create": [
						"slug",
						"name",
						"contract",
						"is_private",
						"logo",
						"is_of__cpu_architecture",
						"belongs_to__device_family"
					],
					"update": [
						"slug",
						"name",
						"contract",
						"is_private",
						"logo",
						"is_of__cpu_architecture",
						"belongs_to__device_family"
					]
				},
				"device_family": {
					"read": [
						"id",
						"slug",
						"name",
						"is_manufactured_by__device_manufacturer"
					],
					"create": [
						"slug",
						"name",
						"is_manufactured_by__device_manufacturer"
					],
					"update": [
						"slug",
						"name",
						"is_manufactured_by__device_manufacturer"
					]
				},
				"device_manufacturer": {
					"read": [
						"id",
						"slug",
						"name"
					],
					"create": [
						"slug",
						"name"
					],
					"update": [
						"slug",
						"name"
					]
				},
				"feature": {
					"read": [
						"id",
						"title",
						"slug",
						"billing_code"
					]
				},
				"gateway_download": {
					"read": [
						"id",
						"created_at",
						"is_downloaded_by__device",
						"status",
						"download_progress",
						"image"
					],
					"create": [
						"is_downloaded_by__device",
						"status",
						"download_progress",
						"image"
					],
					"update": [
						"status",
						"download_progress"
					]
				},
				"image": {
					"read": [
						"created_at",
						"id",
						"start_timestamp",
						"end_timestamp",
						"dockerfile",
						"is_a_build_of__service",
						"image_size",
						"is_stored_at__image_location",
						"project_type",
						"error_message",
						"build_log",
						"push_timestamp",
						"status",
						"content_hash",
						"contract"
					],
					"create": [
						"start_timestamp",
						"end_timestamp",
						"dockerfile",
						"is_a_build_of__service",
						"image_size",
						"is_stored_at__image_location",
						"project_type",
						"error_message",
						"build_log",
						"push_timestamp",
						"status",
						"content_hash",
						"contract"
					],
					"update": [
						"end_timestamp",
						"project_type",
						"error_message",
						"build_log",
						"push_timestamp",
						"status",
						"content_hash",
						"dockerfile",
						"image_size"
					]
				},
				"image_environment_variable": {
					"read": [
						"created_at",
						"release_image",
						"name",
						"id",
						"value"
					],
					"create": [
						"release_image",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"image_install": {
					"create": [
						"device",
						"installs__image",
						"install_date",
						"download_progress",
						"status",
						"is_provided_by__release"
					],
					"read": [
						"device",
						"installs__image",
						"install_date",
						"download_progress",
						"status",
						"is_provided_by__release",
						"id"
					],
					"update": [
						"download_progress",
						"status",
						"is_provided_by__release"
					]
				},
				"image__is_part_of__release": {
					"create": [
						"image",
						"is_part_of__release"
					],
					"read": [
						"id",
						"created_at",
						"image",
						"is_part_of__release"
					],
					"update": []
				},
				"image_label": {
					"read": [
						"id",
						"created_at",
						"release_image",
						"label_name",
						"value"
					],
					"create": [
						"label_name",
						"value",
						"release_image"
					],
					"update": [
						"value"
					]
				},
				"invitee": {
					"read": [
						"id",
						"email"
					],
					"create": [
						"email"
					]
				},
				"oauth_application_authorization": {
					"read": [
						"belongs_to__user",
						"is_for__oauth_application",
						"id"
					],
					"create": [
						"belongs_to__user",
						"is_for__oauth_application",
						"id"
					]
				},
				"oauth_application": {
					"read": [
						"client_id",
						"name",
						"secret",
						"description",
						"id",
						"redirect_uri"
					],
					"create": [
						"client_id",
						"name",
						"secret",
						"description",
						"redirect_uri"
					],
					"update": [
						"client_id",
						"name",
						"secret",
						"description",
						"redirect_uri"
					]
				},
				"organization": {
					"read": [
						"id",
						"created_at",
						"name",
						"handle",
						"company_name",
						"website",
						"industry",
						"billing_account_code",
						"has_past_due_invoice_since__date",
						"internal_company_name",
						"internal_note",
						"tradegecko_company_id"
					],
					"create": [
						"name",
						"company_name",
						"website",
						"industry",
						"handle",
						"billing_account_code",
						"internal_company_name",
						"internal_note",
						"tradegecko_company_id"
					],
					"update": [
						"name",
						"company_name",
						"website",
						"industry",
						"billing_account_code",
						"internal_company_name",
						"internal_note",
						"tradegecko_company_id"
					]
				},
				"organization__has_private_access_to__device_type": {
					"read": [
						"id",
						"organization",
						"has_private_access_to__device_type"
					],
					"create": [
						"organization",
						"has_private_access_to__device_type"
					],
					"update": [
						"organization",
						"has_private_access_to__device_type"
					]
				},
				"organization_membership": {
					"read": [
						"id",
						"created_at",
						"user",
						"is_member_of__organization",
						"organization_membership_role",
						"effective_seat_role"
					],
					"create": [
						"user",
						"is_member_of__organization",
						"organization_membership_role"
					],
					"update": [
						"organization_membership_role"
					]
				},
				"organization_membership_role": {
					"read": [
						"id",
						"name"
					]
				},
				"organization_membership_tag": {
					"read": [
						"id",
						"organization_membership",
						"tag_key",
						"value"
					],
					"create": [
						"organization_membership",
						"tag_key",
						"value"
					],
					"update": [
						"value"
					]
				},
				"plan": {
					"read": [
						"id",
						"created_at",
						"title",
						"billing_code",
						"is_legacy",
						"monthly_price",
						"annual_price",
						"can_self_serve",
						"generation"
					]
				},
				"plan_addon": {
					"read": [
						"id",
						"offers__feature",
						"base_price",
						"can_self_serve",
						"bills_dynamically",
						"is_offered_by__plan"
					]
				},
				"plan__has__discount_code": {
					"read": [
						"id",
						"plan",
						"discount_code"
					]
				},
				"plan_feature": {
					"read": [
						"id",
						"provides__feature",
						"quantity"
					]
				},
				"recovery_two_factor": {
					"read": [
						"id",
						"belongs_to__user",
						"used_timestamp"
					]
				},
				"release": {
					"read": [
						"id",
						"created_at",
						"belongs_to__application",
						"is_created_by__user",
						"commit",
						"composition",
						"status",
						"source",
						"build_log",
						"start_timestamp",
						"end_timestamp",
						"update_timestamp",
						"is_invalidated",
						"release_version",
						"is_passing_tests",
						"contract",
						"semver",
						"semver_major",
						"semver_minor",
						"semver_patch",
						"revision",
						"is_final",
						"is_finalized_at__date",
						"known_issue_list",
						"note",
						"invalidation_reason"
					],
					"explicitRead": [
						"raw_version",
						"version"
					],
					"create": [
						"belongs_to__application",
						"is_created_by__user",
						"commit",
						"composition",
						"status",
						"source",
						"build_log",
						"start_timestamp",
						"end_timestamp",
						"update_timestamp",
						"is_invalidated",
						"release_version",
						"is_passing_tests",
						"contract",
						"semver",
						"semver_major",
						"semver_minor",
						"semver_patch",
						"is_final",
						"known_issue_list",
						"note",
						"invalidation_reason"
					],
					"update": [
						"belongs_to__application",
						"is_created_by__user",
						"commit",
						"composition",
						"status",
						"source",
						"build_log",
						"start_timestamp",
						"end_timestamp",
						"update_timestamp",
						"is_invalidated",
						"release_version",
						"is_passing_tests",
						"statistics_set",
						"semver",
						"semver_major",
						"semver_minor",
						"semver_patch",
						"is_final",
						"known_issue_list",
						"note",
						"invalidation_reason"
					]
				},
				"release_tag": {
					"read": [
						"id",
						"release",
						"tag_key",
						"value"
					],
					"create": [
						"release",
						"tag_key",
						"value"
					],
					"update": [
						"value"
					]
				},
				"service": {
					"create": [
						"application",
						"service_name"
					],
					"read": [
						"created_at",
						"application",
						"service_name",
						"id"
					],
					"update": [
						"application",
						"service_name"
					]
				},
				"service_environment_variable": {
					"read": [
						"created_at",
						"service",
						"name",
						"value",
						"id"
					],
					"create": [
						"service",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"service_install": {
					"create": [
						"device",
						"installs__service"
					],
					"read": [
						"created_at",
						"device",
						"installs__service",
						"id"
					],
					"update": []
				},
				"service_instance": {
					"read": [
						"id",
						"ip_address"
					]
				},
				"service_label": {
					"read": [
						"id",
						"created_at",
						"service",
						"label_name",
						"value"
					],
					"create": [
						"label_name",
						"value",
						"service"
					],
					"update": [
						"value"
					]
				},
				"subscription": {
					"read": [
						"billing_cycle",
						"bills_addons_with__recurly_id",
						"bills_base_with__recurly_id",
						"discount_percentage",
						"ends_on__date",
						"expects_first_payment_on__date",
						"id",
						"internal_note",
						"is_agreed_upon_on__date",
						"is_for__organization",
						"is_for__plan",
						"is_terminated_on__date",
						"origin",
						"starts_on__date",
						"is_active",
						"is_terminated_with__reason"
					],
					"update": [
						"billing_cycle",
						"bills_addons_with__recurly_id",
						"bills_base_with__recurly_id",
						"discount_percentage",
						"ends_on__date",
						"expects_first_payment_on__date",
						"internal_note",
						"is_agreed_upon_on__date",
						"is_for__plan",
						"is_terminated_on__date",
						"starts_on__date"
					],
					"create": [
						"billing_cycle",
						"bills_addons_with__recurly_id",
						"bills_base_with__recurly_id",
						"discount_percentage",
						"ends_on__date",
						"expects_first_payment_on__date",
						"internal_note",
						"is_agreed_upon_on__date",
						"is_for__organization",
						"is_for__plan",
						"is_terminated_on__date",
						"origin",
						"starts_on__date"
					]
				},
				"subscription_prepaid_addon": {
					"read": [
						"id",
						"is_for__subscription",
						"is_for__plan_addon",
						"discount_percentage",
						"quantity",
						"starts_on__date",
						"expires_on__date"
					],
					"create": [
						"id",
						"is_for__subscription",
						"is_for__plan_addon",
						"discount_percentage",
						"quantity",
						"starts_on__date",
						"expires_on__date"
					]
				},
				"subscription_addon_discount": {
					"read": [
						"id",
						"subscription",
						"discounts__plan_addon",
						"discount_percentage"
					],
					"update": [
						"discounts__plan_addon",
						"discount_percentage"
					],
					"create": [
						"id",
						"subscription",
						"discounts__plan_addon",
						"discount_percentage"
					]
				},
				"supervisor_release": {
					"read": [
						"id",
						"supervisor_version",
						"is_for__device_type",
						"image_name",
						"is_public",
						"created_at",
						"note"
					],
					"create": [
						"supervisor_version",
						"is_for__device_type",
						"image_name",
						"is_public",
						"note"
					],
					"update": [
						"supervisor_version",
						"is_for__device_type",
						"image_name",
						"is_public",
						"note"
					]
				},
				"support_feature": {
					"read": [
						"id",
						"feature",
						"support_tier"
					]
				},
				"support_tier": {
					"read": [
						"id",
						"title",
						"slug",
						"includes_private_support",
						"includes__SLA"
					]
				},
				"team": {
					"read": [
						"id",
						"created_at",
						"name",
						"description",
						"belongs_to__organization"
					],
					"create": [
						"name",
						"description",
						"belongs_to__organization"
					],
					"update": [
						"name",
						"description"
					]
				},
				"team_membership": {
					"read": [
						"id",
						"created_at",
						"user",
						"is_member_of__team"
					],
					"create": [
						"user",
						"is_member_of__team"
					]
				},
				"team_application_access": {
					"read": [
						"id",
						"created_at",
						"team",
						"grants_access_to__application",
						"application_membership_role"
					],
					"create": [
						"team",
						"grants_access_to__application",
						"application_membership_role"
					],
					"update": [
						"application_membership_role"
					]
				},
				"user": {
					"read": [
						"id",
						"actor",
						"username",
						"created_at",
						"has_legacy_link_to__organization",
						"email",
						"first_name",
						"last_name",
						"account_type",
						"created_at",
						"internal_note"
					],
					"update": [
						"internal_note"
					]
				},
				"user__has_direct_access_to__application": {
					"read": [
						"id",
						"user",
						"has_direct_access_to__application"
					]
				},
				"user__has__public_key": {
					"create": [
						"user",
						"title",
						"public_key"
					],
					"read": [
						"id",
						"user",
						"title",
						"public_key",
						"created_at"
					]
				},
				"invitee__is_invited_to__organization": {
					"create": [
						"invitee",
						"message",
						"is_invited_to__organization",
						"organization_membership_role"
					],
					"read": [
						"id",
						"message",
						"invitee",
						"is_invited_to__organization",
						"is_created_by__user",
						"organization_membership_role"
					],
					"update": [
						"organization_membership_role"
					]
				},
				"invitee__is_invited_to__application": {
					"create": [
						"invitee",
						"message",
						"is_invited_to__application",
						"application_membership_role"
					],
					"read": [
						"id",
						"message",
						"invitee",
						"is_created_by__user",
						"is_invited_to__application",
						"application_membership_role"
					],
					"update": [
						"application_membership_role"
					]
				},
				"user__is_member_of__application": {
					"create": [
						"user",
						"is_member_of__application",
						"application_membership_role"
					],
					"read": [
						"id",
						"user",
						"is_member_of__application",
						"application_membership_role"
					],
					"update": [
						"application_membership_role"
					]
				},
				"billing_plan": {
					"read": [
						"id",
						"role",
						"title",
						"created_at"
					]
				},
				"config": {
					"read": [
						"id",
						"key",
						"value",
						"scope",
						"description"
					],
					"create": [
						"key",
						"value",
						"scope",
						"description"
					],
					"update": [
						"key",
						"value",
						"scope",
						"description"
					]
				},
				"csp_report": {
					"read": [
						"id",
						"created_at",
						"last_seen_time",
						"incidents_counter",
						"violated_directive",
						"document_uri",
						"blocked_uri",
						"referrer",
						"original_policy"
					]
				},
				"permission": {
					"read": [
						"id",
						"name"
					]
				},
				"role": {
					"read": [
						"id",
						"name"
					]
				},
				"role__has__permission": {
					"read": [
						"id",
						"role",
						"permission"
					]
				},
				"user__has__permission": {
					"read": [
						"id",
						"user",
						"permission",
						"expiry_date"
					],
					"create": [
						"user",
						"permission",
						"expiry_date"
					],
					"update": [
						"user",
						"permission",
						"expiry_date"
					]
				},
				"user__has__role": {
					"read": [
						"id",
						"user",
						"role",
						"expiry_date"
					],
					"create": [
						"user",
						"role",
						"expiry_date"
					],
					"update": [
						"user",
						"role",
						"expiry_date"
					]
				}
			},
			"permission": "admin.home"
		},
		"global-supervisor-mgmt": {
			"whitelist": {
				"device": {
					"read": [
						"id",
						"belongs_to__application",
						"belongs_to__user",
						"is_managed_by__device",
						"actor",
						"should_be_running__release",
						"device_name",
						"is_of__device_type",
						"uuid",
						"is_running__release",
						"note",
						"local_id",
						"status",
						"is_online",
						"last_connectivity_event",
						"is_connected_to_vpn",
						"last_vpn_event",
						"ip_address",
						"mac_address",
						"vpn_address",
						"public_address",
						"os_version",
						"os_variant",
						"supervisor_version",
						"should_be_managed_by__release",
						"should_be_operated_by__release",
						"is_managed_by__service_instance",
						"provisioning_progress",
						"provisioning_state",
						"download_progress",
						"is_web_accessible",
						"longitude",
						"latitude",
						"location",
						"custom_longitude",
						"custom_latitude",
						"logs_channel",
						"is_locked_until__date",
						"is_accessible_by_support_until__date",
						"created_at",
						"modified_at",
						"is_active",
						"api_heartbeat_state",
						"memory_usage",
						"memory_total",
						"storage_block_device",
						"storage_usage",
						"storage_total",
						"cpu_temp",
						"cpu_usage",
						"cpu_id",
						"is_undervolted"
					],
					"update": [
						"should_be_managed_by__release",
						"should_be_operated_by__release",
						"is_of__device_type"
					]
				},
				"device_type": {
					"read": [
						"id",
						"slug",
						"name",
						"is_private",
						"is_of__cpu_architecture",
						"belongs_to__device_family"
					],
					"explicitRead": [
						"logo",
						"contract"
					]
				},
				"release": {
					"read": [
						"id",
						"created_at",
						"belongs_to__application",
						"is_created_by__user",
						"commit",
						"composition",
						"status",
						"source",
						"build_log",
						"start_timestamp",
						"end_timestamp",
						"update_timestamp",
						"is_invalidated",
						"release_version",
						"is_passing_tests",
						"contract",
						"semver",
						"semver_major",
						"semver_minor",
						"semver_patch",
						"revision",
						"is_final",
						"is_finalized_at__date",
						"known_issue_list",
						"note",
						"invalidation_reason"
					],
					"explicitRead": [
						"raw_version",
						"version"
					]
				},
				"application": {
					"read": [
						"id",
						"organization",
						"depends_on__application",
						"actor",
						"app_name",
						"slug",
						"should_be_running__release",
						"application_type",
						"is_for__device_type",
						"should_track_latest_release",
						"is_accessible_by_support_until__date",
						"is_public",
						"is_host",
						"is_archived",
						"is_discoverable",
						"is_stored_at__repository_url",
						"created_at",
						"uuid",
						"is_of__class"
					],
					"update": [
						"is_for__device_type"
					]
				},
				"supervisor_release": {
					"read": [
						"id",
						"supervisor_version",
						"is_for__device_type",
						"image_name",
						"is_public",
						"created_at",
						"note"
					]
				},
				"service_install": {
					"read": [
						"id"
					],
					"create": [
						"device",
						"installs__service"
					]
				},
				"service": {
					"read": [
						"id"
					]
				},
				"image": {
					"read": [
						"id"
					]
				},
				"image__is_part_of__release": {
					"read": [
						"id"
					]
				}
			},
			"permission": "whitelist.global-supervisor-mgmt"
		},
		"global-billing-read": {
			"whitelist": {
				"feature": {
					"read": [
						"id",
						"title",
						"slug",
						"billing_code"
					]
				},
				"organization": {
					"read": [
						"id",
						"created_at",
						"name",
						"handle",
						"company_name",
						"website",
						"industry",
						"billing_account_code",
						"internal_company_name",
						"internal_note",
						"tradegecko_company_id"
					]
				},
				"plan": {
					"read": [
						"id",
						"created_at",
						"title",
						"billing_code",
						"is_legacy",
						"monthly_price",
						"annual_price",
						"can_self_serve",
						"generation"
					]
				},
				"plan_addon": {
					"read": [
						"id",
						"offers__feature",
						"base_price",
						"can_self_serve",
						"bills_dynamically",
						"is_offered_by__plan"
					]
				},
				"plan_feature": {
					"read": [
						"id",
						"provides__feature",
						"quantity"
					]
				},
				"plan__has__discount_code": {
					"read": [
						"id",
						"plan",
						"discount_code"
					]
				},
				"subscription": {
					"read": [
						"billing_cycle",
						"bills_addons_with__recurly_id",
						"bills_base_with__recurly_id",
						"discount_percentage",
						"ends_on__date",
						"expects_first_payment_on__date",
						"id",
						"internal_note",
						"is_agreed_upon_on__date",
						"is_for__organization",
						"is_for__plan",
						"is_terminated_on__date",
						"origin",
						"starts_on__date",
						"is_active"
					]
				},
				"subscription_addon_discount": {
					"read": [
						"id",
						"subscription",
						"discounts__plan_addon",
						"discount_percentage"
					]
				},
				"subscription_prepaid_addon": {
					"read": [
						"id",
						"is_for__subscription",
						"is_for__plan_addon",
						"discount_percentage",
						"quantity",
						"starts_on__date",
						"expires_on__date"
					]
				},
				"support_feature": {
					"read": [
						"id",
						"feature",
						"support_tier"
					]
				},
				"support_tier": {
					"read": [
						"id",
						"title",
						"slug",
						"includes_private_support",
						"includes__SLA"
					]
				}
			},
			"permission": "whitelist.global-billing-read"
		},
		"named-user-api-key": {
			"whitelist": {
				"actor": {
					"read": [
						"id"
					]
				},
				"api_key": {
					"read": [
						"id",
						"created_at",
						"is_of__actor",
						"name",
						"description"
					],
					"create": [
						"key",
						"name",
						"description"
					],
					"update": [
						"name",
						"description"
					]
				},
				"application": {
					"read": [
						"id",
						"organization",
						"depends_on__application",
						"actor",
						"app_name",
						"slug",
						"should_be_running__release",
						"application_type",
						"is_for__device_type",
						"should_track_latest_release",
						"is_accessible_by_support_until__date",
						"is_public",
						"is_host",
						"is_archived",
						"is_discoverable",
						"is_stored_at__repository_url",
						"created_at",
						"uuid",
						"is_of__class"
					],
					"create": [
						"organization",
						"app_name",
						"is_for__device_type",
						"depends_on__application",
						"should_track_latest_release",
						"is_accessible_by_support_until__date",
						"application_type",
						"is_archived",
						"uuid",
						"is_of__class",
						"is_stored_at__repository_url",
						"slug"
					],
					"update": [
						"app_name",
						"is_for__device_type",
						"depends_on__application",
						"should_track_latest_release",
						"should_be_running__release",
						"is_accessible_by_support_until__date",
						"application_type",
						"organization",
						"is_public",
						"is_archived",
						"is_of__class",
						"is_stored_at__repository_url"
					]
				},
				"application__can_use__application_as_host": {
					"read": [
						"id",
						"application",
						"can_use__application_as_host"
					]
				},
				"application_config_variable": {
					"read": [
						"id",
						"application",
						"name",
						"value"
					],
					"create": [
						"name",
						"value",
						"application"
					],
					"update": [
						"value"
					]
				},
				"application_domain_mapping": {
					"read": [
						"id",
						"application",
						"domain",
						"created_at"
					],
					"create": [
						"application",
						"domain"
					],
					"update": [
						"domain"
					]
				},
				"application_environment_variable": {
					"read": [
						"created_at",
						"application",
						"name",
						"id",
						"value"
					],
					"create": [
						"application",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"build_environment_variable": {
					"read": [
						"created_at",
						"application",
						"name",
						"id",
						"value"
					],
					"create": [
						"application",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"application_membership_role": {
					"read": [
						"id",
						"name"
					]
				},
				"application_tag": {
					"read": [
						"id",
						"application",
						"tag_key",
						"value"
					],
					"create": [
						"application",
						"tag_key",
						"value"
					],
					"update": [
						"value"
					]
				},
				"application_type": {
					"read": [
						"id",
						"name",
						"slug",
						"supports_web_url",
						"supports_multicontainer",
						"supports_gateway_mode",
						"needs__os_version_range",
						"requires_payment",
						"is_legacy",
						"maximum_device_count",
						"description"
					]
				},
				"cpu_architecture": {
					"read": [
						"id",
						"slug"
					]
				},
				"delta": {
					"read": [
						"id",
						"created_at",
						"update_timestamp",
						"end_timestamp",
						"status",
						"error_message",
						"originates_from__image",
						"produces__image",
						"version",
						"is_stored_at__location",
						"size"
					],
					"create": [
						"created_at",
						"update_timestamp",
						"end_timestamp",
						"status",
						"error_message",
						"originates_from__image",
						"produces__image",
						"version",
						"is_stored_at__location",
						"size"
					],
					"update": [
						"status",
						"error_message",
						"update_timestamp",
						"is_stored_at__location",
						"size"
					]
				},
				"public_device": {
					"read": [
						"belongs_to__application",
						"is_of__device_type",
						"latitude",
						"longitude",
						"was_recently_online"
					]
				},
				"public_organization": {
					"read": [
						"name",
						"handle"
					]
				},
				"device": {
					"read": [
						"id",
						"belongs_to__application",
						"belongs_to__user",
						"is_managed_by__device",
						"actor",
						"should_be_running__release",
						"device_name",
						"is_of__device_type",
						"uuid",
						"is_running__release",
						"note",
						"local_id",
						"status",
						"is_online",
						"last_connectivity_event",
						"is_connected_to_vpn",
						"last_vpn_event",
						"ip_address",
						"mac_address",
						"vpn_address",
						"public_address",
						"os_version",
						"os_variant",
						"supervisor_version",
						"should_be_managed_by__release",
						"should_be_operated_by__release",
						"is_managed_by__service_instance",
						"provisioning_progress",
						"provisioning_state",
						"download_progress",
						"is_web_accessible",
						"longitude",
						"latitude",
						"location",
						"custom_longitude",
						"custom_latitude",
						"logs_channel",
						"is_locked_until__date",
						"is_accessible_by_support_until__date",
						"created_at",
						"modified_at",
						"is_active",
						"api_heartbeat_state",
						"memory_usage",
						"memory_total",
						"storage_block_device",
						"storage_usage",
						"storage_total",
						"cpu_temp",
						"cpu_usage",
						"cpu_id",
						"is_undervolted"
					],
					"explicitRead": [
						"overall_status",
						"overall_progress"
					],
					"create": [
						"device_name",
						"is_of__device_type",
						"uuid",
						"local_id",
						"os_version",
						"os_variant",
						"supervisor_version",
						"belongs_to__application",
						"is_managed_by__device",
						"belongs_to__user",
						"custom_longitude",
						"custom_latitude",
						"logs_channel",
						"is_accessible_by_support_until__date",
						"is_active",
						"is_online",
						"is_locked_until__date"
					],
					"update": [
						"belongs_to__application",
						"is_managed_by__device",
						"should_be_running__release",
						"is_of__device_type",
						"device_name",
						"status",
						"is_online",
						"last_connectivity_event",
						"is_running__release",
						"note",
						"os_version",
						"os_variant",
						"supervisor_version",
						"should_be_managed_by__release",
						"should_be_operated_by__release",
						"is_managed_by__service_instance",
						"provisioning_progress",
						"provisioning_state",
						"ip_address",
						"mac_address",
						"public_address",
						"download_progress",
						"is_web_accessible",
						"custom_longitude",
						"custom_latitude",
						"is_accessible_by_support_until__date",
						"api_port",
						"api_secret",
						"logs_channel",
						"is_locked_until__date",
						"is_active",
						"api_heartbeat_state",
						"memory_usage",
						"memory_total",
						"storage_block_device",
						"storage_usage",
						"storage_total",
						"cpu_temp",
						"cpu_usage",
						"cpu_id",
						"is_undervolted"
					]
				},
				"device_domain_mapping": {
					"read": [
						"id",
						"device",
						"fqdn",
						"created_at"
					],
					"create": [
						"device",
						"fqdn"
					],
					"update": [
						"fqdn"
					]
				},
				"device_config_variable": {
					"read": [
						"id",
						"device",
						"value",
						"name"
					],
					"create": [
						"device",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"device_environment_variable": {
					"read": [
						"created_at",
						"device",
						"name",
						"id",
						"value"
					],
					"create": [
						"device",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"device_service_environment_variable": {
					"read": [
						"created_at",
						"service_install",
						"value",
						"id",
						"name"
					],
					"create": [
						"service_install",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"device_tag": {
					"read": [
						"id",
						"device",
						"tag_key",
						"value"
					],
					"create": [
						"device",
						"tag_key",
						"value"
					],
					"update": [
						"value"
					]
				},
				"device_type": {
					"explicitRead": [
						"logo",
						"contract"
					],
					"read": [
						"id",
						"slug",
						"name",
						"is_private",
						"is_of__cpu_architecture",
						"belongs_to__device_family"
					]
				},
				"device_family": {
					"read": [
						"id",
						"slug",
						"name",
						"is_manufactured_by__device_manufacturer"
					]
				},
				"device_manufacturer": {
					"read": [
						"id",
						"slug",
						"name"
					]
				},
				"feature": {
					"read": [
						"id",
						"title",
						"slug",
						"billing_code"
					]
				},
				"gateway_download": {
					"read": [
						"id",
						"created_at",
						"is_downloaded_by__device",
						"status",
						"download_progress",
						"image"
					],
					"create": [
						"is_downloaded_by__device",
						"status",
						"download_progress",
						"image"
					],
					"update": [
						"status",
						"download_progress"
					]
				},
				"image": {
					"read": [
						"created_at",
						"id",
						"start_timestamp",
						"end_timestamp",
						"dockerfile",
						"is_a_build_of__service",
						"image_size",
						"is_stored_at__image_location",
						"project_type",
						"error_message",
						"build_log",
						"push_timestamp",
						"status",
						"content_hash",
						"contract"
					],
					"create": [
						"start_timestamp",
						"end_timestamp",
						"dockerfile",
						"is_a_build_of__service",
						"image_size",
						"is_stored_at__image_location",
						"project_type",
						"error_message",
						"build_log",
						"push_timestamp",
						"status",
						"content_hash",
						"contract"
					],
					"update": [
						"end_timestamp",
						"project_type",
						"error_message",
						"build_log",
						"push_timestamp",
						"status",
						"content_hash",
						"dockerfile",
						"image_size"
					]
				},
				"image_environment_variable": {
					"read": [
						"created_at",
						"release_image",
						"name",
						"id",
						"value"
					],
					"create": [
						"release_image",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"image_install": {
					"create": [
						"device",
						"installs__image",
						"install_date",
						"download_progress",
						"status",
						"is_provided_by__release"
					],
					"read": [
						"device",
						"installs__image",
						"install_date",
						"download_progress",
						"status",
						"is_provided_by__release",
						"id"
					],
					"update": [
						"download_progress",
						"status",
						"is_provided_by__release"
					]
				},
				"image__is_part_of__release": {
					"create": [
						"image",
						"is_part_of__release"
					],
					"read": [
						"id",
						"created_at",
						"image",
						"is_part_of__release"
					],
					"update": []
				},
				"image_label": {
					"read": [
						"id",
						"created_at",
						"release_image",
						"label_name",
						"value"
					],
					"create": [
						"label_name",
						"value",
						"release_image"
					],
					"update": [
						"value"
					]
				},
				"invitee": {
					"read": [
						"id",
						"email"
					],
					"create": [
						"email"
					]
				},
				"oauth_application_authorization": {
					"read": [
						"belongs_to__user",
						"is_for__oauth_application",
						"id"
					],
					"create": [
						"belongs_to__user",
						"is_for__oauth_application",
						"id"
					]
				},
				"oauth_application": {
					"read": [
						"name",
						"description",
						"id",
						"client_id",
						"redirect_uri"
					]
				},
				"organization": {
					"read": [
						"id",
						"created_at",
						"name",
						"handle",
						"company_name",
						"website",
						"industry",
						"billing_account_code",
						"has_past_due_invoice_since__date"
					],
					"create": [
						"name",
						"company_name",
						"website",
						"industry",
						"handle"
					],
					"update": [
						"name",
						"company_name",
						"website",
						"industry"
					]
				},
				"organization__has_private_access_to__device_type": {
					"read": [
						"id",
						"organization",
						"has_private_access_to__device_type"
					]
				},
				"organization_membership": {
					"read": [
						"id",
						"created_at",
						"user",
						"is_member_of__organization",
						"organization_membership_role",
						"effective_seat_role"
					],
					"create": [
						"user",
						"is_member_of__organization",
						"organization_membership_role"
					],
					"update": [
						"organization_membership_role"
					]
				},
				"organization_membership_role": {
					"read": [
						"id",
						"name"
					]
				},
				"organization_membership_tag": {
					"read": [
						"id",
						"organization_membership",
						"tag_key",
						"value"
					],
					"create": [
						"organization_membership",
						"tag_key",
						"value"
					],
					"update": [
						"value"
					]
				},
				"plan": {
					"read": [
						"id",
						"title",
						"billing_code",
						"monthly_price",
						"annual_price",
						"can_self_serve",
						"is_legacy"
					]
				},
				"plan_addon": {
					"read": [
						"id",
						"base_price",
						"offers__feature",
						"can_self_serve",
						"bills_dynamically"
					]
				},
				"plan__has__discount_code": {
					"read": [
						"id",
						"plan",
						"discount_code"
					]
				},
				"plan_feature": {
					"read": [
						"id",
						"provides__feature",
						"quantity"
					]
				},
				"recovery_two_factor": {
					"read": [
						"id",
						"belongs_to__user",
						"used_timestamp"
					]
				},
				"release": {
					"read": [
						"id",
						"created_at",
						"belongs_to__application",
						"is_created_by__user",
						"commit",
						"composition",
						"status",
						"source",
						"build_log",
						"start_timestamp",
						"end_timestamp",
						"update_timestamp",
						"is_invalidated",
						"release_version",
						"is_passing_tests",
						"contract",
						"semver",
						"semver_major",
						"semver_minor",
						"semver_patch",
						"revision",
						"is_final",
						"is_finalized_at__date",
						"known_issue_list",
						"note",
						"invalidation_reason"
					],
					"explicitRead": [
						"raw_version",
						"version"
					],
					"create": [
						"belongs_to__application",
						"is_created_by__user",
						"commit",
						"composition",
						"status",
						"source",
						"build_log",
						"start_timestamp",
						"end_timestamp",
						"update_timestamp",
						"is_invalidated",
						"release_version",
						"is_passing_tests",
						"contract",
						"semver",
						"semver_major",
						"semver_minor",
						"semver_patch",
						"is_final",
						"known_issue_list",
						"note",
						"invalidation_reason"
					],
					"update": [
						"belongs_to__application",
						"is_created_by__user",
						"commit",
						"composition",
						"status",
						"source",
						"build_log",
						"start_timestamp",
						"end_timestamp",
						"update_timestamp",
						"is_invalidated",
						"release_version",
						"is_passing_tests",
						"statistics_set",
						"semver",
						"semver_major",
						"semver_minor",
						"semver_patch",
						"is_final",
						"known_issue_list",
						"note",
						"invalidation_reason"
					]
				},
				"release_tag": {
					"read": [
						"id",
						"release",
						"tag_key",
						"value"
					],
					"create": [
						"release",
						"tag_key",
						"value"
					],
					"update": [
						"value"
					]
				},
				"service": {
					"create": [
						"application",
						"service_name"
					],
					"read": [
						"created_at",
						"application",
						"service_name",
						"id"
					],
					"update": [
						"application",
						"service_name"
					]
				},
				"service_environment_variable": {
					"read": [
						"created_at",
						"service",
						"name",
						"value",
						"id"
					],
					"create": [
						"service",
						"name",
						"value"
					],
					"update": [
						"value"
					]
				},
				"service_install": {
					"create": [
						"device",
						"installs__service"
					],
					"read": [
						"created_at",
						"device",
						"installs__service",
						"id"
					],
					"update": []
				},
				"service_instance": {
					"read": [
						"id",
						"ip_address"
					]
				},
				"service_label": {
					"read": [
						"id",
						"created_at",
						"service",
						"label_name",
						"value"
					],
					"create": [
						"label_name",
						"value",
						"service"
					],
					"update": [
						"value"
					]
				},
				"subscription": {
					"read": [
						"id",
						"starts_on__date",
						"ends_on__date",
						"is_for__plan",
						"is_for__organization",
						"discount_percentage",
						"billing_cycle",
						"origin",
						"is_active"
					],
					"update": [
						"ends_on__date",
						"is_for__plan"
					],
					"create": [
						"starts_on__date",
						"ends_on__date",
						"is_for__plan",
						"is_for__organization",
						"discount_percentage",
						"billing_cycle",
						"origin"
					]
				},
				"subscription_prepaid_addon": {
					"read": [
						"id",
						"is_for__subscription",
						"is_for__plan_addon",
						"discount_percentage",
						"quantity",
						"starts_on__date",
						"expires_on__date"
					]
				},
				"subscription_addon_discount": {
					"read": [
						"id",
						"subscription",
						"discounts__plan_addon",
						"discount_percentage"
					]
				},
				"supervisor_release": {
					"read": [
						"id",
						"supervisor_version",
						"is_for__device_type",
						"image_name"
					]
				},
				"support_feature": {
					"read": [
						"id",
						"feature",
						"support_tier"
					]
				},
				"support_tier": {
					"read": [
						"id",
						"title",
						"slug",
						"includes_private_support",
						"includes__SLA"
					]
				},
				"team": {
					"read": [
						"id",
						"created_at",
						"name",
						"description",
						"belongs_to__organization"
					],
					"create": [
						"name",
						"description",
						"belongs_to__organization"
					],
					"update": [
						"name",
						"description"
					]
				},
				"team_membership": {
					"read": [
						"id",
						"created_at",
						"user",
						"is_member_of__team"
					],
					"create": [
						"user",
						"is_member_of__team"
					]
				},
				"team_application_access": {
					"read": [
						"id",
						"created_at",
						"team",
						"grants_access_to__application",
						"application_membership_role"
					],
					"create": [
						"team",
						"grants_access_to__application",
						"application_membership_role"
					],
					"update": [
						"application_membership_role"
					]
				},
				"user": {
					"read": [
						"id",
						"actor",
						"username",
						"created_at",
						"has_legacy_link_to__organization"
					],
					"update": [
						"has_been_sent_verification_email"
					]
				},
				"user__has_direct_access_to__application": {
					"read": [
						"id",
						"user",
						"has_direct_access_to__application"
					]
				},
				"user__has__public_key": {
					"create": [
						"user",
						"title",
						"public_key"
					],
					"read": [
						"id",
						"user",
						"title",
						"public_key",
						"created_at"
					]
				},
				"invitee__is_invited_to__organization": {
					"create": [
						"invitee",
						"message",
						"is_invited_to__organization",
						"organization_membership_role"
					],
					"read": [
						"id",
						"message",
						"invitee",
						"is_invited_to__organization",
						"is_created_by__user",
						"organization_membership_role"
					],
					"update": [
						"organization_membership_role"
					]
				},
				"invitee__is_invited_to__application": {
					"create": [
						"invitee",
						"message",
						"is_invited_to__application",
						"application_membership_role"
					],
					"read": [
						"id",
						"message",
						"invitee",
						"is_created_by__user",
						"is_invited_to__application",
						"application_membership_role"
					],
					"update": [
						"application_membership_role"
					]
				},
				"user__is_member_of__application": {
					"create": [
						"user",
						"is_member_of__application",
						"application_membership_role"
					],
					"read": [
						"id",
						"user",
						"is_member_of__application",
						"application_membership_role"
					],
					"update": [
						"application_membership_role"
					]
				}
			}
		}
	},
	"authRoles": {
		"provisioning-api-key": [
			"resin.device.create?belongs_to__application/any(a:a/actor eq @__ACTOR_ID)",
			"resin.device_type.read?is_private eq false or is_accessible_privately_by__organization/any(dta:dta/organization/any(o:o/application/any(a:a/actor eq @__ACTOR_ID)))"
		],
		"named-user-api-key": [
			"resin.application_domain_mapping.read?application/canAccess()",
			"resin.application_domain_mapping.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_domain_mapping.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_domain_mapping.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_type.read",
			"resin.application.create?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.application.read?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,,)) or team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,,))",
			"resin.application.update?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())",
			"resin.application.delete?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.application.push?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())",
			"resin.application.create-provisioning-api-key?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))",
			"resin.application.deactivate-device?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))",
			"resin.application__can_use__application_as_host.read?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,,)))",
			"resin.application_membership_role.read",
			"resin.organization_membership_role.read",
			"resin.organization.create",
			"resin.organization.read?organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID))",
			"resin.organization.update?organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())",
			"resin.organization.delete?organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()) and not (includes_legacy_link_to__user/$count eq 1)",
			"resin.organization__has_private_access_to__device_type.delete?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.organization__has_private_access_to__device_type.read?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID)))",
			"resin.team.read?team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID)) or belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.team.create?belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.team.update?belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.team.delete?belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.organization_membership.read?user/any(u:u/actor eq @__ACTOR_ID) or is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.organization_membership.delete?user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.organization_membership.create?is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.organization_membership.update?is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.organization_membership.delete?is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.organization_membership_tag.read?organization_membership/any(om:om/is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.organization_membership_tag.create?organization_membership/any(om:om/is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.organization_membership_tag.update?organization_membership/any(om:om/is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.organization_membership_tag.delete?organization_membership/any(om:om/is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_membership.read?user/any(u:u/actor eq @__ACTOR_ID) or is_member_of__team/any(t:t/belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_membership.delete?user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.team_membership.create?is_member_of__team/any(t:t/belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_membership.update?is_member_of__team/any(t:t/belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_membership.delete?is_member_of__team/any(t:t/belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.user__is_member_of__application.read?user/any(u:u/actor eq @__ACTOR_ID) or is_member_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.user__is_member_of__application.delete?user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.user__is_member_of__application.create?is_member_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.user__is_member_of__application.update?is_member_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.user__is_member_of__application.delete?is_member_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.user__has_direct_access_to__application.read?application/canAccess()",
			"resin.invitee.read?application_invite/canAccess() or organization_invite/canAccess()",
			"resin.invitee__is_invited_to__application.read?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.invitee__is_invited_to__application.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.invitee__is_invited_to__application.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.invitee__is_invited_to__application.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.invitee__is_invited_to__organization.read?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.invitee__is_invited_to__organization.create?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.invitee__is_invited_to__organization.update?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.invitee__is_invited_to__organization.delete?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.team_application_access.read?team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID)))",
			"resin.team_application_access.read?grants_access_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_application_access.create?grants_access_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_application_access.update?grants_access_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_application_access.delete?grants_access_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.subscription.read?is_for__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID)))",
			"resin.subscription_prepaid_addon.read?is_for__subscription/any(s:s/is_for__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.subscription__discounts__plan_addon.read?subscription/any(s:s/is_for__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.plan.read",
			"resin.plan_addon.read",
			"resin.plan_feature.read",
			"resin.plan__has__discount_code.read",
			"resin.feature.read",
			"resin.support_feature.read",
			"resin.support_tier.read",
			"resin.application_config_variable.read?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,,)))",
			"resin.application_config_variable.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_config_variable.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_config_variable.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_tag.read?application/canAccess()",
			"resin.application_tag.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_tag.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_tag.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.service_instance.read?service_type eq 'vpn' and manages__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device.ssh?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.ssh-host?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.tunnel-80?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.tunnel-443?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.tunnel-8080?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.tunnel-22222?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.tunnel-48484?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.tunnel-any?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.create?(belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__user eq null) and belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.read?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,,)))",
			"resin.device.update?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.delete?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.create-device-api-key?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device_config_variable.read?device/canAccess()",
			"resin.device_config_variable.create?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_config_variable.update?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_config_variable.delete?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_type.read?is_private eq false or is_accessible_privately_by__organization/any(dta:dta/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID))))",
			"resin.device_family.read?has__device_type/canAccess()",
			"resin.device_manufacturer.read?manufactures__device_family/canAccess()",
			"resin.device_tag.read?device/canAccess()",
			"resin.device_tag.create?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_tag.update?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_tag.delete?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_domain_mapping.read?device/canAccess()",
			"resin.device_domain_mapping.create?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_domain_mapping.update?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_domain_mapping.delete?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.social_service_account.all?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.user__has__public_key.all?user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.event.create?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.user.read?organization_membership/any(om:om/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or (om/organization_membership_role in () and om/organization/any(o:o/application/any(a:a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,,))))))",
			"resin.user.read?organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())",
			"resin.user.read?actor eq @__ACTOR_ID",
			"resin.user.update?actor eq @__ACTOR_ID",
			"resin.user.delete?actor eq @__ACTOR_ID",
			"resin.actor.read?id eq @__ACTOR_ID or is_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))) or is_of__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.actor.delete?id eq @__ACTOR_ID",
			"resin.release.read?belongs_to__application/canAccess()",
			"resin.release.create?belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.release.update?belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.release.delete?belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.release_tag.read?release/canAccess()",
			"resin.release_tag.create?release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.release_tag.update?release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.release_tag.delete?release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image_download.delete?belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))) or belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.recovery_two_factor.read?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.oauth_application.read",
			"resin.oauth_application_authorization.read?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.oauth_application_authorization.delete?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.oauth_application_authorization.create?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.api_key.read?is_of__actor eq @__ACTOR_ID or is_of__actor/any(act:act/is_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))) or act/is_of__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.api_key.update?is_of__actor/any(act:act/is_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))) or act/is_of__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.api_key.delete?is_of__actor/any(act:act/is_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))) or act/is_of__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.service.read?application/canAccess()",
			"resin.service.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.service.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.service.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.image.read?is_a_build_of__service/canAccess()",
			"resin.image.create?is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image.update?is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image.delete?is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image_install.read?installs__image/canAccess()",
			"resin.image_install.create?installs__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.image_install.update?installs__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.image_install.delete?installs__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.image_install.delete?device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.service_install.read?installs__service/canAccess()",
			"resin.service_install.create?installs__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))) or s/is_built_by__image/any(i:i/image__is_part_of__release/any(ipr:ipr/is_part_of__release/any(r:r/should_manage__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))))))",
			"resin.service_install.delete?installs__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))) or device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.service_install.update?installs__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.service_environment_variable.read?service/canAccess()",
			"resin.service_environment_variable.create?service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.service_environment_variable.update?service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.service_environment_variable.delete?service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.device_service_environment_variable.read?service_install/any(si:si/service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,,)))))",
			"resin.device_service_environment_variable.create?service_install/any(si:si/service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.device_service_environment_variable.update?service_install/any(si:si/service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.device_service_environment_variable.delete?service_install/any(si:si/service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.device_environment_variable.read?device/canAccess()",
			"resin.device_environment_variable.create?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_environment_variable.update?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_environment_variable.delete?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.application_environment_variable.read?application/canAccess()",
			"resin.application_environment_variable.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_environment_variable.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_environment_variable.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.build_environment_variable.read?application/canAccess()",
			"resin.build_environment_variable.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.build_environment_variable.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.build_environment_variable.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.image_label.read?release_image/canAccess()",
			"resin.image_label.create?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.image_label.update?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.image_label.delete?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.service_label.read?service/canAccess()",
			"resin.service_label.create?service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.service_label.update?service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.service_label.delete?service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image__is_part_of__release.read?is_part_of__release/canAccess()",
			"resin.image__is_part_of__release.create?is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image__is_part_of__release.update?is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image__is_part_of__release.delete?is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image_environment_variable.read?release_image/canAccess()",
			"resin.image_environment_variable.create?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.image_environment_variable.update?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.image_environment_variable.delete?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.gateway_download.read?is_downloaded_by__device/canAccess()",
			"resin.gateway_download.create?is_downloaded_by__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.gateway_download.update?is_downloaded_by__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.gateway_download.delete?is_downloaded_by__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image.push?is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.delta.read?produces__image/any(i:i/is_a_build_of__service/any(s:s/application/canAccess())) and (originates_from__image eq null or originates_from__image/any(i:i/is_a_build_of__service/any(s:s/application/canAccess())))",
			"resin.delta.create?produces__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))) and (originates_from__image eq null or originates_from__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))))",
			"resin.delta.update?produces__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))) and (originates_from__image eq null or originates_from__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))))",
			"resin.delta.delete?produces__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))) or originates_from__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.application.read?is_public eq true and is_for__device_type/any(dt:dt/is_private eq false or is_accessible_privately_by__organization/any(dta:dta/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID)))))",
			"resin.public_organization.read?application/any(a:a/is_public eq true and a/is_for__device_type/any(dt:dt/is_private eq false or is_accessible_privately_by__organization/any(dta:dta/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID))))))"
		],
		"device-api-key": [
			"resin.device_type.read?describes__device/canAccess()",
			"resin.device.read?actor eq @__ACTOR_ID",
			"resin.device.update?actor eq @__ACTOR_ID",
			"resin.application.read?owns__device/canAccess() or depends_on__application/canAccess(1) or ((is_host eq true or is_public eq true) and is_for__device_type/any(dt:dt/describes__device/canAccess()))",
			"resin.application_tag.read?application/canAccess()",
			"resin.device_config_variable.read?device/canAccess()",
			"resin.device_config_variable.create?device/any(d:d/actor eq @__ACTOR_ID)",
			"resin.device_config_variable.update?device/any(d:d/actor eq @__ACTOR_ID)",
			"resin.device_tag.read?device/any(d:d/actor eq @__ACTOR_ID)",
			"resin.device_tag.create?device/any(d:d/actor eq @__ACTOR_ID)",
			"resin.device_tag.update?device/any(d:d/actor eq @__ACTOR_ID)",
			"resin.application_config_variable.read?application/canAccess()",
			"resin.release.read?should_be_running_on__device/canAccess() or belongs_to__application/canAccess()",
			"resin.release_tag.read?release/canAccess()",
			"resin.device_environment_variable.read?device/canAccess()",
			"resin.device_environment_variable.create?device/any(d:d/actor eq @__ACTOR_ID)",
			"resin.device_environment_variable.update?device/any(d:d/actor eq @__ACTOR_ID)",
			"resin.device_environment_variable.delete?device/any(d:d/actor eq @__ACTOR_ID)",
			"resin.application_environment_variable.read?application/canAccess()",
			"resin.device.read?is_managed_by__device/canAccess(1) or belongs_to__application/any(a:a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID)))",
			"resin.device.create?belongs_to__application/any(a:a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID)))",
			"resin.device.update?belongs_to__application/any(a:a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID)))",
			"resin.service.read?application/canAccess() or service_install/canAccess()",
			"resin.service_install.read?device/canAccess()",
			"resin.service_install.create?device/any(d:d/actor eq @__ACTOR_ID or d/belongs_to__application/any(a:a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID))))",
			"resin.service_install.update?device/any(d:d/actor eq @__ACTOR_ID or d/belongs_to__application/any(a:a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID))))",
			"resin.service_install.delete?device/any(d:d/actor eq @__ACTOR_ID or d/belongs_to__application/any(a:a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID))))",
			"resin.service_environment_variable.read?service/canAccess()",
			"resin.device_service_environment_variable.read?service_install/canAccess()",
			"resin.device_service_environment_variable.create?service_install/any(si:si/device/any(d:d/actor eq @__ACTOR_ID))",
			"resin.device_service_environment_variable.update?service_install/any(si:si/device/any(d:d/actor eq @__ACTOR_ID))",
			"resin.device_service_environment_variable.delete?service_install/any(si:si/device/any(d:d/actor eq @__ACTOR_ID))",
			"resin.image__is_part_of__release.read?is_part_of__release/canAccess()",
			"resin.image.read?image_install/canAccess() or image__is_part_of__release/canAccess()",
			"resin.image_install.read?device/canAccess()",
			"resin.image_install.create?device/any(d:d/actor eq @__ACTOR_ID or d/is_managed_by__device/any(md:md/actor eq @__ACTOR_ID)) and installs__image/any(i:i/image__is_part_of__release/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/owns__device/any(d:d/actor eq @__ACTOR_ID) or a/is_public eq true or a/is_host eq true))))",
			"resin.image_install.update?device/any(d:d/actor eq @__ACTOR_ID or d/is_managed_by__device/any(md:md/actor eq @__ACTOR_ID))",
			"resin.image_label.read?release_image/canAccess()",
			"resin.service_label.read?service/canAccess()",
			"resin.image_environment_variable.read?release_image/canAccess()",
			"resin.gateway_download.read?image/canAccess()",
			"resin.gateway_download.create?image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID)) or a/owns__device/any(d:d/is_managed_by__device/any(md:md/actor eq @__ACTOR_ID)))))",
			"resin.gateway_download.update?image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID)) or a/owns__device/any(d:d/is_managed_by__device/any(md:md/actor eq @__ACTOR_ID)))))",
			"resin.gateway_download.delete?image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID)) or a/owns__device/any(d:d/is_managed_by__device/any(md:md/actor eq @__ACTOR_ID)))))",
			"resin.device.write-log?actor eq @__ACTOR_ID",
			"resin.delta.read?produces__image/any(i:i/image__is_part_of__release/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/owns__device/any(d:d/actor eq @__ACTOR_ID or d/is_managed_by__device/any(md:md/actor eq @__ACTOR_ID)) or (a/is_public eq true and a/is_for__device_type/any(dt:dt/is_private eq false or dt/describes__device/any(dd:dd/actor eq @__ACTOR_ID))))))) and (originates_from__image eq null or originates_from__image/any(i:i/image__is_part_of__release/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/owns__device/any(d:d/actor eq @__ACTOR_ID or d/is_managed_by__device/any(md:md/actor eq @__ACTOR_ID)) or (a/is_public eq true and a/is_for__device_type/any(dt:dt/is_private eq false or dt/describes__device/any(dd:dd/actor eq @__ACTOR_ID)))))) or i/image_install/any(ii:ii/device/any(d:d/actor eq @__ACTOR_ID or d/is_managed_by__device/any(md:md/actor eq @__ACTOR_ID)))))",
			"resin.device_domain_mapping.read?device/any(d:d/actor eq @__ACTOR_ID)",
			"resin.user.read?organization_membership/any(om:(om/organization_membership_role in () and om/organization/any(o:o/application/any(a:a/owns__device/any(d:d/actor eq @__ACTOR_ID) or a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID))))) or om/user/any(u:user__is_member_of__application/any(uma:uma/application_membership_role in () and uma/is_member_of__application/any(a:a/owns__device/any(d:d/actor eq @__ACTOR_ID) or a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID))))))",
			"resin.user__has__public_key.read?user/any(u:u/organization_membership/any(om:(om/organization_membership_role in () and om/organization/any(o:o/application/any(a:a/owns__device/any(d:d/actor eq @__ACTOR_ID) or a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID))))) or om/user/any(u:user__is_member_of__application/any(uma:uma/application_membership_role in () and uma/is_member_of__application/any(a:a/owns__device/any(d:d/actor eq @__ACTOR_ID) or a/depends_on__application/any(da:da/owns__device/any(d:d/actor eq @__ACTOR_ID)))))))",
			"resin.geocoder"
		],
		"default-user": [
			"resin.application_domain_mapping.read?application/canAccess()",
			"resin.application_domain_mapping.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_domain_mapping.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_domain_mapping.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_type.read",
			"resin.application.create?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.application.read?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,,)) or team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,,))",
			"resin.application.update?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())",
			"resin.application.delete?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.application.push?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())",
			"resin.application.create-provisioning-api-key?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))",
			"resin.application.deactivate-device?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))",
			"resin.application__can_use__application_as_host.read?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,,)))",
			"resin.application_membership_role.read",
			"resin.organization_membership_role.read",
			"resin.organization.create",
			"resin.organization.read?organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID))",
			"resin.organization.update?organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())",
			"resin.organization.delete?organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()) and not (includes_legacy_link_to__user/$count eq 1)",
			"resin.organization__has_private_access_to__device_type.delete?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.organization__has_private_access_to__device_type.read?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID)))",
			"resin.team.read?team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID)) or belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.team.create?belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.team.update?belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.team.delete?belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.organization_membership.read?user/any(u:u/actor eq @__ACTOR_ID) or is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.organization_membership.delete?user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.organization_membership.create?is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.organization_membership.update?is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.organization_membership.delete?is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.organization_membership_tag.read?organization_membership/any(om:om/is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.organization_membership_tag.create?organization_membership/any(om:om/is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.organization_membership_tag.update?organization_membership/any(om:om/is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.organization_membership_tag.delete?organization_membership/any(om:om/is_member_of__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_membership.read?user/any(u:u/actor eq @__ACTOR_ID) or is_member_of__team/any(t:t/belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_membership.delete?user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.team_membership.create?is_member_of__team/any(t:t/belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_membership.update?is_member_of__team/any(t:t/belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_membership.delete?is_member_of__team/any(t:t/belongs_to__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.user__is_member_of__application.read?user/any(u:u/actor eq @__ACTOR_ID) or is_member_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.user__is_member_of__application.delete?user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.user__is_member_of__application.create?is_member_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.user__is_member_of__application.update?is_member_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.user__is_member_of__application.delete?is_member_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.user__has_direct_access_to__application.read?application/canAccess()",
			"resin.invitee.read?application_invite/canAccess() or organization_invite/canAccess()",
			"resin.invitee__is_invited_to__application.read?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.invitee__is_invited_to__application.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.invitee__is_invited_to__application.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.invitee__is_invited_to__application.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.invitee__is_invited_to__organization.read?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.invitee__is_invited_to__organization.create?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.invitee__is_invited_to__organization.update?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.invitee__is_invited_to__organization.delete?organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))",
			"resin.team_application_access.read?team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID)))",
			"resin.team_application_access.read?grants_access_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_application_access.create?grants_access_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_application_access.update?grants_access_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.team_application_access.delete?grants_access_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.subscription.read?is_for__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID)))",
			"resin.subscription_prepaid_addon.read?is_for__subscription/any(s:s/is_for__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.subscription__discounts__plan_addon.read?subscription/any(s:s/is_for__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.plan.read",
			"resin.plan_addon.read",
			"resin.plan_feature.read",
			"resin.plan__has__discount_code.read",
			"resin.feature.read",
			"resin.support_feature.read",
			"resin.support_tier.read",
			"resin.application_config_variable.read?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,,)))",
			"resin.application_config_variable.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_config_variable.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_config_variable.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_tag.read?application/canAccess()",
			"resin.application_tag.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_tag.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_tag.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.service_instance.read?service_type eq 'vpn' and manages__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device.ssh?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.ssh-host?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.tunnel-80?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.tunnel-443?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.tunnel-8080?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.tunnel-22222?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.tunnel-48484?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.tunnel-any?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.create?(belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__user eq null) and belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.read?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,,)))",
			"resin.device.update?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.delete?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.create-device-api-key?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device_config_variable.read?device/canAccess()",
			"resin.device_config_variable.create?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_config_variable.update?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_config_variable.delete?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_type.read?is_private eq false or is_accessible_privately_by__organization/any(dta:dta/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID))))",
			"resin.device_family.read?has__device_type/canAccess()",
			"resin.device_manufacturer.read?manufactures__device_family/canAccess()",
			"resin.device_tag.read?device/canAccess()",
			"resin.device_tag.create?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_tag.update?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_tag.delete?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_domain_mapping.read?device/canAccess()",
			"resin.device_domain_mapping.create?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_domain_mapping.update?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_domain_mapping.delete?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.social_service_account.all?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.user__has__public_key.all?user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.event.create?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.user.read?organization_membership/any(om:om/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or (om/organization_membership_role in () and om/organization/any(o:o/application/any(a:a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,,))))))",
			"resin.user.read?organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())",
			"resin.user.read?actor eq @__ACTOR_ID",
			"resin.user.update?actor eq @__ACTOR_ID",
			"resin.user.delete?actor eq @__ACTOR_ID",
			"resin.actor.read?id eq @__ACTOR_ID or is_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))) or is_of__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.actor.delete?id eq @__ACTOR_ID",
			"resin.release.read?belongs_to__application/canAccess()",
			"resin.release.create?belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.release.update?belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.release.delete?belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.release_tag.read?release/canAccess()",
			"resin.release_tag.create?release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.release_tag.update?release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.release_tag.delete?release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image_download.delete?belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ()))) or belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.recovery_two_factor.read?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.oauth_application.read",
			"resin.oauth_application_authorization.read?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.oauth_application_authorization.delete?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.oauth_application_authorization.create?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.api_key.read?is_of__actor eq @__ACTOR_ID or is_of__actor/any(act:act/is_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))) or act/is_of__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.api_key.update?is_of__actor/any(act:act/is_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))) or act/is_of__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.api_key.delete?is_of__actor/any(act:act/is_of__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))) or act/is_of__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.service.read?application/canAccess()",
			"resin.service.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.service.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.service.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.image.read?is_a_build_of__service/canAccess()",
			"resin.image.create?is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image.update?is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image.delete?is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image_install.read?installs__image/canAccess()",
			"resin.image_install.create?installs__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.image_install.update?installs__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.image_install.delete?installs__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.image_install.delete?device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.service_install.read?installs__service/canAccess()",
			"resin.service_install.create?installs__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))) or s/is_built_by__image/any(i:i/image__is_part_of__release/any(ipr:ipr/is_part_of__release/any(r:r/should_manage__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))))))",
			"resin.service_install.delete?installs__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))) or device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.service_install.update?installs__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.service_environment_variable.read?service/canAccess()",
			"resin.service_environment_variable.create?service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.service_environment_variable.update?service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.service_environment_variable.delete?service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.device_service_environment_variable.read?service_install/any(si:si/service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,,)))))",
			"resin.device_service_environment_variable.create?service_install/any(si:si/service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.device_service_environment_variable.update?service_install/any(si:si/service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.device_service_environment_variable.delete?service_install/any(si:si/service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.device_environment_variable.read?device/canAccess()",
			"resin.device_environment_variable.create?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_environment_variable.update?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.device_environment_variable.delete?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID) or d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))",
			"resin.application_environment_variable.read?application/canAccess()",
			"resin.application_environment_variable.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_environment_variable.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.application_environment_variable.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.build_environment_variable.read?application/canAccess()",
			"resin.build_environment_variable.create?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.build_environment_variable.update?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.build_environment_variable.delete?application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))",
			"resin.image_label.read?release_image/canAccess()",
			"resin.image_label.create?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.image_label.update?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.image_label.delete?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.service_label.read?service/canAccess()",
			"resin.service_label.create?service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.service_label.update?service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.service_label.delete?service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image__is_part_of__release.read?is_part_of__release/canAccess()",
			"resin.image__is_part_of__release.create?is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image__is_part_of__release.update?is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image__is_part_of__release.delete?is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image_environment_variable.read?release_image/canAccess()",
			"resin.image_environment_variable.create?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.image_environment_variable.update?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.image_environment_variable.delete?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ()))))",
			"resin.gateway_download.read?is_downloaded_by__device/canAccess()",
			"resin.gateway_download.create?is_downloaded_by__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.gateway_download.update?is_downloaded_by__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.gateway_download.delete?is_downloaded_by__device/any(d:d/belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.image.push?is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))",
			"resin.delta.read?produces__image/any(i:i/is_a_build_of__service/any(s:s/application/canAccess())) and (originates_from__image eq null or originates_from__image/any(i:i/is_a_build_of__service/any(s:s/application/canAccess())))",
			"resin.delta.create?produces__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))) and (originates_from__image eq null or originates_from__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))))",
			"resin.delta.update?produces__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))) and (originates_from__image eq null or originates_from__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in ()) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in ())))))",
			"resin.delta.delete?produces__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,))))) or originates_from__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))))",
			"resin.application.read?is_public eq true and is_for__device_type/any(dt:dt/is_private eq false or is_accessible_privately_by__organization/any(dta:dta/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID)))))",
			"resin.public_organization.read?application/any(a:a/is_public eq true and a/is_for__device_type/any(dt:dt/is_private eq false or is_accessible_privately_by__organization/any(dta:dta/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID))))))",
			"auth.create_token",
			"resin.user.create-user-api-key?actor eq @__ACTOR_ID",
			"resin.user.create-named-user-api-key?actor eq @__ACTOR_ID",
			"resin.api_key.update?is_of__actor eq @__ACTOR_ID",
			"resin.api_key.delete?is_of__actor eq @__ACTOR_ID",
			"resin.user.create-billing-read?actor eq @__ACTOR_ID"
		],
		"admin": [
			"admin.home",
			"admin.login_as_user",
			"resin.user.create-global-billing-read?actor eq @__ACTOR_ID",
			"resin.user.create-global-supervisor-mgmt?actor eq @__ACTOR_ID",
			"resin.device.read",
			"resin.device.ssh",
			"resin.device.ssh-host",
			"resin.device.tunnel-80",
			"resin.device.tunnel-443",
			"resin.device.tunnel-8080",
			"resin.device.tunnel-22222",
			"resin.device.tunnel-48484",
			"resin.application.read",
			"resin.event.read",
			"resin.release.read",
			"resin.image.read",
			"resin.image_install.read",
			"resin.service_install.read",
			"resin.image__is_part_of__release.read",
			"resin.gateway_download.read",
			"resin.image_label.read",
			"resin.service_label.read",
			"resin.application_type.read",
			"resin.application_config_variable.read",
			"resin.device_config_variable.read",
			"resin.application_environment_variable.read",
			"resin.build_environment_variable.read",
			"resin.device_environment_variable.read",
			"resin.service_environment_variable.read",
			"resin.device_service_environment_variable.read",
			"resin.image_environment_variable.read",
			"resin.service.read",
			"resin.application_tag.read",
			"resin.device_tag.read",
			"resin.release_tag.read",
			"resin.csp_report.read",
			"resin.csp_report.delete",
			"resin.config.all",
			"resin.oauth_application.all",
			"resin.user.read",
			"resin.user.update",
			"resin.role.read",
			"resin.permission.read",
			"resin.billing_plan.read",
			"resin.role__has__permission.read",
			"resin.plan.read",
			"resin.plan_addon.read",
			"resin.plan_feature.read",
			"resin.subscription.read",
			"resin.subscription.create",
			"resin.subscription.update",
			"resin.subscription.delete",
			"resin.subscription_prepaid_addon.read",
			"resin.subscription_prepaid_addon.create",
			"resin.subscription_prepaid_addon.delete",
			"resin.subscription__discounts__plan_addon.read",
			"resin.subscription__discounts__plan_addon.create",
			"resin.subscription__discounts__plan_addon.update",
			"resin.subscription__discounts__plan_addon.delete",
			"resin.feature.read",
			"resin.user__has__role.all",
			"resin.user__has__permission.all",
			"resin.delta.read",
			"resin.application_membership_role.read",
			"resin.organization.all",
			"resin.organization_membership.all",
			"resin.organization_membership_role.read",
			"resin.organization_membership_tag.read",
			"resin.user__is_member_of__application.read",
			"resin.invitee__is_invited_to__application.read",
			"resin.invitee__is_invited_to__organization.read",
			"resin.team.read",
			"resin.team_membership.read",
			"resin.team_application_access.read",
			"resin.device_type.all",
			"resin.device_family.all",
			"resin.device_manufacturer.all",
			"resin.cpu_architecture.all",
			"resin.organization__has_private_access_to__device_type.all"
		],
		"support-agent": [
			"support.home",
			"resin.user.read",
			"resin.application.read?is_accessible_by_support_until__date gt now() or owns__device/any(d:d/is_accessible_by_support_until__date gt now())",
			"resin.application_config_variable.read?application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now()))",
			"resin.service_environment_variable.read?service/any(s:s/application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now())))",
			"resin.device.read?is_accessible_by_support_until__date gt now() or belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now())",
			"resin.device_config_variable.read?device/any(d:d/is_accessible_by_support_until__date gt now() or d/belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now()))",
			"resin.device_environment_variable.read?device/any(d:d/is_accessible_by_support_until__date gt now() or d/belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now()))",
			"resin.application_environment_variable.read?application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now()))",
			"resin.device_service_environment_variable.read?service_install/any(si:si/device/any(d:d/is_accessible_by_support_until__date gt now() or d/belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now())))",
			"resin.release.read?belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now()))",
			"resin.application_tag.read?application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now()))",
			"resin.device_tag.read?device/any(d:d/is_accessible_by_support_until__date gt now() or d/belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now()))",
			"resin.release_tag.read?release/any(r:r/belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now())))",
			"resin.device.ssh?is_accessible_by_support_until__date gt now() or belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now())",
			"resin.device.ssh-host?is_accessible_by_support_until__date gt now() or belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now())",
			"resin.device.tunnel-80?is_accessible_by_support_until__date gt now() or belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now())",
			"resin.device.tunnel-443?is_accessible_by_support_until__date gt now() or belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now())",
			"resin.device.tunnel-8080?is_accessible_by_support_until__date gt now() or belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now())",
			"resin.device.tunnel-22222?is_accessible_by_support_until__date gt now() or belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now())",
			"resin.device.tunnel-48484?is_accessible_by_support_until__date gt now() or belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now())",
			"resin.image__is_part_of__release.read?is_part_of__release/any(r:r/belongs_to__application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now())))",
			"resin.image.read?is_a_build_of__service/any(s:s/application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now())))",
			"resin.image_environment_variable.read?release_image/any(ipr:ipr/image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now())))))",
			"resin.image_label.read?release_image/any(ipr:ipr/image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now())))))",
			"resin.service_label.read?service/any(s:s/application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now())))",
			"resin.service_install.read?service/any(s:s/application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now())))",
			"resin.image_install.read?installs__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now()))))",
			"resin.gateway_download.read?is_downloaded_by__device/any(d:d/is_accessible_by_support_until__date gt now())",
			"resin.service.read?application/any(a:a/is_accessible_by_support_until__date gt now() or a/owns__device/any(d:d/is_accessible_by_support_until__date gt now()))",
			"resin.delta.read",
			"resin.application_membership_role.read",
			"resin.organization.read",
			"resin.organization_membership.read",
			"resin.organization_membership_role.read",
			"resin.organization_membership_tag.read",
			"resin.user__is_member_of__application.read",
			"resin.team.read",
			"resin.team_membership.read",
			"resin.team_application_access.read"
		],
		"global-supervisor-mgmt": [
			"whitelist.global-supervisor-mgmt",
			"resin.application.read",
			"resin.application.update",
			"resin.device.read",
			"resin.device.update",
			"resin.device_type.read",
			"resin.release.read",
			"resin.service.read",
			"resin.service_install.create",
			"resin.service_install.read",
			"resin.image.read",
			"resin.image__is_part_of__release.read"
		],
		"global-billing-read": [
			"whitelist.global-billing-read",
			"resin.organization.read",
			"resin.subscription.read",
			"resin.subscription_prepaid_addon.read",
			"resin.subscription__discounts__plan_addon.read",
			"resin.plan.read",
			"resin.plan_addon.read",
			"resin.plan_feature.read",
			"resin.plan__has__discount_code.read",
			"resin.feature.read",
			"resin.support_feature.read",
			"resin.support_tier.read"
		],
		"billing-read": [
			"resin.organization.read?organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID))",
			"resin.subscription.read?is_for__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID)))",
			"resin.subscription_prepaid_addon.read?is_for__subscription/any(s:s/is_for__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.subscription__discounts__plan_addon.read?subscription/any(s:s/is_for__organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())))",
			"resin.plan.read",
			"resin.plan_addon.read",
			"resin.plan_feature.read",
			"resin.plan__has__discount_code.read",
			"resin.feature.read",
			"resin.support_feature.read",
			"resin.support_tier.read"
		],
		"user-api-key": [
			"resin.application.read?owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID))",
			"resin.device.create?belongs_to__user/any(u:u/actor eq @__ACTOR_ID) and belongs_to__application/any(a:a/organization/any(o:o/organization_membership/any(om:om/user/any(u:u/actor eq @__ACTOR_ID) and om/organization_membership_role in ())) or a/user__is_member_of__application/any(uma:uma/user/any(u:u/actor eq @__ACTOR_ID) and uma/application_membership_role in (,)) or a/team_application_access/any(taa:taa/team/any(t:t/team_membership/any(tm:tm/user/any(u:u/actor eq @__ACTOR_ID))) and taa/application_membership_role in (,)))",
			"resin.device.read?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.device.update?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.device.create-device-api-key?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.device_config_variable.read?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID))",
			"resin.application_config_variable.read?application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID)))",
			"resin.device_environment_variable.read?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID))",
			"resin.application_environment_variable.read?application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID)))",
			"resin.release.read?belongs_to__application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID)))",
			"resin.service.read?application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID)))",
			"resin.image.read?is_a_build_of__service/any(s:s/application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID))))",
			"resin.image.read?image_install/any(ii:ii/device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID)))",
			"resin.service_install.all?installs__service/any(s:s/application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID))))",
			"resin.device_service_environment_variable.read?service_install/any(si:si/service/any(s:s/application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID)))))",
			"resin.image_label.read?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID)))))",
			"resin.image_environment_variable.read?release_image/any(ipr:ipr/is_part_of__release/any(r:r/belongs_to__application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID)))))",
			"resin.image_install.read?device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID))",
			"resin.image_install.read?installs__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID)))))",
			"resin.image_install.update?installs__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID)))))",
			"resin.image_install.create?installs__image/any(i:i/is_a_build_of__service/any(s:s/application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID)))))",
			"resin.service_environment_variable.read?service/any(s:s/application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID))))",
			"resin.service_label.read?service/any(s:s/application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID))))",
			"resin.image__is_part_of__release.read?is_part_of__release/any(r:r/belongs_to__application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID))))",
			"resin.gateway_download.read?is_downloaded_by__device/any(d:d/belongs_to__application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID))))",
			"resin.gateway_download.create?is_downloaded_by__device/any(d:d/belongs_to__application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID))))",
			"resin.gateway_download.update?is_downloaded_by__device/any(d:d/belongs_to__application/any(a:a/owns__device/any(d:d/belongs_to__user/any(u:u/actor eq @__ACTOR_ID))))",
			"resin.device.write-log?belongs_to__user/any(u:u/actor eq @__ACTOR_ID)",
			"resin.geocoder"
		],
		"restricted-user": [
			"resin.user.read?actor eq @__ACTOR_ID",
			"resin.user.update?actor eq @__ACTOR_ID"
		]
	}
}